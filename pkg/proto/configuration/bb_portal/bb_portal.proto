syntax = "proto3";

package buildbarn.configuration.bb_portal;

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "pkg/proto/configuration/auth/auth.proto";
import "pkg/proto/configuration/blobstore/blobstore.proto";
import "pkg/proto/configuration/global/global.proto";
import "pkg/proto/configuration/grpc/grpc.proto";
import "pkg/proto/configuration/http/http.proto";

option go_package = "github.com/buildbarn/bb-portal/pkg/proto/configuration/bb_portal";

// Postgres database source type.
message PostgresSource {
  // Database connection string for pgx, see:
  // https://pkg.go.dev/github.com/jackc/pgx/v5
  string connection_string = 1;
}

// SQLite database source type.
message SqliteSource {
  // Database connection string for go-sqlite3, see:
  // https://pkg.go.dev/github.com/mattn/go-sqlite3#readme-connection-string
  string connection_string = 1;
}

message Database {
  // Database source type. Currently supported types are SQLite and Postgres.
  oneof source {
    SqliteSource sqlite = 1;
    PostgresSource postgres = 2;
  }
}

message BuildEventStreamService {
  // gRPC servers to spawn to listen for requests from clients.
  repeated buildbarn.configuration.grpc.ServerConfiguration grpc_servers = 1;

  // Configures the database for BES information storage.
  Database database = 2;

  // Directory for blob archive.
  string blob_archive_folder = 3;

  // Enables the BEP file upload endpoint.
  bool enable_bep_file_upload = 4;

  // Enables the Graphql playground.
  bool enable_graphql_playground = 5;

  message SaveTargetDataLevel {
    oneof level {
      // Do not save any target data.
      google.protobuf.Empty none = 1;
      // Save basic target data.
      google.protobuf.Empty basic = 2;
      // Save enriched target data.
      google.protobuf.Empty enriched = 3;
    }
  }

  // Controls whether target data should be saved, and if so, to what extent.
  // NOTE: This is a beta feature, and it will likely change in the future,
  // including what data is stored at each level.
  // NOTE: This does not work correctly with authentication enabled
  // (instanceNameAuthorizer).
  SaveTargetDataLevel save_target_data_level = 6;

  message DatabaseCleanupConfiguration {
    // How often to run the cleanup job. 5% jitter will be applied to
    // avoid accidental synchronization with other instances.
    // Recommended value: '60s'
    google.protobuf.Duration cleanup_interval = 1;

    // If the gRPC connection that uploads BES messages for an invocation
    // has been interrupted and not re-established within this duration,
    // the invocation is considered abandoned, and will be locked to
    // prevent further modifications.
    // Recommended value: '60s'
    google.protobuf.Duration invocation_connection_timeout = 2;

    // If an invocation that has not yet received the last message in the BES
    // stream does not receive any new messages within this duration, the
    // invocation is considered abandoned, and will be locked to prevent further
    // modifications.
    // Recommended value: '3600s' (i.e., 1 hour)
    google.protobuf.Duration invocation_message_timeout = 3;

    // How long to retain data about an invocation after the invocation was
    // either completed or considered abandoned.
    // Recommended value: '604800s' (i.e., 7 days)
    google.protobuf.Duration invocation_retention = 4;
  }

  // Configuration for the internal database cleanup service. This is a
  // required field, as otherwise the database will grow without bounds.
  // If you really want to disable it, just set the cleanup interval to a
  // very high value.
  DatabaseCleanupConfiguration database_cleanup_configuration = 7;
}

message BrowserService {
  buildbarn.configuration.blobstore.BlobAccessConfiguration
      content_addressable_storage = 1;
  buildbarn.configuration.blobstore.BlobAccessConfiguration action_cache = 2;
  buildbarn.configuration.blobstore.BlobAccessConfiguration
      initial_size_class_cache = 3;
  buildbarn.configuration.blobstore.BlobAccessConfiguration
      file_system_access_cache = 4;
}

message SchedulerService {
  // Configures the gRPC-Web proxies that are used from the web UI to
  // communicate with the Buildbarn.
  buildbarn.configuration.grpc.ClientConfiguration build_queue_state_client = 1;

  // Authorizer that is used to determine which instances the user is allowed
  // to access.
  buildbarn.configuration.auth.AuthorizerConfiguration
      kill_operations_authorizer = 2;

  // The page size with which the backend fetches operations from the
  // BuildQueueState API.
  //
  // Recommended value: 500
  uint32 listOperationsPageSize = 3;
}

message ApplicationConfiguration {
  // Configuration for the main HTTP server for the application. All HTTP
  // traffic is routed through this server, including gRPC-Web traffic from the
  // frontend, and the proxy for the frontend UI (if configured).
  repeated buildbarn.configuration.http.ServerConfiguration http_servers = 1;

  // Common configuration options that apply to all Buildbarn binaries.
  buildbarn.configuration.global.Configuration global = 2;

  // Configurations for the various services that are part of the application.
  // If a service is not configured, it will not be started.
  BuildEventStreamService bes_service_configuration = 3;
  BrowserService browser_service_configuration = 4;
  SchedulerService scheduler_service_configuration = 5;

  // Maximum Protobuf message size to unmarshal.
  int64 maximum_message_size_bytes = 6;

  // Authorizer that is used to determine which instances the user is allowed
  // to access resources from.
  buildbarn.configuration.auth.AuthorizerConfiguration
      instance_name_authorizer = 7;

  // URL to proxy frontend reqeusts to. If this is not set or it is an empty
  // string, the frontend proxy will not be started.
  string frontend_proxy_url = 8;

  // Origins that are allowed to make requests to the backend. If this is not
  // configured correctly, it will cause CORS errors in the browser. If the
  // frontend will exclusively be accessed from the same origin as
  // the backend, this should be ignored.
  // Set to "*" to allow all origins.
  repeated string allowed_origins = 9;
}
