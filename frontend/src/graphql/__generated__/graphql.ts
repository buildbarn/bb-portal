/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  Any: { input: any; output: any; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  Duration: { input: any; output: any; }
  Map: { input: any; output: any; }
  Time: { input: any; output: any; }
  UUID: { input: any; output: any; }
  Upload: { input: any; output: any; }
};

export type ActionCacheStatistics = Node & {
  __typename?: 'ActionCacheStatistics';
  actionSummary?: Maybe<ActionSummary>;
  actionSummaryID?: Maybe<Scalars['ID']['output']>;
  hits?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  loadTimeInMs?: Maybe<Scalars['Int']['output']>;
  missDetails?: Maybe<Array<MissDetail>>;
  misses?: Maybe<Scalars['Int']['output']>;
  saveTimeInMs?: Maybe<Scalars['Int']['output']>;
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

/**
 * ActionCacheStatisticsWhereInput is used for filtering ActionCacheStatistics objects.
 * Input was generated by ent.
 */
export type ActionCacheStatisticsWhereInput = {
  /** action_summary_id field predicates */
  actionSummaryID?: InputMaybe<Scalars['ID']['input']>;
  actionSummaryIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionSummaryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionSummaryIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  actionSummaryIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionSummaryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** miss_details edge predicates */
  hasMissDetails?: InputMaybe<Scalars['Boolean']['input']>;
  hasMissDetailsWith?: InputMaybe<Array<MissDetailWhereInput>>;
  /** hits field predicates */
  hits?: InputMaybe<Scalars['Int']['input']>;
  hitsGT?: InputMaybe<Scalars['Int']['input']>;
  hitsGTE?: InputMaybe<Scalars['Int']['input']>;
  hitsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  hitsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  hitsLT?: InputMaybe<Scalars['Int']['input']>;
  hitsLTE?: InputMaybe<Scalars['Int']['input']>;
  hitsNEQ?: InputMaybe<Scalars['Int']['input']>;
  hitsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  hitsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** load_time_in_ms field predicates */
  loadTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  loadTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** misses field predicates */
  misses?: InputMaybe<Scalars['Int']['input']>;
  missesGT?: InputMaybe<Scalars['Int']['input']>;
  missesGTE?: InputMaybe<Scalars['Int']['input']>;
  missesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  missesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  missesLT?: InputMaybe<Scalars['Int']['input']>;
  missesLTE?: InputMaybe<Scalars['Int']['input']>;
  missesNEQ?: InputMaybe<Scalars['Int']['input']>;
  missesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  missesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ActionCacheStatisticsWhereInput>;
  or?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** save_time_in_ms field predicates */
  saveTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  saveTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  saveTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  saveTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** size_in_bytes field predicates */
  sizeInBytes?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sizeInBytesLT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesLTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNEQ?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActionData = Node & {
  __typename?: 'ActionData';
  actionSummary?: Maybe<ActionSummary>;
  actionSummaryID?: Maybe<Scalars['ID']['output']>;
  actionsCreated?: Maybe<Scalars['Int']['output']>;
  actionsExecuted?: Maybe<Scalars['Int']['output']>;
  firstStartedMs?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  lastEndedMs?: Maybe<Scalars['Int']['output']>;
  mnemonic?: Maybe<Scalars['String']['output']>;
  systemTime?: Maybe<Scalars['Int']['output']>;
  userTime?: Maybe<Scalars['Int']['output']>;
};

/**
 * ActionDataWhereInput is used for filtering ActionData objects.
 * Input was generated by ent.
 */
export type ActionDataWhereInput = {
  /** action_summary_id field predicates */
  actionSummaryID?: InputMaybe<Scalars['ID']['input']>;
  actionSummaryIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionSummaryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionSummaryIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  actionSummaryIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionSummaryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actions_created field predicates */
  actionsCreated?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actions_executed field predicates */
  actionsExecuted?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ActionDataWhereInput>>;
  /** first_started_ms field predicates */
  firstStartedMs?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsGT?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsGTE?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  firstStartedMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstStartedMsLT?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsLTE?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  firstStartedMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_ended_ms field predicates */
  lastEndedMs?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsGT?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsGTE?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastEndedMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastEndedMsLT?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsLTE?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastEndedMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mnemonic field predicates */
  mnemonic?: InputMaybe<Scalars['String']['input']>;
  mnemonicContains?: InputMaybe<Scalars['String']['input']>;
  mnemonicContainsFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicEqualFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicGT?: InputMaybe<Scalars['String']['input']>;
  mnemonicGTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mnemonicIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mnemonicLT?: InputMaybe<Scalars['String']['input']>;
  mnemonicLTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicNEQ?: InputMaybe<Scalars['String']['input']>;
  mnemonicNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ActionDataWhereInput>;
  or?: InputMaybe<Array<ActionDataWhereInput>>;
  /** system_time field predicates */
  systemTime?: InputMaybe<Scalars['Int']['input']>;
  systemTimeGT?: InputMaybe<Scalars['Int']['input']>;
  systemTimeGTE?: InputMaybe<Scalars['Int']['input']>;
  systemTimeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  systemTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  systemTimeLT?: InputMaybe<Scalars['Int']['input']>;
  systemTimeLTE?: InputMaybe<Scalars['Int']['input']>;
  systemTimeNEQ?: InputMaybe<Scalars['Int']['input']>;
  systemTimeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  systemTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_time field predicates */
  userTime?: InputMaybe<Scalars['Int']['input']>;
  userTimeGT?: InputMaybe<Scalars['Int']['input']>;
  userTimeGTE?: InputMaybe<Scalars['Int']['input']>;
  userTimeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  userTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userTimeLT?: InputMaybe<Scalars['Int']['input']>;
  userTimeLTE?: InputMaybe<Scalars['Int']['input']>;
  userTimeNEQ?: InputMaybe<Scalars['Int']['input']>;
  userTimeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  userTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum ActionOutputStatus {
  Available = 'AVAILABLE',
  Bytestream = 'BYTESTREAM',
  Processing = 'PROCESSING',
  Unavailable = 'UNAVAILABLE'
}

export type ActionProblem = Node & Problem & {
  __typename?: 'ActionProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  stderr?: Maybe<BlobReference>;
  stdout?: Maybe<BlobReference>;
  type: Scalars['String']['output'];
};

export type ActionSummary = Node & {
  __typename?: 'ActionSummary';
  actionCacheStatistics?: Maybe<ActionCacheStatistics>;
  actionData?: Maybe<Array<ActionData>>;
  actionsCreated?: Maybe<Scalars['Int']['output']>;
  actionsCreatedNotIncludingAspects?: Maybe<Scalars['Int']['output']>;
  actionsExecuted?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  remoteCacheHits?: Maybe<Scalars['Int']['output']>;
  runnerCount?: Maybe<Array<RunnerCount>>;
};

/**
 * ActionSummaryWhereInput is used for filtering ActionSummary objects.
 * Input was generated by ent.
 */
export type ActionSummaryWhereInput = {
  /** actions_created field predicates */
  actionsCreated?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** actions_created_not_including_aspects field predicates */
  actionsCreatedNotIncludingAspects?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsGT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedNotIncludingAspectsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedNotIncludingAspectsLT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedNotIncludingAspectsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actions_executed field predicates */
  actionsExecuted?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** action_cache_statistics edge predicates */
  hasActionCacheStatistics?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionCacheStatisticsWith?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** action_data edge predicates */
  hasActionData?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionDataWith?: InputMaybe<Array<ActionDataWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** runner_count edge predicates */
  hasRunnerCount?: InputMaybe<Scalars['Boolean']['input']>;
  hasRunnerCountWith?: InputMaybe<Array<RunnerCountWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ActionSummaryWhereInput>;
  or?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** remote_cache_hits field predicates */
  remoteCacheHits?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsGT?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsGTE?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  remoteCacheHitsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  remoteCacheHitsLT?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsLTE?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsNEQ?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  remoteCacheHitsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ArtifactMetrics = Node & {
  __typename?: 'ArtifactMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  outputArtifactsFromActionCache?: Maybe<FilesMetric>;
  outputArtifactsSeen?: Maybe<FilesMetric>;
  sourceArtifactsRead?: Maybe<FilesMetric>;
  topLevelArtifacts?: Maybe<FilesMetric>;
};

/**
 * ArtifactMetricsWhereInput is used for filtering ArtifactMetrics objects.
 * Input was generated by ent.
 */
export type ArtifactMetricsWhereInput = {
  and?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** output_artifacts_from_action_cache edge predicates */
  hasOutputArtifactsFromActionCache?: InputMaybe<Scalars['Boolean']['input']>;
  hasOutputArtifactsFromActionCacheWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** output_artifacts_seen edge predicates */
  hasOutputArtifactsSeen?: InputMaybe<Scalars['Boolean']['input']>;
  hasOutputArtifactsSeenWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** source_artifacts_read edge predicates */
  hasSourceArtifactsRead?: InputMaybe<Scalars['Boolean']['input']>;
  hasSourceArtifactsReadWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** top_level_artifacts edge predicates */
  hasTopLevelArtifacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasTopLevelArtifactsWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ArtifactMetricsWhereInput>;
  or?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
};

export type BazelCommand = {
  __typename?: 'BazelCommand';
  cmdLine?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  command: Scalars['String']['output'];
  executable: Scalars['String']['output'];
  explicitCmdLine: Scalars['String']['output'];
  explicitStartupOptions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id: Scalars['ID']['output'];
  residual: Scalars['String']['output'];
  startupOptions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type BazelInvocation = Node & {
  __typename?: 'BazelInvocation';
  bazelCommand: BazelCommand;
  bepCompleted?: Maybe<Scalars['Boolean']['output']>;
  build?: Maybe<Build>;
  buildID?: Maybe<Scalars['ID']['output']>;
  buildLogs?: Maybe<Scalars['String']['output']>;
  changeNumber?: Maybe<Scalars['Int']['output']>;
  configurationMnemonic?: Maybe<Scalars['String']['output']>;
  cpu?: Maybe<Scalars['String']['output']>;
  endedAt?: Maybe<Scalars['Time']['output']>;
  eventFile?: Maybe<EventFile>;
  eventFileID?: Maybe<Scalars['ID']['output']>;
  hostname?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  invocationID: Scalars['UUID']['output'];
  isCiWorker?: Maybe<Scalars['Boolean']['output']>;
  metrics?: Maybe<Metrics>;
  numFetches?: Maybe<Scalars['Int']['output']>;
  patchsetNumber?: Maybe<Scalars['Int']['output']>;
  platformName?: Maybe<Scalars['String']['output']>;
  problems: Array<Problem>;
  profile?: Maybe<Profile>;
  relatedFiles: Array<NamedFile>;
  sourceControl?: Maybe<SourceControl>;
  startedAt: Scalars['Time']['output'];
  state: BazelInvocationState;
  stepLabel: Scalars['String']['output'];
  targets?: Maybe<Array<TargetPair>>;
  testCollection?: Maybe<Array<TestCollection>>;
  user?: Maybe<User>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userLdap?: Maybe<Scalars['String']['output']>;
};

/** A connection to a list of items. */
export type BazelInvocationConnection = {
  __typename?: 'BazelInvocationConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<BazelInvocationEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type BazelInvocationEdge = {
  __typename?: 'BazelInvocationEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<BazelInvocation>;
};

/** Ordering options for BazelInvocation connections */
export type BazelInvocationOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order BazelInvocations. */
  field: BazelInvocationOrderField;
};

/** Properties by which BazelInvocation connections can be ordered. */
export enum BazelInvocationOrderField {
  StartedAt = 'STARTED_AT',
  UserLdap = 'USER_LDAP'
}

export type BazelInvocationProblem = Node & {
  __typename?: 'BazelInvocationProblem';
  bazelInvocation?: Maybe<BazelInvocation>;
  bazelInvocationID?: Maybe<Scalars['ID']['output']>;
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  problemType: Scalars['String']['output'];
};

/**
 * BazelInvocationProblemWhereInput is used for filtering BazelInvocationProblem objects.
 * Input was generated by ent.
 */
export type BazelInvocationProblemWhereInput = {
  and?: InputMaybe<Array<BazelInvocationProblemWhereInput>>;
  /** bazel_invocation_id field predicates */
  bazelInvocationID?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bazelInvocationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** label field predicates */
  label?: InputMaybe<Scalars['String']['input']>;
  labelContains?: InputMaybe<Scalars['String']['input']>;
  labelContainsFold?: InputMaybe<Scalars['String']['input']>;
  labelEqualFold?: InputMaybe<Scalars['String']['input']>;
  labelGT?: InputMaybe<Scalars['String']['input']>;
  labelGTE?: InputMaybe<Scalars['String']['input']>;
  labelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  labelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  labelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelLT?: InputMaybe<Scalars['String']['input']>;
  labelLTE?: InputMaybe<Scalars['String']['input']>;
  labelNEQ?: InputMaybe<Scalars['String']['input']>;
  labelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<BazelInvocationProblemWhereInput>;
  or?: InputMaybe<Array<BazelInvocationProblemWhereInput>>;
  /** problem_type field predicates */
  problemType?: InputMaybe<Scalars['String']['input']>;
  problemTypeContains?: InputMaybe<Scalars['String']['input']>;
  problemTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  problemTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  problemTypeGT?: InputMaybe<Scalars['String']['input']>;
  problemTypeGTE?: InputMaybe<Scalars['String']['input']>;
  problemTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  problemTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  problemTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  problemTypeLT?: InputMaybe<Scalars['String']['input']>;
  problemTypeLTE?: InputMaybe<Scalars['String']['input']>;
  problemTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  problemTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type BazelInvocationState = {
  __typename?: 'BazelInvocationState';
  bepCompleted: Scalars['Boolean']['output'];
  buildEndTime: Scalars['Time']['output'];
  buildStartTime: Scalars['Time']['output'];
  exitCode?: Maybe<ExitCode>;
  id: Scalars['ID']['output'];
};

/**
 * BazelInvocationWhereInput is used for filtering BazelInvocation objects.
 * Input was generated by ent.
 */
export type BazelInvocationWhereInput = {
  and?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** bep_completed field predicates */
  bepCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  bepCompletedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bepCompletedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  bepCompletedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** build_id field predicates */
  buildID?: InputMaybe<Scalars['ID']['input']>;
  buildIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  buildIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  buildIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  buildIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  buildIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** build_logs field predicates */
  buildLogs?: InputMaybe<Scalars['String']['input']>;
  buildLogsContains?: InputMaybe<Scalars['String']['input']>;
  buildLogsContainsFold?: InputMaybe<Scalars['String']['input']>;
  buildLogsEqualFold?: InputMaybe<Scalars['String']['input']>;
  buildLogsGT?: InputMaybe<Scalars['String']['input']>;
  buildLogsGTE?: InputMaybe<Scalars['String']['input']>;
  buildLogsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  buildLogsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  buildLogsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  buildLogsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  buildLogsLT?: InputMaybe<Scalars['String']['input']>;
  buildLogsLTE?: InputMaybe<Scalars['String']['input']>;
  buildLogsNEQ?: InputMaybe<Scalars['String']['input']>;
  buildLogsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  buildLogsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** change_number field predicates */
  changeNumber?: InputMaybe<Scalars['Int']['input']>;
  changeNumberGT?: InputMaybe<Scalars['Int']['input']>;
  changeNumberGTE?: InputMaybe<Scalars['Int']['input']>;
  changeNumberIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  changeNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  changeNumberLT?: InputMaybe<Scalars['Int']['input']>;
  changeNumberLTE?: InputMaybe<Scalars['Int']['input']>;
  changeNumberNEQ?: InputMaybe<Scalars['Int']['input']>;
  changeNumberNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  changeNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** configuration_mnemonic field predicates */
  configurationMnemonic?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicContains?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicContainsFold?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicEqualFold?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicGT?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicGTE?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicHasPrefix?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicHasSuffix?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicIn?: InputMaybe<Array<Scalars['String']['input']>>;
  configurationMnemonicIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  configurationMnemonicLT?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicLTE?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicNEQ?: InputMaybe<Scalars['String']['input']>;
  configurationMnemonicNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  configurationMnemonicNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cpu field predicates */
  cpu?: InputMaybe<Scalars['String']['input']>;
  cpuContains?: InputMaybe<Scalars['String']['input']>;
  cpuContainsFold?: InputMaybe<Scalars['String']['input']>;
  cpuEqualFold?: InputMaybe<Scalars['String']['input']>;
  cpuGT?: InputMaybe<Scalars['String']['input']>;
  cpuGTE?: InputMaybe<Scalars['String']['input']>;
  cpuHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cpuHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cpuIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cpuIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cpuLT?: InputMaybe<Scalars['String']['input']>;
  cpuLTE?: InputMaybe<Scalars['String']['input']>;
  cpuNEQ?: InputMaybe<Scalars['String']['input']>;
  cpuNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cpuNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ended_at field predicates */
  endedAt?: InputMaybe<Scalars['Time']['input']>;
  endedAtGT?: InputMaybe<Scalars['Time']['input']>;
  endedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  endedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endedAtLT?: InputMaybe<Scalars['Time']['input']>;
  endedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  endedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  endedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_file_id field predicates */
  eventFileID?: InputMaybe<Scalars['ID']['input']>;
  eventFileIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  eventFileIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  eventFileIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** build edge predicates */
  hasBuild?: InputMaybe<Scalars['Boolean']['input']>;
  hasBuildWith?: InputMaybe<Array<BuildWhereInput>>;
  /** event_file edge predicates */
  hasEventFile?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventFileWith?: InputMaybe<Array<EventFileWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** problems edge predicates */
  hasProblems?: InputMaybe<Scalars['Boolean']['input']>;
  hasProblemsWith?: InputMaybe<Array<BazelInvocationProblemWhereInput>>;
  /** source_control edge predicates */
  hasSourceControl?: InputMaybe<Scalars['Boolean']['input']>;
  hasSourceControlWith?: InputMaybe<Array<SourceControlWhereInput>>;
  /** targets edge predicates */
  hasTargets?: InputMaybe<Scalars['Boolean']['input']>;
  hasTargetsWith?: InputMaybe<Array<TargetPairWhereInput>>;
  /** test_collection edge predicates */
  hasTestCollection?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestCollectionWith?: InputMaybe<Array<TestCollectionWhereInput>>;
  /** hostname field predicates */
  hostname?: InputMaybe<Scalars['String']['input']>;
  hostnameContains?: InputMaybe<Scalars['String']['input']>;
  hostnameContainsFold?: InputMaybe<Scalars['String']['input']>;
  hostnameEqualFold?: InputMaybe<Scalars['String']['input']>;
  hostnameGT?: InputMaybe<Scalars['String']['input']>;
  hostnameGTE?: InputMaybe<Scalars['String']['input']>;
  hostnameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  hostnameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  hostnameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  hostnameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  hostnameLT?: InputMaybe<Scalars['String']['input']>;
  hostnameLTE?: InputMaybe<Scalars['String']['input']>;
  hostnameNEQ?: InputMaybe<Scalars['String']['input']>;
  hostnameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  hostnameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** invocation_id field predicates */
  invocationID?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDGT?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDGTE?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  invocationIDLT?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDLTE?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDNEQ?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDNotIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  /** is_ci_worker field predicates */
  isCiWorker?: InputMaybe<Scalars['Boolean']['input']>;
  isCiWorkerIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isCiWorkerNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isCiWorkerNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<BazelInvocationWhereInput>;
  /** num_fetches field predicates */
  numFetches?: InputMaybe<Scalars['Int']['input']>;
  numFetchesGT?: InputMaybe<Scalars['Int']['input']>;
  numFetchesGTE?: InputMaybe<Scalars['Int']['input']>;
  numFetchesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numFetchesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numFetchesLT?: InputMaybe<Scalars['Int']['input']>;
  numFetchesLTE?: InputMaybe<Scalars['Int']['input']>;
  numFetchesNEQ?: InputMaybe<Scalars['Int']['input']>;
  numFetchesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numFetchesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** patchset_number field predicates */
  patchsetNumber?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberGT?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberGTE?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  patchsetNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  patchsetNumberLT?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberLTE?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberNEQ?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  patchsetNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** platform_name field predicates */
  platformName?: InputMaybe<Scalars['String']['input']>;
  platformNameContains?: InputMaybe<Scalars['String']['input']>;
  platformNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  platformNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  platformNameGT?: InputMaybe<Scalars['String']['input']>;
  platformNameGTE?: InputMaybe<Scalars['String']['input']>;
  platformNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  platformNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  platformNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  platformNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  platformNameLT?: InputMaybe<Scalars['String']['input']>;
  platformNameLTE?: InputMaybe<Scalars['String']['input']>;
  platformNameNEQ?: InputMaybe<Scalars['String']['input']>;
  platformNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  platformNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** profile_name field predicates */
  profileName?: InputMaybe<Scalars['String']['input']>;
  profileNameContains?: InputMaybe<Scalars['String']['input']>;
  profileNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  profileNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  profileNameGT?: InputMaybe<Scalars['String']['input']>;
  profileNameGTE?: InputMaybe<Scalars['String']['input']>;
  profileNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  profileNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  profileNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  profileNameLT?: InputMaybe<Scalars['String']['input']>;
  profileNameLTE?: InputMaybe<Scalars['String']['input']>;
  profileNameNEQ?: InputMaybe<Scalars['String']['input']>;
  profileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** started_at field predicates */
  startedAt?: InputMaybe<Scalars['Time']['input']>;
  startedAtGT?: InputMaybe<Scalars['Time']['input']>;
  startedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  startedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startedAtLT?: InputMaybe<Scalars['Time']['input']>;
  startedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  startedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  startedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** step_label field predicates */
  stepLabel?: InputMaybe<Scalars['String']['input']>;
  stepLabelContains?: InputMaybe<Scalars['String']['input']>;
  stepLabelContainsFold?: InputMaybe<Scalars['String']['input']>;
  stepLabelEqualFold?: InputMaybe<Scalars['String']['input']>;
  stepLabelGT?: InputMaybe<Scalars['String']['input']>;
  stepLabelGTE?: InputMaybe<Scalars['String']['input']>;
  stepLabelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stepLabelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stepLabelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stepLabelLT?: InputMaybe<Scalars['String']['input']>;
  stepLabelLTE?: InputMaybe<Scalars['String']['input']>;
  stepLabelNEQ?: InputMaybe<Scalars['String']['input']>;
  stepLabelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** user_email field predicates */
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userEmailContains?: InputMaybe<Scalars['String']['input']>;
  userEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  userEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  userEmailGT?: InputMaybe<Scalars['String']['input']>;
  userEmailGTE?: InputMaybe<Scalars['String']['input']>;
  userEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userEmailLT?: InputMaybe<Scalars['String']['input']>;
  userEmailLTE?: InputMaybe<Scalars['String']['input']>;
  userEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  userEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_ldap field predicates */
  userLdap?: InputMaybe<Scalars['String']['input']>;
  userLdapContains?: InputMaybe<Scalars['String']['input']>;
  userLdapContainsFold?: InputMaybe<Scalars['String']['input']>;
  userLdapEqualFold?: InputMaybe<Scalars['String']['input']>;
  userLdapGT?: InputMaybe<Scalars['String']['input']>;
  userLdapGTE?: InputMaybe<Scalars['String']['input']>;
  userLdapHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userLdapHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userLdapIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userLdapIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userLdapLT?: InputMaybe<Scalars['String']['input']>;
  userLdapLTE?: InputMaybe<Scalars['String']['input']>;
  userLdapNEQ?: InputMaybe<Scalars['String']['input']>;
  userLdapNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userLdapNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Blob = Node & {
  __typename?: 'Blob';
  archiveURL?: Maybe<Scalars['String']['output']>;
  archivingStatus: BlobArchivingStatus;
  id: Scalars['ID']['output'];
  reason?: Maybe<Scalars['String']['output']>;
  sizeBytes?: Maybe<Scalars['Int']['output']>;
  uri: Scalars['String']['output'];
};

/** BlobArchivingStatus is enum for the field archiving_status */
export enum BlobArchivingStatus {
  Archiving = 'ARCHIVING',
  Bytestream = 'BYTESTREAM',
  Failed = 'FAILED',
  Queued = 'QUEUED',
  Success = 'SUCCESS'
}

export type BlobReference = {
  __typename?: 'BlobReference';
  availabilityStatus: ActionOutputStatus;
  downloadURL: Scalars['String']['output'];
  ephemeralURL: Scalars['String']['output'];
  name: Scalars['String']['output'];
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

/**
 * BlobWhereInput is used for filtering Blob objects.
 * Input was generated by ent.
 */
export type BlobWhereInput = {
  and?: InputMaybe<Array<BlobWhereInput>>;
  /** archive_url field predicates */
  archiveURL?: InputMaybe<Scalars['String']['input']>;
  archiveURLContains?: InputMaybe<Scalars['String']['input']>;
  archiveURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  archiveURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  archiveURLGT?: InputMaybe<Scalars['String']['input']>;
  archiveURLGTE?: InputMaybe<Scalars['String']['input']>;
  archiveURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  archiveURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  archiveURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  archiveURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  archiveURLLT?: InputMaybe<Scalars['String']['input']>;
  archiveURLLTE?: InputMaybe<Scalars['String']['input']>;
  archiveURLNEQ?: InputMaybe<Scalars['String']['input']>;
  archiveURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  archiveURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** archiving_status field predicates */
  archivingStatus?: InputMaybe<BlobArchivingStatus>;
  archivingStatusIn?: InputMaybe<Array<BlobArchivingStatus>>;
  archivingStatusNEQ?: InputMaybe<BlobArchivingStatus>;
  archivingStatusNotIn?: InputMaybe<Array<BlobArchivingStatus>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<BlobWhereInput>;
  or?: InputMaybe<Array<BlobWhereInput>>;
  /** reason field predicates */
  reason?: InputMaybe<Scalars['String']['input']>;
  reasonContains?: InputMaybe<Scalars['String']['input']>;
  reasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  reasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  reasonGT?: InputMaybe<Scalars['String']['input']>;
  reasonGTE?: InputMaybe<Scalars['String']['input']>;
  reasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  reasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  reasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  reasonLT?: InputMaybe<Scalars['String']['input']>;
  reasonLTE?: InputMaybe<Scalars['String']['input']>;
  reasonNEQ?: InputMaybe<Scalars['String']['input']>;
  reasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** size_bytes field predicates */
  sizeBytes?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesGT?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesGTE?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeBytesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sizeBytesLT?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesLTE?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesNEQ?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeBytesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** uri field predicates */
  uri?: InputMaybe<Scalars['String']['input']>;
  uriContains?: InputMaybe<Scalars['String']['input']>;
  uriContainsFold?: InputMaybe<Scalars['String']['input']>;
  uriEqualFold?: InputMaybe<Scalars['String']['input']>;
  uriGT?: InputMaybe<Scalars['String']['input']>;
  uriGTE?: InputMaybe<Scalars['String']['input']>;
  uriHasPrefix?: InputMaybe<Scalars['String']['input']>;
  uriHasSuffix?: InputMaybe<Scalars['String']['input']>;
  uriIn?: InputMaybe<Array<Scalars['String']['input']>>;
  uriLT?: InputMaybe<Scalars['String']['input']>;
  uriLTE?: InputMaybe<Scalars['String']['input']>;
  uriNEQ?: InputMaybe<Scalars['String']['input']>;
  uriNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type Build = Node & {
  __typename?: 'Build';
  buildURL: Scalars['String']['output'];
  buildUUID: Scalars['UUID']['output'];
  env: Array<EnvVar>;
  id: Scalars['ID']['output'];
  invocations?: Maybe<Array<BazelInvocation>>;
  timestamp?: Maybe<Scalars['Time']['output']>;
};

/** A connection to a list of items. */
export type BuildConnection = {
  __typename?: 'BuildConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<BuildEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type BuildEdge = {
  __typename?: 'BuildEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Build>;
};

export type BuildGraphMetrics = Node & {
  __typename?: 'BuildGraphMetrics';
  actionCount?: Maybe<Scalars['Int']['output']>;
  actionCountNotIncludingAspects?: Maybe<Scalars['Int']['output']>;
  actionLookupValueCount?: Maybe<Scalars['Int']['output']>;
  actionLookupValueCountNotIncludingAspects?: Maybe<Scalars['Int']['output']>;
  builtValues?: Maybe<EvaluationStat>;
  changedValues?: Maybe<EvaluationStat>;
  cleanedValues?: Maybe<EvaluationStat>;
  dirtiedValues?: Maybe<EvaluationStat>;
  evaluatedValues?: Maybe<EvaluationStat>;
  id: Scalars['ID']['output'];
  inputFileConfiguredTargetCount?: Maybe<Scalars['Int']['output']>;
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  otherConfiguredTargetCount?: Maybe<Scalars['Int']['output']>;
  outputArtifactCount?: Maybe<Scalars['Int']['output']>;
  outputFileConfiguredTargetCount?: Maybe<Scalars['Int']['output']>;
  postInvocationSkyframeNodeCount?: Maybe<Scalars['Int']['output']>;
};

/**
 * BuildGraphMetricsWhereInput is used for filtering BuildGraphMetrics objects.
 * Input was generated by ent.
 */
export type BuildGraphMetricsWhereInput = {
  /** action_count field predicates */
  actionCount?: InputMaybe<Scalars['Int']['input']>;
  actionCountGT?: InputMaybe<Scalars['Int']['input']>;
  actionCountGTE?: InputMaybe<Scalars['Int']['input']>;
  actionCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionCountLT?: InputMaybe<Scalars['Int']['input']>;
  actionCountLTE?: InputMaybe<Scalars['Int']['input']>;
  actionCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** action_count_not_including_aspects field predicates */
  actionCountNotIncludingAspects?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIncludingAspectsGT?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIncludingAspectsGTE?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIncludingAspectsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionCountNotIncludingAspectsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionCountNotIncludingAspectsLT?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIncludingAspectsLTE?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIncludingAspectsNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionCountNotIncludingAspectsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionCountNotIncludingAspectsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_lookup_value_count field predicates */
  actionLookupValueCount?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountGT?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountGTE?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionLookupValueCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionLookupValueCountLT?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountLTE?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** action_lookup_value_count_not_including_aspects field predicates */
  actionLookupValueCountNotIncludingAspects?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIncludingAspectsGT?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIncludingAspectsGTE?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIncludingAspectsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionLookupValueCountNotIncludingAspectsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionLookupValueCountNotIncludingAspectsLT?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIncludingAspectsLTE?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIncludingAspectsNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionLookupValueCountNotIncludingAspectsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionLookupValueCountNotIncludingAspectsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionLookupValueCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<BuildGraphMetricsWhereInput>>;
  /** built_values edge predicates */
  hasBuiltValues?: InputMaybe<Scalars['Boolean']['input']>;
  hasBuiltValuesWith?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** changed_values edge predicates */
  hasChangedValues?: InputMaybe<Scalars['Boolean']['input']>;
  hasChangedValuesWith?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** cleaned_values edge predicates */
  hasCleanedValues?: InputMaybe<Scalars['Boolean']['input']>;
  hasCleanedValuesWith?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** dirtied_values edge predicates */
  hasDirtiedValues?: InputMaybe<Scalars['Boolean']['input']>;
  hasDirtiedValuesWith?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** evaluated_values edge predicates */
  hasEvaluatedValues?: InputMaybe<Scalars['Boolean']['input']>;
  hasEvaluatedValuesWith?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** input_file_configured_target_count field predicates */
  inputFileConfiguredTargetCount?: InputMaybe<Scalars['Int']['input']>;
  inputFileConfiguredTargetCountGT?: InputMaybe<Scalars['Int']['input']>;
  inputFileConfiguredTargetCountGTE?: InputMaybe<Scalars['Int']['input']>;
  inputFileConfiguredTargetCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  inputFileConfiguredTargetCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  inputFileConfiguredTargetCountLT?: InputMaybe<Scalars['Int']['input']>;
  inputFileConfiguredTargetCountLTE?: InputMaybe<Scalars['Int']['input']>;
  inputFileConfiguredTargetCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  inputFileConfiguredTargetCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  inputFileConfiguredTargetCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<BuildGraphMetricsWhereInput>;
  or?: InputMaybe<Array<BuildGraphMetricsWhereInput>>;
  /** other_configured_target_count field predicates */
  otherConfiguredTargetCount?: InputMaybe<Scalars['Int']['input']>;
  otherConfiguredTargetCountGT?: InputMaybe<Scalars['Int']['input']>;
  otherConfiguredTargetCountGTE?: InputMaybe<Scalars['Int']['input']>;
  otherConfiguredTargetCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  otherConfiguredTargetCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  otherConfiguredTargetCountLT?: InputMaybe<Scalars['Int']['input']>;
  otherConfiguredTargetCountLTE?: InputMaybe<Scalars['Int']['input']>;
  otherConfiguredTargetCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  otherConfiguredTargetCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  otherConfiguredTargetCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** output_artifact_count field predicates */
  outputArtifactCount?: InputMaybe<Scalars['Int']['input']>;
  outputArtifactCountGT?: InputMaybe<Scalars['Int']['input']>;
  outputArtifactCountGTE?: InputMaybe<Scalars['Int']['input']>;
  outputArtifactCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  outputArtifactCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  outputArtifactCountLT?: InputMaybe<Scalars['Int']['input']>;
  outputArtifactCountLTE?: InputMaybe<Scalars['Int']['input']>;
  outputArtifactCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  outputArtifactCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  outputArtifactCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** output_file_configured_target_count field predicates */
  outputFileConfiguredTargetCount?: InputMaybe<Scalars['Int']['input']>;
  outputFileConfiguredTargetCountGT?: InputMaybe<Scalars['Int']['input']>;
  outputFileConfiguredTargetCountGTE?: InputMaybe<Scalars['Int']['input']>;
  outputFileConfiguredTargetCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  outputFileConfiguredTargetCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  outputFileConfiguredTargetCountLT?: InputMaybe<Scalars['Int']['input']>;
  outputFileConfiguredTargetCountLTE?: InputMaybe<Scalars['Int']['input']>;
  outputFileConfiguredTargetCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  outputFileConfiguredTargetCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  outputFileConfiguredTargetCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** post_invocation_skyframe_node_count field predicates */
  postInvocationSkyframeNodeCount?: InputMaybe<Scalars['Int']['input']>;
  postInvocationSkyframeNodeCountGT?: InputMaybe<Scalars['Int']['input']>;
  postInvocationSkyframeNodeCountGTE?: InputMaybe<Scalars['Int']['input']>;
  postInvocationSkyframeNodeCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  postInvocationSkyframeNodeCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  postInvocationSkyframeNodeCountLT?: InputMaybe<Scalars['Int']['input']>;
  postInvocationSkyframeNodeCountLTE?: InputMaybe<Scalars['Int']['input']>;
  postInvocationSkyframeNodeCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  postInvocationSkyframeNodeCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  postInvocationSkyframeNodeCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BuildStep = {
  buildStepStatus: BuildStepStatus;
  id: Scalars['ID']['output'];
  stepLabel: Scalars['String']['output'];
};

export enum BuildStepStatus {
  Cancelled = 'Cancelled',
  Failed = 'Failed',
  Successful = 'Successful',
  Unknown = 'Unknown'
}

/**
 * BuildWhereInput is used for filtering Build objects.
 * Input was generated by ent.
 */
export type BuildWhereInput = {
  and?: InputMaybe<Array<BuildWhereInput>>;
  /** build_url field predicates */
  buildURL?: InputMaybe<Scalars['String']['input']>;
  buildURLContains?: InputMaybe<Scalars['String']['input']>;
  buildURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  buildURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  buildURLGT?: InputMaybe<Scalars['String']['input']>;
  buildURLGTE?: InputMaybe<Scalars['String']['input']>;
  buildURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  buildURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  buildURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  buildURLLT?: InputMaybe<Scalars['String']['input']>;
  buildURLLTE?: InputMaybe<Scalars['String']['input']>;
  buildURLNEQ?: InputMaybe<Scalars['String']['input']>;
  buildURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** build_uuid field predicates */
  buildUUID?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDGT?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDGTE?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  buildUUIDLT?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDLTE?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDNEQ?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDNotIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  /** invocations edge predicates */
  hasInvocations?: InputMaybe<Scalars['Boolean']['input']>;
  hasInvocationsWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<BuildWhereInput>;
  or?: InputMaybe<Array<BuildWhereInput>>;
  /** timestamp field predicates */
  timestamp?: InputMaybe<Scalars['Time']['input']>;
  timestampGT?: InputMaybe<Scalars['Time']['input']>;
  timestampGTE?: InputMaybe<Scalars['Time']['input']>;
  timestampIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  timestampIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  timestampLT?: InputMaybe<Scalars['Time']['input']>;
  timestampLTE?: InputMaybe<Scalars['Time']['input']>;
  timestampNEQ?: InputMaybe<Scalars['Time']['input']>;
  timestampNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  timestampNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CumulativeMetrics = Node & {
  __typename?: 'CumulativeMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  numAnalyses?: Maybe<Scalars['Int']['output']>;
  numBuilds?: Maybe<Scalars['Int']['output']>;
};

/**
 * CumulativeMetricsWhereInput is used for filtering CumulativeMetrics objects.
 * Input was generated by ent.
 */
export type CumulativeMetricsWhereInput = {
  and?: InputMaybe<Array<CumulativeMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<CumulativeMetricsWhereInput>;
  /** num_analyses field predicates */
  numAnalyses?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesGT?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesGTE?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numAnalysesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numAnalysesLT?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesLTE?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesNEQ?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numAnalysesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** num_builds field predicates */
  numBuilds?: InputMaybe<Scalars['Int']['input']>;
  numBuildsGT?: InputMaybe<Scalars['Int']['input']>;
  numBuildsGTE?: InputMaybe<Scalars['Int']['input']>;
  numBuildsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numBuildsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numBuildsLT?: InputMaybe<Scalars['Int']['input']>;
  numBuildsLTE?: InputMaybe<Scalars['Int']['input']>;
  numBuildsNEQ?: InputMaybe<Scalars['Int']['input']>;
  numBuildsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numBuildsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<CumulativeMetricsWhereInput>>;
};

export type DeleteResult = {
  __typename?: 'DeleteResult';
  deleted: Scalars['Int']['output'];
  found: Scalars['Int']['output'];
  successful: Scalars['Boolean']['output'];
};

export type DynamicExecutionMetrics = Node & {
  __typename?: 'DynamicExecutionMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  raceStatistics?: Maybe<Array<RaceStatistics>>;
};

/**
 * DynamicExecutionMetricsWhereInput is used for filtering DynamicExecutionMetrics objects.
 * Input was generated by ent.
 */
export type DynamicExecutionMetricsWhereInput = {
  and?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** race_statistics edge predicates */
  hasRaceStatistics?: InputMaybe<Scalars['Boolean']['input']>;
  hasRaceStatisticsWith?: InputMaybe<Array<RaceStatisticsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<DynamicExecutionMetricsWhereInput>;
  or?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
};

export type EnvVar = {
  __typename?: 'EnvVar';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type EvaluationStat = Node & {
  __typename?: 'EvaluationStat';
  buildGraphMetrics?: Maybe<BuildGraphMetrics>;
  buildGraphMetricsID?: Maybe<Scalars['ID']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  skyfunctionName?: Maybe<Scalars['String']['output']>;
};

/**
 * EvaluationStatWhereInput is used for filtering EvaluationStat objects.
 * Input was generated by ent.
 */
export type EvaluationStatWhereInput = {
  and?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** build_graph_metrics_id field predicates */
  buildGraphMetricsID?: InputMaybe<Scalars['ID']['input']>;
  buildGraphMetricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  buildGraphMetricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  buildGraphMetricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  buildGraphMetricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  buildGraphMetricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** count field predicates */
  count?: InputMaybe<Scalars['Int']['input']>;
  countGT?: InputMaybe<Scalars['Int']['input']>;
  countGTE?: InputMaybe<Scalars['Int']['input']>;
  countIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  countLT?: InputMaybe<Scalars['Int']['input']>;
  countLTE?: InputMaybe<Scalars['Int']['input']>;
  countNEQ?: InputMaybe<Scalars['Int']['input']>;
  countNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** build_graph_metrics edge predicates */
  hasBuildGraphMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasBuildGraphMetricsWith?: InputMaybe<Array<BuildGraphMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EvaluationStatWhereInput>;
  or?: InputMaybe<Array<EvaluationStatWhereInput>>;
  /** skyfunction_name field predicates */
  skyfunctionName?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameContains?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameGT?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameGTE?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  skyfunctionNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  skyfunctionNameLT?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameLTE?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameNEQ?: InputMaybe<Scalars['String']['input']>;
  skyfunctionNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  skyfunctionNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventFile = Node & {
  __typename?: 'EventFile';
  bazelInvocation?: Maybe<BazelInvocation>;
  id: Scalars['ID']['output'];
  mimeType: Scalars['String']['output'];
  modTime: Scalars['Time']['output'];
  protocol: Scalars['String']['output'];
  reason?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

/**
 * EventFileWhereInput is used for filtering EventFile objects.
 * Input was generated by ent.
 */
export type EventFileWhereInput = {
  and?: InputMaybe<Array<EventFileWhereInput>>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mime_type field predicates */
  mimeType?: InputMaybe<Scalars['String']['input']>;
  mimeTypeContains?: InputMaybe<Scalars['String']['input']>;
  mimeTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  mimeTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  mimeTypeGT?: InputMaybe<Scalars['String']['input']>;
  mimeTypeGTE?: InputMaybe<Scalars['String']['input']>;
  mimeTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mimeTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mimeTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mimeTypeLT?: InputMaybe<Scalars['String']['input']>;
  mimeTypeLTE?: InputMaybe<Scalars['String']['input']>;
  mimeTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  mimeTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** mod_time field predicates */
  modTime?: InputMaybe<Scalars['Time']['input']>;
  modTimeGT?: InputMaybe<Scalars['Time']['input']>;
  modTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  modTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  modTimeLT?: InputMaybe<Scalars['Time']['input']>;
  modTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  modTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  modTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  not?: InputMaybe<EventFileWhereInput>;
  or?: InputMaybe<Array<EventFileWhereInput>>;
  /** protocol field predicates */
  protocol?: InputMaybe<Scalars['String']['input']>;
  protocolContains?: InputMaybe<Scalars['String']['input']>;
  protocolContainsFold?: InputMaybe<Scalars['String']['input']>;
  protocolEqualFold?: InputMaybe<Scalars['String']['input']>;
  protocolGT?: InputMaybe<Scalars['String']['input']>;
  protocolGTE?: InputMaybe<Scalars['String']['input']>;
  protocolHasPrefix?: InputMaybe<Scalars['String']['input']>;
  protocolHasSuffix?: InputMaybe<Scalars['String']['input']>;
  protocolIn?: InputMaybe<Array<Scalars['String']['input']>>;
  protocolLT?: InputMaybe<Scalars['String']['input']>;
  protocolLTE?: InputMaybe<Scalars['String']['input']>;
  protocolNEQ?: InputMaybe<Scalars['String']['input']>;
  protocolNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** reason field predicates */
  reason?: InputMaybe<Scalars['String']['input']>;
  reasonContains?: InputMaybe<Scalars['String']['input']>;
  reasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  reasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  reasonGT?: InputMaybe<Scalars['String']['input']>;
  reasonGTE?: InputMaybe<Scalars['String']['input']>;
  reasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  reasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  reasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  reasonLT?: InputMaybe<Scalars['String']['input']>;
  reasonLTE?: InputMaybe<Scalars['String']['input']>;
  reasonNEQ?: InputMaybe<Scalars['String']['input']>;
  reasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>;
  urlContains?: InputMaybe<Scalars['String']['input']>;
  urlContainsFold?: InputMaybe<Scalars['String']['input']>;
  urlEqualFold?: InputMaybe<Scalars['String']['input']>;
  urlGT?: InputMaybe<Scalars['String']['input']>;
  urlGTE?: InputMaybe<Scalars['String']['input']>;
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>;
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>;
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>;
  urlLT?: InputMaybe<Scalars['String']['input']>;
  urlLTE?: InputMaybe<Scalars['String']['input']>;
  urlNEQ?: InputMaybe<Scalars['String']['input']>;
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ExectionInfo = Node & {
  __typename?: 'ExectionInfo';
  cachedRemotely?: Maybe<Scalars['Boolean']['output']>;
  executionInfoID?: Maybe<Scalars['ID']['output']>;
  exitCode?: Maybe<Scalars['Int']['output']>;
  hostname?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  resourceUsage?: Maybe<Array<ResourceUsage>>;
  strategy?: Maybe<Scalars['String']['output']>;
  testResult?: Maybe<TestResultBes>;
  timeoutSeconds?: Maybe<Scalars['Int']['output']>;
  timingBreakdown?: Maybe<TimingBreakdown>;
};

/**
 * ExectionInfoWhereInput is used for filtering ExectionInfo objects.
 * Input was generated by ent.
 */
export type ExectionInfoWhereInput = {
  and?: InputMaybe<Array<ExectionInfoWhereInput>>;
  /** cached_remotely field predicates */
  cachedRemotely?: InputMaybe<Scalars['Boolean']['input']>;
  cachedRemotelyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cachedRemotelyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  cachedRemotelyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** execution_info_id field predicates */
  executionInfoID?: InputMaybe<Scalars['ID']['input']>;
  executionInfoIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionInfoIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  executionInfoIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  executionInfoIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionInfoIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** exit_code field predicates */
  exitCode?: InputMaybe<Scalars['Int']['input']>;
  exitCodeGT?: InputMaybe<Scalars['Int']['input']>;
  exitCodeGTE?: InputMaybe<Scalars['Int']['input']>;
  exitCodeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  exitCodeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  exitCodeLT?: InputMaybe<Scalars['Int']['input']>;
  exitCodeLTE?: InputMaybe<Scalars['Int']['input']>;
  exitCodeNEQ?: InputMaybe<Scalars['Int']['input']>;
  exitCodeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  exitCodeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** resource_usage edge predicates */
  hasResourceUsage?: InputMaybe<Scalars['Boolean']['input']>;
  hasResourceUsageWith?: InputMaybe<Array<ResourceUsageWhereInput>>;
  /** test_result edge predicates */
  hasTestResult?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestResultWith?: InputMaybe<Array<TestResultBesWhereInput>>;
  /** timing_breakdown edge predicates */
  hasTimingBreakdown?: InputMaybe<Scalars['Boolean']['input']>;
  hasTimingBreakdownWith?: InputMaybe<Array<TimingBreakdownWhereInput>>;
  /** hostname field predicates */
  hostname?: InputMaybe<Scalars['String']['input']>;
  hostnameContains?: InputMaybe<Scalars['String']['input']>;
  hostnameContainsFold?: InputMaybe<Scalars['String']['input']>;
  hostnameEqualFold?: InputMaybe<Scalars['String']['input']>;
  hostnameGT?: InputMaybe<Scalars['String']['input']>;
  hostnameGTE?: InputMaybe<Scalars['String']['input']>;
  hostnameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  hostnameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  hostnameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  hostnameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  hostnameLT?: InputMaybe<Scalars['String']['input']>;
  hostnameLTE?: InputMaybe<Scalars['String']['input']>;
  hostnameNEQ?: InputMaybe<Scalars['String']['input']>;
  hostnameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  hostnameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ExectionInfoWhereInput>;
  or?: InputMaybe<Array<ExectionInfoWhereInput>>;
  /** strategy field predicates */
  strategy?: InputMaybe<Scalars['String']['input']>;
  strategyContains?: InputMaybe<Scalars['String']['input']>;
  strategyContainsFold?: InputMaybe<Scalars['String']['input']>;
  strategyEqualFold?: InputMaybe<Scalars['String']['input']>;
  strategyGT?: InputMaybe<Scalars['String']['input']>;
  strategyGTE?: InputMaybe<Scalars['String']['input']>;
  strategyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  strategyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  strategyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  strategyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  strategyLT?: InputMaybe<Scalars['String']['input']>;
  strategyLTE?: InputMaybe<Scalars['String']['input']>;
  strategyNEQ?: InputMaybe<Scalars['String']['input']>;
  strategyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  strategyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** timeout_seconds field predicates */
  timeoutSeconds?: InputMaybe<Scalars['Int']['input']>;
  timeoutSecondsGT?: InputMaybe<Scalars['Int']['input']>;
  timeoutSecondsGTE?: InputMaybe<Scalars['Int']['input']>;
  timeoutSecondsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  timeoutSecondsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  timeoutSecondsLT?: InputMaybe<Scalars['Int']['input']>;
  timeoutSecondsLTE?: InputMaybe<Scalars['Int']['input']>;
  timeoutSecondsNEQ?: InputMaybe<Scalars['Int']['input']>;
  timeoutSecondsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  timeoutSecondsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExitCode = {
  __typename?: 'ExitCode';
  code: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type FilesMetric = Node & {
  __typename?: 'FilesMetric';
  artifactMetrics?: Maybe<ArtifactMetrics>;
  artifactMetricsID?: Maybe<Scalars['ID']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

/**
 * FilesMetricWhereInput is used for filtering FilesMetric objects.
 * Input was generated by ent.
 */
export type FilesMetricWhereInput = {
  and?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** artifact_metrics_id field predicates */
  artifactMetricsID?: InputMaybe<Scalars['ID']['input']>;
  artifactMetricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  artifactMetricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  artifactMetricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  artifactMetricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  artifactMetricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** count field predicates */
  count?: InputMaybe<Scalars['Int']['input']>;
  countGT?: InputMaybe<Scalars['Int']['input']>;
  countGTE?: InputMaybe<Scalars['Int']['input']>;
  countIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  countLT?: InputMaybe<Scalars['Int']['input']>;
  countLTE?: InputMaybe<Scalars['Int']['input']>;
  countNEQ?: InputMaybe<Scalars['Int']['input']>;
  countNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** artifact_metrics edge predicates */
  hasArtifactMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasArtifactMetricsWith?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<FilesMetricWhereInput>;
  or?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** size_in_bytes field predicates */
  sizeInBytes?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sizeInBytesLT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesLTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNEQ?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GarbageMetrics = Node & {
  __typename?: 'GarbageMetrics';
  garbageCollected?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  memoryMetrics?: Maybe<MemoryMetrics>;
  memoryMetricsID?: Maybe<Scalars['ID']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

/**
 * GarbageMetricsWhereInput is used for filtering GarbageMetrics objects.
 * Input was generated by ent.
 */
export type GarbageMetricsWhereInput = {
  and?: InputMaybe<Array<GarbageMetricsWhereInput>>;
  /** garbage_collected field predicates */
  garbageCollected?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedGT?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedGTE?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  garbageCollectedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  garbageCollectedLT?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedLTE?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedNEQ?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  garbageCollectedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** memory_metrics edge predicates */
  hasMemoryMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMemoryMetricsWith?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** memory_metrics_id field predicates */
  memoryMetricsID?: InputMaybe<Scalars['ID']['input']>;
  memoryMetricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  memoryMetricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  memoryMetricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  memoryMetricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  memoryMetricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<GarbageMetricsWhereInput>;
  or?: InputMaybe<Array<GarbageMetricsWhereInput>>;
  /** type field predicates */
  type?: InputMaybe<Scalars['String']['input']>;
  typeContains?: InputMaybe<Scalars['String']['input']>;
  typeContainsFold?: InputMaybe<Scalars['String']['input']>;
  typeEqualFold?: InputMaybe<Scalars['String']['input']>;
  typeGT?: InputMaybe<Scalars['String']['input']>;
  typeGTE?: InputMaybe<Scalars['String']['input']>;
  typeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  typeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  typeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  typeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  typeLT?: InputMaybe<Scalars['String']['input']>;
  typeLTE?: InputMaybe<Scalars['String']['input']>;
  typeNEQ?: InputMaybe<Scalars['String']['input']>;
  typeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  typeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MemoryMetrics = Node & {
  __typename?: 'MemoryMetrics';
  garbageMetrics?: Maybe<Array<GarbageMetrics>>;
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  peakPostGcHeapSize?: Maybe<Scalars['Int']['output']>;
  peakPostGcTenuredSpaceHeapSize?: Maybe<Scalars['Int']['output']>;
  usedHeapSizePostBuild?: Maybe<Scalars['Int']['output']>;
};

/**
 * MemoryMetricsWhereInput is used for filtering MemoryMetrics objects.
 * Input was generated by ent.
 */
export type MemoryMetricsWhereInput = {
  and?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** garbage_metrics edge predicates */
  hasGarbageMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasGarbageMetricsWith?: InputMaybe<Array<GarbageMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<MemoryMetricsWhereInput>;
  or?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** peak_post_gc_heap_size field predicates */
  peakPostGcHeapSize?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeGT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcHeapSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPostGcHeapSizeLT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcHeapSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_post_gc_tenured_space_heap_size field predicates */
  peakPostGcTenuredSpaceHeapSize?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeGT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcTenuredSpaceHeapSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPostGcTenuredSpaceHeapSizeLT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcTenuredSpaceHeapSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** used_heap_size_post_build field predicates */
  usedHeapSizePostBuild?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildGT?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildGTE?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  usedHeapSizePostBuildIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  usedHeapSizePostBuildLT?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildLTE?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildNEQ?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  usedHeapSizePostBuildNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Metrics = Node & {
  __typename?: 'Metrics';
  actionSummary?: Maybe<ActionSummary>;
  artifactMetrics?: Maybe<ArtifactMetrics>;
  bazelInvocation?: Maybe<BazelInvocation>;
  bazelInvocationID?: Maybe<Scalars['ID']['output']>;
  buildGraphMetrics?: Maybe<BuildGraphMetrics>;
  cumulativeMetrics?: Maybe<CumulativeMetrics>;
  dynamicExecutionMetrics?: Maybe<DynamicExecutionMetrics>;
  id: Scalars['ID']['output'];
  memoryMetrics?: Maybe<MemoryMetrics>;
  networkMetrics?: Maybe<NetworkMetrics>;
  packageMetrics?: Maybe<PackageMetrics>;
  targetMetrics?: Maybe<TargetMetrics>;
  timingMetrics?: Maybe<TimingMetrics>;
};

/** A connection to a list of items. */
export type MetricsConnection = {
  __typename?: 'MetricsConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MetricsEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MetricsEdge = {
  __typename?: 'MetricsEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Metrics>;
};

/**
 * MetricsWhereInput is used for filtering Metrics objects.
 * Input was generated by ent.
 */
export type MetricsWhereInput = {
  and?: InputMaybe<Array<MetricsWhereInput>>;
  /** bazel_invocation_id field predicates */
  bazelInvocationID?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bazelInvocationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** artifact_metrics edge predicates */
  hasArtifactMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasArtifactMetricsWith?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** build_graph_metrics edge predicates */
  hasBuildGraphMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasBuildGraphMetricsWith?: InputMaybe<Array<BuildGraphMetricsWhereInput>>;
  /** cumulative_metrics edge predicates */
  hasCumulativeMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasCumulativeMetricsWith?: InputMaybe<Array<CumulativeMetricsWhereInput>>;
  /** dynamic_execution_metrics edge predicates */
  hasDynamicExecutionMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasDynamicExecutionMetricsWith?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
  /** memory_metrics edge predicates */
  hasMemoryMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMemoryMetricsWith?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** network_metrics edge predicates */
  hasNetworkMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasNetworkMetricsWith?: InputMaybe<Array<NetworkMetricsWhereInput>>;
  /** package_metrics edge predicates */
  hasPackageMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageMetricsWith?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** target_metrics edge predicates */
  hasTargetMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasTargetMetricsWith?: InputMaybe<Array<TargetMetricsWhereInput>>;
  /** timing_metrics edge predicates */
  hasTimingMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasTimingMetricsWith?: InputMaybe<Array<TimingMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MetricsWhereInput>;
  or?: InputMaybe<Array<MetricsWhereInput>>;
};

export type MissDetail = Node & {
  __typename?: 'MissDetail';
  actionCacheStatistics?: Maybe<ActionCacheStatistics>;
  actionCacheStatisticsID?: Maybe<Scalars['ID']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  reason?: Maybe<MissDetailReason>;
};

/** MissDetailReason is enum for the field reason */
export enum MissDetailReason {
  CorruptedCacheEntry = 'CORRUPTED_CACHE_ENTRY',
  DifferentActionKey = 'DIFFERENT_ACTION_KEY',
  DifferentDeps = 'DIFFERENT_DEPS',
  DifferentEnvironment = 'DIFFERENT_ENVIRONMENT',
  DifferentFiles = 'DIFFERENT_FILES',
  NotCached = 'NOT_CACHED',
  UnconditionalExecution = 'UNCONDITIONAL_EXECUTION',
  Unknown = 'UNKNOWN'
}

/**
 * MissDetailWhereInput is used for filtering MissDetail objects.
 * Input was generated by ent.
 */
export type MissDetailWhereInput = {
  /** action_cache_statistics_id field predicates */
  actionCacheStatisticsID?: InputMaybe<Scalars['ID']['input']>;
  actionCacheStatisticsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionCacheStatisticsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionCacheStatisticsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  actionCacheStatisticsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionCacheStatisticsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<MissDetailWhereInput>>;
  /** count field predicates */
  count?: InputMaybe<Scalars['Int']['input']>;
  countGT?: InputMaybe<Scalars['Int']['input']>;
  countGTE?: InputMaybe<Scalars['Int']['input']>;
  countIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  countLT?: InputMaybe<Scalars['Int']['input']>;
  countLTE?: InputMaybe<Scalars['Int']['input']>;
  countNEQ?: InputMaybe<Scalars['Int']['input']>;
  countNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_cache_statistics edge predicates */
  hasActionCacheStatistics?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionCacheStatisticsWith?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MissDetailWhereInput>;
  or?: InputMaybe<Array<MissDetailWhereInput>>;
  /** reason field predicates */
  reason?: InputMaybe<MissDetailReason>;
  reasonIn?: InputMaybe<Array<MissDetailReason>>;
  reasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  reasonNEQ?: InputMaybe<MissDetailReason>;
  reasonNotIn?: InputMaybe<Array<MissDetailReason>>;
  reasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  deleteBuild: Scalars['Boolean']['output'];
  deleteBuildsBefore: DeleteResult;
  deleteInvocation: Scalars['Boolean']['output'];
  deleteInvocationsBefore: DeleteResult;
};


export type MutationDeleteBuildArgs = {
  buildUUID: Scalars['UUID']['input'];
};


export type MutationDeleteBuildsBeforeArgs = {
  time: Scalars['Time']['input'];
};


export type MutationDeleteInvocationArgs = {
  invocationId: Scalars['UUID']['input'];
};


export type MutationDeleteInvocationsBeforeArgs = {
  time: Scalars['Time']['input'];
};

export type NamedFile = {
  __typename?: 'NamedFile';
  name: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type NamedSetOfFiles = Node & {
  __typename?: 'NamedSetOfFiles';
  fileSets?: Maybe<NamedSetOfFiles>;
  files?: Maybe<Array<TestFile>>;
  id: Scalars['ID']['output'];
  outputGroup?: Maybe<OutputGroup>;
  outputGroupID?: Maybe<Scalars['ID']['output']>;
};

/**
 * NamedSetOfFilesWhereInput is used for filtering NamedSetOfFiles objects.
 * Input was generated by ent.
 */
export type NamedSetOfFilesWhereInput = {
  and?: InputMaybe<Array<NamedSetOfFilesWhereInput>>;
  /** file_sets edge predicates */
  hasFileSets?: InputMaybe<Scalars['Boolean']['input']>;
  hasFileSetsWith?: InputMaybe<Array<NamedSetOfFilesWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** output_group edge predicates */
  hasOutputGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasOutputGroupWith?: InputMaybe<Array<OutputGroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NamedSetOfFilesWhereInput>;
  or?: InputMaybe<Array<NamedSetOfFilesWhereInput>>;
  /** output_group_id field predicates */
  outputGroupID?: InputMaybe<Scalars['ID']['input']>;
  outputGroupIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  outputGroupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  outputGroupIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  outputGroupIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  outputGroupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type NetworkMetrics = Node & {
  __typename?: 'NetworkMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  systemNetworkStats?: Maybe<SystemNetworkStats>;
};

/**
 * NetworkMetricsWhereInput is used for filtering NetworkMetrics objects.
 * Input was generated by ent.
 */
export type NetworkMetricsWhereInput = {
  and?: InputMaybe<Array<NetworkMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** system_network_stats edge predicates */
  hasSystemNetworkStats?: InputMaybe<Scalars['Boolean']['input']>;
  hasSystemNetworkStatsWith?: InputMaybe<Array<SystemNetworkStatsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NetworkMetricsWhereInput>;
  or?: InputMaybe<Array<NetworkMetricsWhereInput>>;
};

/**
 * An object with an ID.
 * Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
 */
export type Node = {
  /** The id of the object. */
  id: Scalars['ID']['output'];
};

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  Asc = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  Desc = 'DESC'
}

export type OutputGroup = Node & {
  __typename?: 'OutputGroup';
  fileSets?: Maybe<NamedSetOfFiles>;
  id: Scalars['ID']['output'];
  incomplete?: Maybe<Scalars['Boolean']['output']>;
  inlineFiles?: Maybe<Array<TestFile>>;
  name?: Maybe<Scalars['String']['output']>;
  targetComplete?: Maybe<TargetComplete>;
  targetCompleteID?: Maybe<Scalars['ID']['output']>;
};

/**
 * OutputGroupWhereInput is used for filtering OutputGroup objects.
 * Input was generated by ent.
 */
export type OutputGroupWhereInput = {
  and?: InputMaybe<Array<OutputGroupWhereInput>>;
  /** file_sets edge predicates */
  hasFileSets?: InputMaybe<Scalars['Boolean']['input']>;
  hasFileSetsWith?: InputMaybe<Array<NamedSetOfFilesWhereInput>>;
  /** inline_files edge predicates */
  hasInlineFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasInlineFilesWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** target_complete edge predicates */
  hasTargetComplete?: InputMaybe<Scalars['Boolean']['input']>;
  hasTargetCompleteWith?: InputMaybe<Array<TargetCompleteWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** incomplete field predicates */
  incomplete?: InputMaybe<Scalars['Boolean']['input']>;
  incompleteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  incompleteNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  incompleteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<OutputGroupWhereInput>;
  or?: InputMaybe<Array<OutputGroupWhereInput>>;
  /** target_complete_id field predicates */
  targetCompleteID?: InputMaybe<Scalars['ID']['input']>;
  targetCompleteIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  targetCompleteIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetCompleteIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  targetCompleteIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  targetCompleteIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PackageLoadMetrics = Node & {
  __typename?: 'PackageLoadMetrics';
  computationSteps?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  loadDuration?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  numTargets?: Maybe<Scalars['Int']['output']>;
  numTransitiveLoads?: Maybe<Scalars['Int']['output']>;
  packageMetrics?: Maybe<PackageMetrics>;
  packageMetricsID?: Maybe<Scalars['ID']['output']>;
  packageOverhead?: Maybe<Scalars['Int']['output']>;
};

/**
 * PackageLoadMetricsWhereInput is used for filtering PackageLoadMetrics objects.
 * Input was generated by ent.
 */
export type PackageLoadMetricsWhereInput = {
  and?: InputMaybe<Array<PackageLoadMetricsWhereInput>>;
  /** computation_steps field predicates */
  computationSteps?: InputMaybe<Scalars['Int']['input']>;
  computationStepsGT?: InputMaybe<Scalars['Int']['input']>;
  computationStepsGTE?: InputMaybe<Scalars['Int']['input']>;
  computationStepsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  computationStepsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  computationStepsLT?: InputMaybe<Scalars['Int']['input']>;
  computationStepsLTE?: InputMaybe<Scalars['Int']['input']>;
  computationStepsNEQ?: InputMaybe<Scalars['Int']['input']>;
  computationStepsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  computationStepsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** package_metrics edge predicates */
  hasPackageMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageMetricsWith?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** load_duration field predicates */
  loadDuration?: InputMaybe<Scalars['Int']['input']>;
  loadDurationGT?: InputMaybe<Scalars['Int']['input']>;
  loadDurationGTE?: InputMaybe<Scalars['Int']['input']>;
  loadDurationIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadDurationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  loadDurationLT?: InputMaybe<Scalars['Int']['input']>;
  loadDurationLTE?: InputMaybe<Scalars['Int']['input']>;
  loadDurationNEQ?: InputMaybe<Scalars['Int']['input']>;
  loadDurationNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadDurationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<PackageLoadMetricsWhereInput>;
  /** num_targets field predicates */
  numTargets?: InputMaybe<Scalars['Int']['input']>;
  numTargetsGT?: InputMaybe<Scalars['Int']['input']>;
  numTargetsGTE?: InputMaybe<Scalars['Int']['input']>;
  numTargetsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTargetsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numTargetsLT?: InputMaybe<Scalars['Int']['input']>;
  numTargetsLTE?: InputMaybe<Scalars['Int']['input']>;
  numTargetsNEQ?: InputMaybe<Scalars['Int']['input']>;
  numTargetsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTargetsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** num_transitive_loads field predicates */
  numTransitiveLoads?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsGT?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsGTE?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTransitiveLoadsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numTransitiveLoadsLT?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsLTE?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsNEQ?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTransitiveLoadsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<PackageLoadMetricsWhereInput>>;
  /** package_metrics_id field predicates */
  packageMetricsID?: InputMaybe<Scalars['ID']['input']>;
  packageMetricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  packageMetricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packageMetricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  packageMetricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  packageMetricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** package_overhead field predicates */
  packageOverhead?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadGT?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadGTE?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packageOverheadIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packageOverheadLT?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadLTE?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadNEQ?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packageOverheadNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PackageMetrics = Node & {
  __typename?: 'PackageMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  packageLoadMetrics?: Maybe<Array<PackageLoadMetrics>>;
  packagesLoaded?: Maybe<Scalars['Int']['output']>;
};

/**
 * PackageMetricsWhereInput is used for filtering PackageMetrics objects.
 * Input was generated by ent.
 */
export type PackageMetricsWhereInput = {
  and?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** package_load_metrics edge predicates */
  hasPackageLoadMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageLoadMetricsWith?: InputMaybe<Array<PackageLoadMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<PackageMetricsWhereInput>;
  or?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** packages_loaded field predicates */
  packagesLoaded?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedGT?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedGTE?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packagesLoadedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packagesLoadedLT?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedLTE?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedNEQ?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packagesLoadedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

/**
 * Information about pagination in a connection.
 * https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
 */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type Problem = {
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
};

export type Profile = {
  __typename?: 'Profile';
  digest: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  sizeInBytes: Scalars['Int']['output'];
};

export type ProgressProblem = Node & Problem & {
  __typename?: 'ProgressProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  output: Scalars['String']['output'];
};

export type Query = {
  __typename?: 'Query';
  bazelInvocation: BazelInvocation;
  findBazelInvocations: BazelInvocationConnection;
  findBuilds: BuildConnection;
  findMetrics: MetricsConnection;
  findRunnerCounts: RunnerCountConnection;
  findTargets: TargetPairConnection;
  findTests: TestCollectionConnection;
  getAveragePassPercentageForLabel?: Maybe<Scalars['Float']['output']>;
  getBuild?: Maybe<Build>;
  getTargetDurationAggregation?: Maybe<Array<Maybe<TargetAggregate>>>;
  getTargetPassAggregation?: Maybe<Array<Maybe<TargetAggregate>>>;
  getTargetsWithOffset?: Maybe<TargetGridResult>;
  getTestDurationAggregation?: Maybe<Array<Maybe<TargetAggregate>>>;
  getTestPassAggregation?: Maybe<Array<Maybe<TargetAggregate>>>;
  getTestsWithOffset?: Maybe<TestGridResult>;
  getUniqueTargetLabels?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  getUniqueTestLabels?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** Fetches an object given its ID. */
  node?: Maybe<Node>;
  /** Lookup nodes by a list of IDs. */
  nodes: Array<Maybe<Node>>;
};


export type QueryBazelInvocationArgs = {
  invocationId: Scalars['String']['input'];
};


export type QueryFindBazelInvocationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<BazelInvocationOrder>;
  where?: InputMaybe<BazelInvocationWhereInput>;
};


export type QueryFindBuildsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BuildWhereInput>;
};


export type QueryFindMetricsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<MetricsWhereInput>;
};


export type QueryFindRunnerCountsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RunnerCountWhereInput>;
};


export type QueryFindTargetsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TargetPairOrder>;
  where?: InputMaybe<TargetPairWhereInput>;
};


export type QueryFindTestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TestCollectionOrder>;
  where?: InputMaybe<TestCollectionWhereInput>;
};


export type QueryGetAveragePassPercentageForLabelArgs = {
  label: Scalars['String']['input'];
};


export type QueryGetBuildArgs = {
  buildURL?: InputMaybe<Scalars['String']['input']>;
  buildUUID?: InputMaybe<Scalars['UUID']['input']>;
};


export type QueryGetTargetDurationAggregationArgs = {
  label?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetTargetPassAggregationArgs = {
  label?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetTargetsWithOffsetArgs = {
  direction?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetTestDurationAggregationArgs = {
  label?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetTestPassAggregationArgs = {
  label?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetTestsWithOffsetArgs = {
  direction?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetUniqueTargetLabelsArgs = {
  param?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetUniqueTestLabelsArgs = {
  param?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id: Scalars['ID']['input'];
};


export type QueryNodesArgs = {
  ids: Array<Scalars['ID']['input']>;
};

export type RaceStatistics = Node & {
  __typename?: 'RaceStatistics';
  dynamicExecutionMetrics?: Maybe<DynamicExecutionMetrics>;
  dynamicExecutionMetricsID?: Maybe<Scalars['ID']['output']>;
  id: Scalars['ID']['output'];
  localRunner?: Maybe<Scalars['String']['output']>;
  localWins?: Maybe<Scalars['Int']['output']>;
  mnemonic?: Maybe<Scalars['String']['output']>;
  remoteRunner?: Maybe<Scalars['String']['output']>;
  renoteWins?: Maybe<Scalars['Int']['output']>;
};

/**
 * RaceStatisticsWhereInput is used for filtering RaceStatistics objects.
 * Input was generated by ent.
 */
export type RaceStatisticsWhereInput = {
  and?: InputMaybe<Array<RaceStatisticsWhereInput>>;
  /** dynamic_execution_metrics_id field predicates */
  dynamicExecutionMetricsID?: InputMaybe<Scalars['ID']['input']>;
  dynamicExecutionMetricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  dynamicExecutionMetricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  dynamicExecutionMetricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  dynamicExecutionMetricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  dynamicExecutionMetricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** dynamic_execution_metrics edge predicates */
  hasDynamicExecutionMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasDynamicExecutionMetricsWith?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** local_runner field predicates */
  localRunner?: InputMaybe<Scalars['String']['input']>;
  localRunnerContains?: InputMaybe<Scalars['String']['input']>;
  localRunnerContainsFold?: InputMaybe<Scalars['String']['input']>;
  localRunnerEqualFold?: InputMaybe<Scalars['String']['input']>;
  localRunnerGT?: InputMaybe<Scalars['String']['input']>;
  localRunnerGTE?: InputMaybe<Scalars['String']['input']>;
  localRunnerHasPrefix?: InputMaybe<Scalars['String']['input']>;
  localRunnerHasSuffix?: InputMaybe<Scalars['String']['input']>;
  localRunnerIn?: InputMaybe<Array<Scalars['String']['input']>>;
  localRunnerIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  localRunnerLT?: InputMaybe<Scalars['String']['input']>;
  localRunnerLTE?: InputMaybe<Scalars['String']['input']>;
  localRunnerNEQ?: InputMaybe<Scalars['String']['input']>;
  localRunnerNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  localRunnerNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** local_wins field predicates */
  localWins?: InputMaybe<Scalars['Int']['input']>;
  localWinsGT?: InputMaybe<Scalars['Int']['input']>;
  localWinsGTE?: InputMaybe<Scalars['Int']['input']>;
  localWinsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  localWinsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  localWinsLT?: InputMaybe<Scalars['Int']['input']>;
  localWinsLTE?: InputMaybe<Scalars['Int']['input']>;
  localWinsNEQ?: InputMaybe<Scalars['Int']['input']>;
  localWinsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  localWinsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mnemonic field predicates */
  mnemonic?: InputMaybe<Scalars['String']['input']>;
  mnemonicContains?: InputMaybe<Scalars['String']['input']>;
  mnemonicContainsFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicEqualFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicGT?: InputMaybe<Scalars['String']['input']>;
  mnemonicGTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mnemonicIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mnemonicLT?: InputMaybe<Scalars['String']['input']>;
  mnemonicLTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicNEQ?: InputMaybe<Scalars['String']['input']>;
  mnemonicNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<RaceStatisticsWhereInput>;
  or?: InputMaybe<Array<RaceStatisticsWhereInput>>;
  /** remote_runner field predicates */
  remoteRunner?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerContains?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerContainsFold?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerEqualFold?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerGT?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerGTE?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerHasPrefix?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerHasSuffix?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerIn?: InputMaybe<Array<Scalars['String']['input']>>;
  remoteRunnerIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  remoteRunnerLT?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerLTE?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerNEQ?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  remoteRunnerNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** renote_wins field predicates */
  renoteWins?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsGT?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsGTE?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  renoteWinsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  renoteWinsLT?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsLTE?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsNEQ?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  renoteWinsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ResourceUsage = Node & {
  __typename?: 'ResourceUsage';
  executionInfo?: Maybe<ExectionInfo>;
  executionInfoID?: Maybe<Scalars['ID']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

/**
 * ResourceUsageWhereInput is used for filtering ResourceUsage objects.
 * Input was generated by ent.
 */
export type ResourceUsageWhereInput = {
  and?: InputMaybe<Array<ResourceUsageWhereInput>>;
  /** execution_info_id field predicates */
  executionInfoID?: InputMaybe<Scalars['ID']['input']>;
  executionInfoIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionInfoIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  executionInfoIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  executionInfoIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionInfoIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** execution_info edge predicates */
  hasExecutionInfo?: InputMaybe<Scalars['Boolean']['input']>;
  hasExecutionInfoWith?: InputMaybe<Array<ExectionInfoWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ResourceUsageWhereInput>;
  or?: InputMaybe<Array<ResourceUsageWhereInput>>;
  /** value field predicates */
  value?: InputMaybe<Scalars['String']['input']>;
  valueContains?: InputMaybe<Scalars['String']['input']>;
  valueContainsFold?: InputMaybe<Scalars['String']['input']>;
  valueEqualFold?: InputMaybe<Scalars['String']['input']>;
  valueGT?: InputMaybe<Scalars['String']['input']>;
  valueGTE?: InputMaybe<Scalars['String']['input']>;
  valueHasPrefix?: InputMaybe<Scalars['String']['input']>;
  valueHasSuffix?: InputMaybe<Scalars['String']['input']>;
  valueIn?: InputMaybe<Array<Scalars['String']['input']>>;
  valueIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  valueLT?: InputMaybe<Scalars['String']['input']>;
  valueLTE?: InputMaybe<Scalars['String']['input']>;
  valueNEQ?: InputMaybe<Scalars['String']['input']>;
  valueNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  valueNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RunnerCount = Node & {
  __typename?: 'RunnerCount';
  actionSummary?: Maybe<ActionSummary>;
  actionSummaryID?: Maybe<Scalars['ID']['output']>;
  actionsExecuted?: Maybe<Scalars['Int']['output']>;
  execKind?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

/** A connection to a list of items. */
export type RunnerCountConnection = {
  __typename?: 'RunnerCountConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<RunnerCountEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type RunnerCountEdge = {
  __typename?: 'RunnerCountEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<RunnerCount>;
};

/**
 * RunnerCountWhereInput is used for filtering RunnerCount objects.
 * Input was generated by ent.
 */
export type RunnerCountWhereInput = {
  /** action_summary_id field predicates */
  actionSummaryID?: InputMaybe<Scalars['ID']['input']>;
  actionSummaryIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionSummaryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionSummaryIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  actionSummaryIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  actionSummaryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actions_executed field predicates */
  actionsExecuted?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<RunnerCountWhereInput>>;
  /** exec_kind field predicates */
  execKind?: InputMaybe<Scalars['String']['input']>;
  execKindContains?: InputMaybe<Scalars['String']['input']>;
  execKindContainsFold?: InputMaybe<Scalars['String']['input']>;
  execKindEqualFold?: InputMaybe<Scalars['String']['input']>;
  execKindGT?: InputMaybe<Scalars['String']['input']>;
  execKindGTE?: InputMaybe<Scalars['String']['input']>;
  execKindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  execKindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  execKindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  execKindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  execKindLT?: InputMaybe<Scalars['String']['input']>;
  execKindLTE?: InputMaybe<Scalars['String']['input']>;
  execKindNEQ?: InputMaybe<Scalars['String']['input']>;
  execKindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  execKindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<RunnerCountWhereInput>;
  or?: InputMaybe<Array<RunnerCountWhereInput>>;
};

export type SourceControl = Node & {
  __typename?: 'SourceControl';
  action?: Maybe<Scalars['String']['output']>;
  actor?: Maybe<Scalars['String']['output']>;
  bazelInvocation?: Maybe<BazelInvocation>;
  bazelInvocationID?: Maybe<Scalars['ID']['output']>;
  branch?: Maybe<Scalars['String']['output']>;
  commitSha?: Maybe<Scalars['String']['output']>;
  eventName?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  job?: Maybe<Scalars['String']['output']>;
  refs?: Maybe<Scalars['String']['output']>;
  repoURL?: Maybe<Scalars['String']['output']>;
  runID?: Maybe<Scalars['String']['output']>;
  runnerArch?: Maybe<Scalars['String']['output']>;
  runnerName?: Maybe<Scalars['String']['output']>;
  runnerOs?: Maybe<Scalars['String']['output']>;
  workflow?: Maybe<Scalars['String']['output']>;
  workspace?: Maybe<Scalars['String']['output']>;
};

/**
 * SourceControlWhereInput is used for filtering SourceControl objects.
 * Input was generated by ent.
 */
export type SourceControlWhereInput = {
  /** action field predicates */
  action?: InputMaybe<Scalars['String']['input']>;
  actionContains?: InputMaybe<Scalars['String']['input']>;
  actionContainsFold?: InputMaybe<Scalars['String']['input']>;
  actionEqualFold?: InputMaybe<Scalars['String']['input']>;
  actionGT?: InputMaybe<Scalars['String']['input']>;
  actionGTE?: InputMaybe<Scalars['String']['input']>;
  actionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  actionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  actionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  actionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionLT?: InputMaybe<Scalars['String']['input']>;
  actionLTE?: InputMaybe<Scalars['String']['input']>;
  actionNEQ?: InputMaybe<Scalars['String']['input']>;
  actionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  actionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actor field predicates */
  actor?: InputMaybe<Scalars['String']['input']>;
  actorContains?: InputMaybe<Scalars['String']['input']>;
  actorContainsFold?: InputMaybe<Scalars['String']['input']>;
  actorEqualFold?: InputMaybe<Scalars['String']['input']>;
  actorGT?: InputMaybe<Scalars['String']['input']>;
  actorGTE?: InputMaybe<Scalars['String']['input']>;
  actorHasPrefix?: InputMaybe<Scalars['String']['input']>;
  actorHasSuffix?: InputMaybe<Scalars['String']['input']>;
  actorIn?: InputMaybe<Array<Scalars['String']['input']>>;
  actorIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actorLT?: InputMaybe<Scalars['String']['input']>;
  actorLTE?: InputMaybe<Scalars['String']['input']>;
  actorNEQ?: InputMaybe<Scalars['String']['input']>;
  actorNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  actorNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<SourceControlWhereInput>>;
  /** bazel_invocation_id field predicates */
  bazelInvocationID?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bazelInvocationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** branch field predicates */
  branch?: InputMaybe<Scalars['String']['input']>;
  branchContains?: InputMaybe<Scalars['String']['input']>;
  branchContainsFold?: InputMaybe<Scalars['String']['input']>;
  branchEqualFold?: InputMaybe<Scalars['String']['input']>;
  branchGT?: InputMaybe<Scalars['String']['input']>;
  branchGTE?: InputMaybe<Scalars['String']['input']>;
  branchHasPrefix?: InputMaybe<Scalars['String']['input']>;
  branchHasSuffix?: InputMaybe<Scalars['String']['input']>;
  branchIn?: InputMaybe<Array<Scalars['String']['input']>>;
  branchIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  branchLT?: InputMaybe<Scalars['String']['input']>;
  branchLTE?: InputMaybe<Scalars['String']['input']>;
  branchNEQ?: InputMaybe<Scalars['String']['input']>;
  branchNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  branchNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** commit_sha field predicates */
  commitSha?: InputMaybe<Scalars['String']['input']>;
  commitShaContains?: InputMaybe<Scalars['String']['input']>;
  commitShaContainsFold?: InputMaybe<Scalars['String']['input']>;
  commitShaEqualFold?: InputMaybe<Scalars['String']['input']>;
  commitShaGT?: InputMaybe<Scalars['String']['input']>;
  commitShaGTE?: InputMaybe<Scalars['String']['input']>;
  commitShaHasPrefix?: InputMaybe<Scalars['String']['input']>;
  commitShaHasSuffix?: InputMaybe<Scalars['String']['input']>;
  commitShaIn?: InputMaybe<Array<Scalars['String']['input']>>;
  commitShaIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  commitShaLT?: InputMaybe<Scalars['String']['input']>;
  commitShaLTE?: InputMaybe<Scalars['String']['input']>;
  commitShaNEQ?: InputMaybe<Scalars['String']['input']>;
  commitShaNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  commitShaNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_name field predicates */
  eventName?: InputMaybe<Scalars['String']['input']>;
  eventNameContains?: InputMaybe<Scalars['String']['input']>;
  eventNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventNameGT?: InputMaybe<Scalars['String']['input']>;
  eventNameGTE?: InputMaybe<Scalars['String']['input']>;
  eventNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  eventNameLT?: InputMaybe<Scalars['String']['input']>;
  eventNameLTE?: InputMaybe<Scalars['String']['input']>;
  eventNameNEQ?: InputMaybe<Scalars['String']['input']>;
  eventNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** job field predicates */
  job?: InputMaybe<Scalars['String']['input']>;
  jobContains?: InputMaybe<Scalars['String']['input']>;
  jobContainsFold?: InputMaybe<Scalars['String']['input']>;
  jobEqualFold?: InputMaybe<Scalars['String']['input']>;
  jobGT?: InputMaybe<Scalars['String']['input']>;
  jobGTE?: InputMaybe<Scalars['String']['input']>;
  jobHasPrefix?: InputMaybe<Scalars['String']['input']>;
  jobHasSuffix?: InputMaybe<Scalars['String']['input']>;
  jobIn?: InputMaybe<Array<Scalars['String']['input']>>;
  jobIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  jobLT?: InputMaybe<Scalars['String']['input']>;
  jobLTE?: InputMaybe<Scalars['String']['input']>;
  jobNEQ?: InputMaybe<Scalars['String']['input']>;
  jobNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  jobNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<SourceControlWhereInput>;
  or?: InputMaybe<Array<SourceControlWhereInput>>;
  /** refs field predicates */
  refs?: InputMaybe<Scalars['String']['input']>;
  refsContains?: InputMaybe<Scalars['String']['input']>;
  refsContainsFold?: InputMaybe<Scalars['String']['input']>;
  refsEqualFold?: InputMaybe<Scalars['String']['input']>;
  refsGT?: InputMaybe<Scalars['String']['input']>;
  refsGTE?: InputMaybe<Scalars['String']['input']>;
  refsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refsLT?: InputMaybe<Scalars['String']['input']>;
  refsLTE?: InputMaybe<Scalars['String']['input']>;
  refsNEQ?: InputMaybe<Scalars['String']['input']>;
  refsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** repo_url field predicates */
  repoURL?: InputMaybe<Scalars['String']['input']>;
  repoURLContains?: InputMaybe<Scalars['String']['input']>;
  repoURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  repoURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  repoURLGT?: InputMaybe<Scalars['String']['input']>;
  repoURLGTE?: InputMaybe<Scalars['String']['input']>;
  repoURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  repoURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  repoURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repoURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  repoURLLT?: InputMaybe<Scalars['String']['input']>;
  repoURLLTE?: InputMaybe<Scalars['String']['input']>;
  repoURLNEQ?: InputMaybe<Scalars['String']['input']>;
  repoURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repoURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** run_id field predicates */
  runID?: InputMaybe<Scalars['String']['input']>;
  runIDContains?: InputMaybe<Scalars['String']['input']>;
  runIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  runIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  runIDGT?: InputMaybe<Scalars['String']['input']>;
  runIDGTE?: InputMaybe<Scalars['String']['input']>;
  runIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  runIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  runIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  runIDLT?: InputMaybe<Scalars['String']['input']>;
  runIDLTE?: InputMaybe<Scalars['String']['input']>;
  runIDNEQ?: InputMaybe<Scalars['String']['input']>;
  runIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** runner_arch field predicates */
  runnerArch?: InputMaybe<Scalars['String']['input']>;
  runnerArchContains?: InputMaybe<Scalars['String']['input']>;
  runnerArchContainsFold?: InputMaybe<Scalars['String']['input']>;
  runnerArchEqualFold?: InputMaybe<Scalars['String']['input']>;
  runnerArchGT?: InputMaybe<Scalars['String']['input']>;
  runnerArchGTE?: InputMaybe<Scalars['String']['input']>;
  runnerArchHasPrefix?: InputMaybe<Scalars['String']['input']>;
  runnerArchHasSuffix?: InputMaybe<Scalars['String']['input']>;
  runnerArchIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runnerArchIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  runnerArchLT?: InputMaybe<Scalars['String']['input']>;
  runnerArchLTE?: InputMaybe<Scalars['String']['input']>;
  runnerArchNEQ?: InputMaybe<Scalars['String']['input']>;
  runnerArchNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runnerArchNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** runner_name field predicates */
  runnerName?: InputMaybe<Scalars['String']['input']>;
  runnerNameContains?: InputMaybe<Scalars['String']['input']>;
  runnerNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  runnerNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  runnerNameGT?: InputMaybe<Scalars['String']['input']>;
  runnerNameGTE?: InputMaybe<Scalars['String']['input']>;
  runnerNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  runnerNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  runnerNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runnerNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  runnerNameLT?: InputMaybe<Scalars['String']['input']>;
  runnerNameLTE?: InputMaybe<Scalars['String']['input']>;
  runnerNameNEQ?: InputMaybe<Scalars['String']['input']>;
  runnerNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runnerNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** runner_os field predicates */
  runnerOs?: InputMaybe<Scalars['String']['input']>;
  runnerOsContains?: InputMaybe<Scalars['String']['input']>;
  runnerOsContainsFold?: InputMaybe<Scalars['String']['input']>;
  runnerOsEqualFold?: InputMaybe<Scalars['String']['input']>;
  runnerOsGT?: InputMaybe<Scalars['String']['input']>;
  runnerOsGTE?: InputMaybe<Scalars['String']['input']>;
  runnerOsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  runnerOsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  runnerOsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runnerOsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  runnerOsLT?: InputMaybe<Scalars['String']['input']>;
  runnerOsLTE?: InputMaybe<Scalars['String']['input']>;
  runnerOsNEQ?: InputMaybe<Scalars['String']['input']>;
  runnerOsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runnerOsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** workflow field predicates */
  workflow?: InputMaybe<Scalars['String']['input']>;
  workflowContains?: InputMaybe<Scalars['String']['input']>;
  workflowContainsFold?: InputMaybe<Scalars['String']['input']>;
  workflowEqualFold?: InputMaybe<Scalars['String']['input']>;
  workflowGT?: InputMaybe<Scalars['String']['input']>;
  workflowGTE?: InputMaybe<Scalars['String']['input']>;
  workflowHasPrefix?: InputMaybe<Scalars['String']['input']>;
  workflowHasSuffix?: InputMaybe<Scalars['String']['input']>;
  workflowIn?: InputMaybe<Array<Scalars['String']['input']>>;
  workflowIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  workflowLT?: InputMaybe<Scalars['String']['input']>;
  workflowLTE?: InputMaybe<Scalars['String']['input']>;
  workflowNEQ?: InputMaybe<Scalars['String']['input']>;
  workflowNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  workflowNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** workspace field predicates */
  workspace?: InputMaybe<Scalars['String']['input']>;
  workspaceContains?: InputMaybe<Scalars['String']['input']>;
  workspaceContainsFold?: InputMaybe<Scalars['String']['input']>;
  workspaceEqualFold?: InputMaybe<Scalars['String']['input']>;
  workspaceGT?: InputMaybe<Scalars['String']['input']>;
  workspaceGTE?: InputMaybe<Scalars['String']['input']>;
  workspaceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  workspaceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  workspaceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  workspaceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  workspaceLT?: InputMaybe<Scalars['String']['input']>;
  workspaceLTE?: InputMaybe<Scalars['String']['input']>;
  workspaceNEQ?: InputMaybe<Scalars['String']['input']>;
  workspaceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  workspaceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SystemNetworkStats = Node & {
  __typename?: 'SystemNetworkStats';
  bytesRecv?: Maybe<Scalars['Int']['output']>;
  bytesSent?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  networkMetrics?: Maybe<NetworkMetrics>;
  networkMetricsID?: Maybe<Scalars['ID']['output']>;
  packetsRecv?: Maybe<Scalars['Int']['output']>;
  packetsSent?: Maybe<Scalars['Int']['output']>;
  peakBytesRecvPerSec?: Maybe<Scalars['Int']['output']>;
  peakBytesSentPerSec?: Maybe<Scalars['Int']['output']>;
  peakPacketsRecvPerSec?: Maybe<Scalars['Int']['output']>;
  peakPacketsSentPerSec?: Maybe<Scalars['Int']['output']>;
};

/**
 * SystemNetworkStatsWhereInput is used for filtering SystemNetworkStats objects.
 * Input was generated by ent.
 */
export type SystemNetworkStatsWhereInput = {
  and?: InputMaybe<Array<SystemNetworkStatsWhereInput>>;
  /** bytes_recv field predicates */
  bytesRecv?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvGT?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvGTE?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesRecvIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bytesRecvLT?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvLTE?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvNEQ?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesRecvNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** bytes_sent field predicates */
  bytesSent?: InputMaybe<Scalars['Int']['input']>;
  bytesSentGT?: InputMaybe<Scalars['Int']['input']>;
  bytesSentGTE?: InputMaybe<Scalars['Int']['input']>;
  bytesSentIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesSentIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bytesSentLT?: InputMaybe<Scalars['Int']['input']>;
  bytesSentLTE?: InputMaybe<Scalars['Int']['input']>;
  bytesSentNEQ?: InputMaybe<Scalars['Int']['input']>;
  bytesSentNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesSentNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** network_metrics edge predicates */
  hasNetworkMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasNetworkMetricsWith?: InputMaybe<Array<NetworkMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** network_metrics_id field predicates */
  networkMetricsID?: InputMaybe<Scalars['ID']['input']>;
  networkMetricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  networkMetricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  networkMetricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  networkMetricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  networkMetricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<SystemNetworkStatsWhereInput>;
  or?: InputMaybe<Array<SystemNetworkStatsWhereInput>>;
  /** packets_recv field predicates */
  packetsRecv?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvGT?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvGTE?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsRecvIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packetsRecvLT?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvLTE?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvNEQ?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsRecvNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** packets_sent field predicates */
  packetsSent?: InputMaybe<Scalars['Int']['input']>;
  packetsSentGT?: InputMaybe<Scalars['Int']['input']>;
  packetsSentGTE?: InputMaybe<Scalars['Int']['input']>;
  packetsSentIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsSentIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packetsSentLT?: InputMaybe<Scalars['Int']['input']>;
  packetsSentLTE?: InputMaybe<Scalars['Int']['input']>;
  packetsSentNEQ?: InputMaybe<Scalars['Int']['input']>;
  packetsSentNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsSentNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_bytes_recv_per_sec field predicates */
  peakBytesRecvPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesRecvPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakBytesRecvPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesRecvPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_bytes_sent_per_sec field predicates */
  peakBytesSentPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesSentPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakBytesSentPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesSentPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_packets_recv_per_sec field predicates */
  peakPacketsRecvPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsRecvPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPacketsRecvPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsRecvPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_packets_sent_per_sec field predicates */
  peakPacketsSentPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsSentPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPacketsSentPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsSentPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetAggregate = {
  __typename?: 'TargetAggregate';
  avg?: Maybe<Scalars['Int']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  max?: Maybe<Scalars['Int']['output']>;
  min?: Maybe<Scalars['Int']['output']>;
  pass?: Maybe<Scalars['Int']['output']>;
  sum?: Maybe<Scalars['Int']['output']>;
};

export type TargetComplete = Node & {
  __typename?: 'TargetComplete';
  directoryOutput?: Maybe<Array<TestFile>>;
  endTimeInMs?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  importantOutput?: Maybe<Array<TestFile>>;
  outputGroup?: Maybe<OutputGroup>;
  success?: Maybe<Scalars['Boolean']['output']>;
  tag?: Maybe<Array<Scalars['String']['output']>>;
  targetKind?: Maybe<Scalars['String']['output']>;
  targetPair?: Maybe<TargetPair>;
  targetPairID?: Maybe<Scalars['ID']['output']>;
  testSize?: Maybe<TargetCompleteTestSize>;
  testTimeout?: Maybe<Scalars['Int']['output']>;
  testTimeoutSeconds?: Maybe<Scalars['Int']['output']>;
};

/** TargetCompleteTestSize is enum for the field test_size */
export enum TargetCompleteTestSize {
  Enormous = 'ENORMOUS',
  Large = 'LARGE',
  Medium = 'MEDIUM',
  Small = 'SMALL',
  Unknown = 'UNKNOWN'
}

/**
 * TargetCompleteWhereInput is used for filtering TargetComplete objects.
 * Input was generated by ent.
 */
export type TargetCompleteWhereInput = {
  and?: InputMaybe<Array<TargetCompleteWhereInput>>;
  /** end_time_in_ms field predicates */
  endTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  endTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  endTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  endTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  endTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  endTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  endTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  endTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  endTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** directory_output edge predicates */
  hasDirectoryOutput?: InputMaybe<Scalars['Boolean']['input']>;
  hasDirectoryOutputWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** important_output edge predicates */
  hasImportantOutput?: InputMaybe<Scalars['Boolean']['input']>;
  hasImportantOutputWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** output_group edge predicates */
  hasOutputGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasOutputGroupWith?: InputMaybe<Array<OutputGroupWhereInput>>;
  /** target_pair edge predicates */
  hasTargetPair?: InputMaybe<Scalars['Boolean']['input']>;
  hasTargetPairWith?: InputMaybe<Array<TargetPairWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TargetCompleteWhereInput>;
  or?: InputMaybe<Array<TargetCompleteWhereInput>>;
  /** success field predicates */
  success?: InputMaybe<Scalars['Boolean']['input']>;
  successIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  successNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  successNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** target_kind field predicates */
  targetKind?: InputMaybe<Scalars['String']['input']>;
  targetKindContains?: InputMaybe<Scalars['String']['input']>;
  targetKindContainsFold?: InputMaybe<Scalars['String']['input']>;
  targetKindEqualFold?: InputMaybe<Scalars['String']['input']>;
  targetKindGT?: InputMaybe<Scalars['String']['input']>;
  targetKindGTE?: InputMaybe<Scalars['String']['input']>;
  targetKindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  targetKindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  targetKindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  targetKindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetKindLT?: InputMaybe<Scalars['String']['input']>;
  targetKindLTE?: InputMaybe<Scalars['String']['input']>;
  targetKindNEQ?: InputMaybe<Scalars['String']['input']>;
  targetKindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  targetKindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** target_pair_id field predicates */
  targetPairID?: InputMaybe<Scalars['ID']['input']>;
  targetPairIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  targetPairIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetPairIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  targetPairIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  targetPairIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_size field predicates */
  testSize?: InputMaybe<TargetCompleteTestSize>;
  testSizeIn?: InputMaybe<Array<TargetCompleteTestSize>>;
  testSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testSizeNEQ?: InputMaybe<TargetCompleteTestSize>;
  testSizeNotIn?: InputMaybe<Array<TargetCompleteTestSize>>;
  testSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_timeout field predicates */
  testTimeout?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutGT?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutGTE?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testTimeoutIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testTimeoutLT?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutLTE?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutNEQ?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testTimeoutNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_timeout_seconds field predicates */
  testTimeoutSeconds?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutSecondsGT?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutSecondsGTE?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutSecondsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testTimeoutSecondsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testTimeoutSecondsLT?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutSecondsLTE?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutSecondsNEQ?: InputMaybe<Scalars['Int']['input']>;
  testTimeoutSecondsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testTimeoutSecondsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetConfigured = Node & {
  __typename?: 'TargetConfigured';
  id: Scalars['ID']['output'];
  startTimeInMs?: Maybe<Scalars['Int']['output']>;
  tag?: Maybe<Array<Scalars['String']['output']>>;
  targetKind?: Maybe<Scalars['String']['output']>;
  targetPair?: Maybe<TargetPair>;
  targetPairID?: Maybe<Scalars['ID']['output']>;
  testSize?: Maybe<TargetConfiguredTestSize>;
};

/** TargetConfiguredTestSize is enum for the field test_size */
export enum TargetConfiguredTestSize {
  Enormous = 'ENORMOUS',
  Large = 'LARGE',
  Medium = 'MEDIUM',
  Small = 'SMALL',
  Unknown = 'UNKNOWN'
}

/**
 * TargetConfiguredWhereInput is used for filtering TargetConfigured objects.
 * Input was generated by ent.
 */
export type TargetConfiguredWhereInput = {
  and?: InputMaybe<Array<TargetConfiguredWhereInput>>;
  /** target_pair edge predicates */
  hasTargetPair?: InputMaybe<Scalars['Boolean']['input']>;
  hasTargetPairWith?: InputMaybe<Array<TargetPairWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TargetConfiguredWhereInput>;
  or?: InputMaybe<Array<TargetConfiguredWhereInput>>;
  /** start_time_in_ms field predicates */
  startTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  startTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  startTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  startTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  startTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  startTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  startTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  startTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** target_kind field predicates */
  targetKind?: InputMaybe<Scalars['String']['input']>;
  targetKindContains?: InputMaybe<Scalars['String']['input']>;
  targetKindContainsFold?: InputMaybe<Scalars['String']['input']>;
  targetKindEqualFold?: InputMaybe<Scalars['String']['input']>;
  targetKindGT?: InputMaybe<Scalars['String']['input']>;
  targetKindGTE?: InputMaybe<Scalars['String']['input']>;
  targetKindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  targetKindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  targetKindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  targetKindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetKindLT?: InputMaybe<Scalars['String']['input']>;
  targetKindLTE?: InputMaybe<Scalars['String']['input']>;
  targetKindNEQ?: InputMaybe<Scalars['String']['input']>;
  targetKindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  targetKindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** target_pair_id field predicates */
  targetPairID?: InputMaybe<Scalars['ID']['input']>;
  targetPairIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  targetPairIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetPairIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  targetPairIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  targetPairIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_size field predicates */
  testSize?: InputMaybe<TargetConfiguredTestSize>;
  testSizeIn?: InputMaybe<Array<TargetConfiguredTestSize>>;
  testSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testSizeNEQ?: InputMaybe<TargetConfiguredTestSize>;
  testSizeNotIn?: InputMaybe<Array<TargetConfiguredTestSize>>;
  testSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetGridCell = {
  __typename?: 'TargetGridCell';
  abortReason?: Maybe<TargetPairAbortReason>;
  complete?: Maybe<TargetComplete>;
  invocationId?: Maybe<Scalars['UUID']['output']>;
};

export type TargetGridResult = {
  __typename?: 'TargetGridResult';
  result?: Maybe<Array<Maybe<TargetGridRow>>>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type TargetGridRow = {
  __typename?: 'TargetGridRow';
  avg?: Maybe<Scalars['Float']['output']>;
  cells?: Maybe<Array<Maybe<TargetGridCell>>>;
  count?: Maybe<Scalars['Int']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  max?: Maybe<Scalars['Int']['output']>;
  min?: Maybe<Scalars['Int']['output']>;
  passRate?: Maybe<Scalars['Float']['output']>;
  sum?: Maybe<Scalars['Int']['output']>;
};

export type TargetMetrics = Node & {
  __typename?: 'TargetMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  metricsID?: Maybe<Scalars['ID']['output']>;
  targetsConfigured?: Maybe<Scalars['Int']['output']>;
  targetsConfiguredNotIncludingAspects?: Maybe<Scalars['Int']['output']>;
  targetsLoaded?: Maybe<Scalars['Int']['output']>;
};

/**
 * TargetMetricsWhereInput is used for filtering TargetMetrics objects.
 * Input was generated by ent.
 */
export type TargetMetricsWhereInput = {
  and?: InputMaybe<Array<TargetMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** metrics_id field predicates */
  metricsID?: InputMaybe<Scalars['ID']['input']>;
  metricsIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metricsIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  metricsIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  metricsIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TargetMetricsWhereInput>;
  or?: InputMaybe<Array<TargetMetricsWhereInput>>;
  /** targets_configured field predicates */
  targetsConfigured?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredGT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredGTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsConfiguredIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsConfiguredLT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredLTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNEQ?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** targets_configured_not_including_aspects field predicates */
  targetsConfiguredNotIncludingAspects?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsGT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsGTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsConfiguredNotIncludingAspectsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsConfiguredNotIncludingAspectsLT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsLTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsNEQ?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsConfiguredNotIncludingAspectsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsConfiguredNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** targets_loaded field predicates */
  targetsLoaded?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedGT?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedGTE?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsLoadedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsLoadedLT?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedLTE?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedNEQ?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsLoadedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetPair = Node & {
  __typename?: 'TargetPair';
  abortReason?: Maybe<TargetPairAbortReason>;
  bazelInvocation?: Maybe<BazelInvocation>;
  bazelInvocationID?: Maybe<Scalars['ID']['output']>;
  completion?: Maybe<TargetComplete>;
  configuration?: Maybe<TargetConfigured>;
  durationInMs?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  label?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
  targetKind?: Maybe<Scalars['String']['output']>;
  testSize?: Maybe<TargetPairTestSize>;
};

/** TargetPairAbortReason is enum for the field abort_reason */
export enum TargetPairAbortReason {
  AnalysisFailure = 'ANALYSIS_FAILURE',
  Incomplete = 'INCOMPLETE',
  Internal = 'INTERNAL',
  LoadingFailure = 'LOADING_FAILURE',
  NoAnalyze = 'NO_ANALYZE',
  NoBuild = 'NO_BUILD',
  OutOfMemory = 'OUT_OF_MEMORY',
  RemoteEnvironmentFailure = 'REMOTE_ENVIRONMENT_FAILURE',
  Skipped = 'SKIPPED',
  TimeOut = 'TIME_OUT',
  Unknown = 'UNKNOWN',
  UserInterrupted = 'USER_INTERRUPTED'
}

/** A connection to a list of items. */
export type TargetPairConnection = {
  __typename?: 'TargetPairConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TargetPairEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type TargetPairEdge = {
  __typename?: 'TargetPairEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<TargetPair>;
};

/** Ordering options for TargetPair connections */
export type TargetPairOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order TargetPairs. */
  field: TargetPairOrderField;
};

/** Properties by which TargetPair connections can be ordered. */
export enum TargetPairOrderField {
  Duration = 'DURATION'
}

/** TargetPairTestSize is enum for the field test_size */
export enum TargetPairTestSize {
  Enormous = 'ENORMOUS',
  Large = 'LARGE',
  Medium = 'MEDIUM',
  Small = 'SMALL',
  Unknown = 'UNKNOWN'
}

/**
 * TargetPairWhereInput is used for filtering TargetPair objects.
 * Input was generated by ent.
 */
export type TargetPairWhereInput = {
  /** abort_reason field predicates */
  abortReason?: InputMaybe<TargetPairAbortReason>;
  abortReasonIn?: InputMaybe<Array<TargetPairAbortReason>>;
  abortReasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  abortReasonNEQ?: InputMaybe<TargetPairAbortReason>;
  abortReasonNotIn?: InputMaybe<Array<TargetPairAbortReason>>;
  abortReasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<TargetPairWhereInput>>;
  /** bazel_invocation_id field predicates */
  bazelInvocationID?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bazelInvocationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** duration_in_ms field predicates */
  durationInMs?: InputMaybe<Scalars['Int']['input']>;
  durationInMsGT?: InputMaybe<Scalars['Int']['input']>;
  durationInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  durationInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  durationInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  durationInMsLT?: InputMaybe<Scalars['Int']['input']>;
  durationInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  durationInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  durationInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  durationInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** completion edge predicates */
  hasCompletion?: InputMaybe<Scalars['Boolean']['input']>;
  hasCompletionWith?: InputMaybe<Array<TargetCompleteWhereInput>>;
  /** configuration edge predicates */
  hasConfiguration?: InputMaybe<Scalars['Boolean']['input']>;
  hasConfigurationWith?: InputMaybe<Array<TargetConfiguredWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** label field predicates */
  label?: InputMaybe<Scalars['String']['input']>;
  labelContains?: InputMaybe<Scalars['String']['input']>;
  labelContainsFold?: InputMaybe<Scalars['String']['input']>;
  labelEqualFold?: InputMaybe<Scalars['String']['input']>;
  labelGT?: InputMaybe<Scalars['String']['input']>;
  labelGTE?: InputMaybe<Scalars['String']['input']>;
  labelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  labelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  labelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  labelLT?: InputMaybe<Scalars['String']['input']>;
  labelLTE?: InputMaybe<Scalars['String']['input']>;
  labelNEQ?: InputMaybe<Scalars['String']['input']>;
  labelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TargetPairWhereInput>;
  or?: InputMaybe<Array<TargetPairWhereInput>>;
  /** success field predicates */
  success?: InputMaybe<Scalars['Boolean']['input']>;
  successIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  successNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  successNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** target_kind field predicates */
  targetKind?: InputMaybe<Scalars['String']['input']>;
  targetKindContains?: InputMaybe<Scalars['String']['input']>;
  targetKindContainsFold?: InputMaybe<Scalars['String']['input']>;
  targetKindEqualFold?: InputMaybe<Scalars['String']['input']>;
  targetKindGT?: InputMaybe<Scalars['String']['input']>;
  targetKindGTE?: InputMaybe<Scalars['String']['input']>;
  targetKindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  targetKindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  targetKindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  targetKindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetKindLT?: InputMaybe<Scalars['String']['input']>;
  targetKindLTE?: InputMaybe<Scalars['String']['input']>;
  targetKindNEQ?: InputMaybe<Scalars['String']['input']>;
  targetKindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  targetKindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_size field predicates */
  testSize?: InputMaybe<TargetPairTestSize>;
  testSizeIn?: InputMaybe<Array<TargetPairTestSize>>;
  testSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testSizeNEQ?: InputMaybe<TargetPairTestSize>;
  testSizeNotIn?: InputMaybe<Array<TargetPairTestSize>>;
  testSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetProblem = Node & Problem & {
  __typename?: 'TargetProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
};

export type TestCollection = Node & {
  __typename?: 'TestCollection';
  bazelInvocation?: Maybe<BazelInvocation>;
  bazelInvocationID?: Maybe<Scalars['ID']['output']>;
  cachedLocally?: Maybe<Scalars['Boolean']['output']>;
  cachedRemotely?: Maybe<Scalars['Boolean']['output']>;
  durationMs?: Maybe<Scalars['Int']['output']>;
  firstSeen?: Maybe<Scalars['Time']['output']>;
  id: Scalars['ID']['output'];
  label?: Maybe<Scalars['String']['output']>;
  overallStatus?: Maybe<TestCollectionOverallStatus>;
  strategy?: Maybe<Scalars['String']['output']>;
  testResults?: Maybe<Array<TestResultBes>>;
  testSummary?: Maybe<TestSummary>;
};

/** A connection to a list of items. */
export type TestCollectionConnection = {
  __typename?: 'TestCollectionConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TestCollectionEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type TestCollectionEdge = {
  __typename?: 'TestCollectionEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<TestCollection>;
};

/** Ordering options for TestCollection connections */
export type TestCollectionOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order TestCollections. */
  field: TestCollectionOrderField;
};

/** Properties by which TestCollection connections can be ordered. */
export enum TestCollectionOrderField {
  Duration = 'DURATION',
  FirstSeen = 'FIRST_SEEN'
}

/** TestCollectionOverallStatus is enum for the field overall_status */
export enum TestCollectionOverallStatus {
  Failed = 'FAILED',
  FailedToBuild = 'FAILED_TO_BUILD',
  Flaky = 'FLAKY',
  Incomplete = 'INCOMPLETE',
  NoStatus = 'NO_STATUS',
  Passed = 'PASSED',
  RemoteFailure = 'REMOTE_FAILURE',
  Timeout = 'TIMEOUT',
  ToolHaltedBeforeTesting = 'TOOL_HALTED_BEFORE_TESTING'
}

/**
 * TestCollectionWhereInput is used for filtering TestCollection objects.
 * Input was generated by ent.
 */
export type TestCollectionWhereInput = {
  and?: InputMaybe<Array<TestCollectionWhereInput>>;
  /** bazel_invocation_id field predicates */
  bazelInvocationID?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bazelInvocationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  bazelInvocationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  bazelInvocationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cached_locally field predicates */
  cachedLocally?: InputMaybe<Scalars['Boolean']['input']>;
  cachedLocallyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cachedLocallyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  cachedLocallyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cached_remotely field predicates */
  cachedRemotely?: InputMaybe<Scalars['Boolean']['input']>;
  cachedRemotelyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cachedRemotelyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  cachedRemotelyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** duration_ms field predicates */
  durationMs?: InputMaybe<Scalars['Int']['input']>;
  durationMsGT?: InputMaybe<Scalars['Int']['input']>;
  durationMsGTE?: InputMaybe<Scalars['Int']['input']>;
  durationMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  durationMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  durationMsLT?: InputMaybe<Scalars['Int']['input']>;
  durationMsLTE?: InputMaybe<Scalars['Int']['input']>;
  durationMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  durationMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  durationMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** first_seen field predicates */
  firstSeen?: InputMaybe<Scalars['Time']['input']>;
  firstSeenGT?: InputMaybe<Scalars['Time']['input']>;
  firstSeenGTE?: InputMaybe<Scalars['Time']['input']>;
  firstSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  firstSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstSeenLT?: InputMaybe<Scalars['Time']['input']>;
  firstSeenLTE?: InputMaybe<Scalars['Time']['input']>;
  firstSeenNEQ?: InputMaybe<Scalars['Time']['input']>;
  firstSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  firstSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** test_results edge predicates */
  hasTestResults?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestResultsWith?: InputMaybe<Array<TestResultBesWhereInput>>;
  /** test_summary edge predicates */
  hasTestSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestSummaryWith?: InputMaybe<Array<TestSummaryWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** label field predicates */
  label?: InputMaybe<Scalars['String']['input']>;
  labelContains?: InputMaybe<Scalars['String']['input']>;
  labelContainsFold?: InputMaybe<Scalars['String']['input']>;
  labelEqualFold?: InputMaybe<Scalars['String']['input']>;
  labelGT?: InputMaybe<Scalars['String']['input']>;
  labelGTE?: InputMaybe<Scalars['String']['input']>;
  labelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  labelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  labelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  labelLT?: InputMaybe<Scalars['String']['input']>;
  labelLTE?: InputMaybe<Scalars['String']['input']>;
  labelNEQ?: InputMaybe<Scalars['String']['input']>;
  labelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TestCollectionWhereInput>;
  or?: InputMaybe<Array<TestCollectionWhereInput>>;
  /** overall_status field predicates */
  overallStatus?: InputMaybe<TestCollectionOverallStatus>;
  overallStatusIn?: InputMaybe<Array<TestCollectionOverallStatus>>;
  overallStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  overallStatusNEQ?: InputMaybe<TestCollectionOverallStatus>;
  overallStatusNotIn?: InputMaybe<Array<TestCollectionOverallStatus>>;
  overallStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** strategy field predicates */
  strategy?: InputMaybe<Scalars['String']['input']>;
  strategyContains?: InputMaybe<Scalars['String']['input']>;
  strategyContainsFold?: InputMaybe<Scalars['String']['input']>;
  strategyEqualFold?: InputMaybe<Scalars['String']['input']>;
  strategyGT?: InputMaybe<Scalars['String']['input']>;
  strategyGTE?: InputMaybe<Scalars['String']['input']>;
  strategyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  strategyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  strategyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  strategyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  strategyLT?: InputMaybe<Scalars['String']['input']>;
  strategyLTE?: InputMaybe<Scalars['String']['input']>;
  strategyNEQ?: InputMaybe<Scalars['String']['input']>;
  strategyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  strategyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TestFile = Node & {
  __typename?: 'TestFile';
  digest?: Maybe<Scalars['String']['output']>;
  file?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  length?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  prefix?: Maybe<Array<Scalars['String']['output']>>;
  testResult?: Maybe<TestResultBes>;
  testResultID?: Maybe<Scalars['ID']['output']>;
};

/**
 * TestFileWhereInput is used for filtering TestFile objects.
 * Input was generated by ent.
 */
export type TestFileWhereInput = {
  and?: InputMaybe<Array<TestFileWhereInput>>;
  /** digest field predicates */
  digest?: InputMaybe<Scalars['String']['input']>;
  digestContains?: InputMaybe<Scalars['String']['input']>;
  digestContainsFold?: InputMaybe<Scalars['String']['input']>;
  digestEqualFold?: InputMaybe<Scalars['String']['input']>;
  digestGT?: InputMaybe<Scalars['String']['input']>;
  digestGTE?: InputMaybe<Scalars['String']['input']>;
  digestHasPrefix?: InputMaybe<Scalars['String']['input']>;
  digestHasSuffix?: InputMaybe<Scalars['String']['input']>;
  digestIn?: InputMaybe<Array<Scalars['String']['input']>>;
  digestIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  digestLT?: InputMaybe<Scalars['String']['input']>;
  digestLTE?: InputMaybe<Scalars['String']['input']>;
  digestNEQ?: InputMaybe<Scalars['String']['input']>;
  digestNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  digestNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** file field predicates */
  file?: InputMaybe<Scalars['String']['input']>;
  fileContains?: InputMaybe<Scalars['String']['input']>;
  fileContainsFold?: InputMaybe<Scalars['String']['input']>;
  fileEqualFold?: InputMaybe<Scalars['String']['input']>;
  fileGT?: InputMaybe<Scalars['String']['input']>;
  fileGTE?: InputMaybe<Scalars['String']['input']>;
  fileHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fileHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fileIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fileIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  fileLT?: InputMaybe<Scalars['String']['input']>;
  fileLTE?: InputMaybe<Scalars['String']['input']>;
  fileNEQ?: InputMaybe<Scalars['String']['input']>;
  fileNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fileNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_result edge predicates */
  hasTestResult?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestResultWith?: InputMaybe<Array<TestResultBesWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** length field predicates */
  length?: InputMaybe<Scalars['Int']['input']>;
  lengthGT?: InputMaybe<Scalars['Int']['input']>;
  lengthGTE?: InputMaybe<Scalars['Int']['input']>;
  lengthIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lengthIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lengthLT?: InputMaybe<Scalars['Int']['input']>;
  lengthLTE?: InputMaybe<Scalars['Int']['input']>;
  lengthNEQ?: InputMaybe<Scalars['Int']['input']>;
  lengthNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lengthNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TestFileWhereInput>;
  or?: InputMaybe<Array<TestFileWhereInput>>;
  /** test_result_id field predicates */
  testResultID?: InputMaybe<Scalars['ID']['input']>;
  testResultIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  testResultIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testResultIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  testResultIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  testResultIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TestGridCell = {
  __typename?: 'TestGridCell';
  invocationId?: Maybe<Scalars['UUID']['output']>;
  status?: Maybe<TestCollectionOverallStatus>;
};

export type TestGridResult = {
  __typename?: 'TestGridResult';
  result?: Maybe<Array<Maybe<TestGridRow>>>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type TestGridRow = {
  __typename?: 'TestGridRow';
  avg?: Maybe<Scalars['Float']['output']>;
  cells?: Maybe<Array<Maybe<TestGridCell>>>;
  count?: Maybe<Scalars['Int']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  max?: Maybe<Scalars['Int']['output']>;
  min?: Maybe<Scalars['Int']['output']>;
  passRate?: Maybe<Scalars['Float']['output']>;
  sum?: Maybe<Scalars['Int']['output']>;
};

export type TestProblem = Node & Problem & {
  __typename?: 'TestProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  results: Array<TestResult>;
  status: Scalars['String']['output'];
};

export type TestResult = Node & {
  __typename?: 'TestResult';
  actionLogOutput: BlobReference;
  attempt: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  run: Scalars['Int']['output'];
  shard: Scalars['Int']['output'];
  status: Scalars['String']['output'];
  undeclaredTestOutputs?: Maybe<BlobReference>;
};

export type TestResultBes = Node & {
  __typename?: 'TestResultBES';
  cachedLocally?: Maybe<Scalars['Boolean']['output']>;
  executionInfo?: Maybe<ExectionInfo>;
  id: Scalars['ID']['output'];
  label?: Maybe<Scalars['String']['output']>;
  statusDetails?: Maybe<Scalars['String']['output']>;
  testActionOutput?: Maybe<Array<TestFile>>;
  testAttemptDuration?: Maybe<Scalars['Int']['output']>;
  testAttemptDurationMillis?: Maybe<Scalars['Int']['output']>;
  testAttemptStart?: Maybe<Scalars['String']['output']>;
  testAttemptStartMillisEpoch?: Maybe<Scalars['Int']['output']>;
  testCollection?: Maybe<TestCollection>;
  testCollectionID?: Maybe<Scalars['ID']['output']>;
  testStatus?: Maybe<TestResultBesTestStatus>;
  warning?: Maybe<Array<Scalars['String']['output']>>;
};

/** TestResultBESTestStatus is enum for the field test_status */
export enum TestResultBesTestStatus {
  Failed = 'FAILED',
  FailedToBuild = 'FAILED_TO_BUILD',
  Flaky = 'FLAKY',
  Incomplete = 'INCOMPLETE',
  NoStatus = 'NO_STATUS',
  Passed = 'PASSED',
  RemoteFailure = 'REMOTE_FAILURE',
  Timeout = 'TIMEOUT',
  ToolHaltedBeforeTesting = 'TOOL_HALTED_BEFORE_TESTING'
}

/**
 * TestResultBESWhereInput is used for filtering TestResultBES objects.
 * Input was generated by ent.
 */
export type TestResultBesWhereInput = {
  and?: InputMaybe<Array<TestResultBesWhereInput>>;
  /** cached_locally field predicates */
  cachedLocally?: InputMaybe<Scalars['Boolean']['input']>;
  cachedLocallyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cachedLocallyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  cachedLocallyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** execution_info edge predicates */
  hasExecutionInfo?: InputMaybe<Scalars['Boolean']['input']>;
  hasExecutionInfoWith?: InputMaybe<Array<ExectionInfoWhereInput>>;
  /** test_action_output edge predicates */
  hasTestActionOutput?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestActionOutputWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** test_collection edge predicates */
  hasTestCollection?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestCollectionWith?: InputMaybe<Array<TestCollectionWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** label field predicates */
  label?: InputMaybe<Scalars['String']['input']>;
  labelContains?: InputMaybe<Scalars['String']['input']>;
  labelContainsFold?: InputMaybe<Scalars['String']['input']>;
  labelEqualFold?: InputMaybe<Scalars['String']['input']>;
  labelGT?: InputMaybe<Scalars['String']['input']>;
  labelGTE?: InputMaybe<Scalars['String']['input']>;
  labelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  labelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  labelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  labelLT?: InputMaybe<Scalars['String']['input']>;
  labelLTE?: InputMaybe<Scalars['String']['input']>;
  labelNEQ?: InputMaybe<Scalars['String']['input']>;
  labelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TestResultBesWhereInput>;
  or?: InputMaybe<Array<TestResultBesWhereInput>>;
  /** status_details field predicates */
  statusDetails?: InputMaybe<Scalars['String']['input']>;
  statusDetailsContains?: InputMaybe<Scalars['String']['input']>;
  statusDetailsContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusDetailsEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusDetailsGT?: InputMaybe<Scalars['String']['input']>;
  statusDetailsGTE?: InputMaybe<Scalars['String']['input']>;
  statusDetailsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusDetailsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusDetailsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusDetailsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusDetailsLT?: InputMaybe<Scalars['String']['input']>;
  statusDetailsLTE?: InputMaybe<Scalars['String']['input']>;
  statusDetailsNEQ?: InputMaybe<Scalars['String']['input']>;
  statusDetailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusDetailsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_attempt_duration field predicates */
  testAttemptDuration?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationGT?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationGTE?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testAttemptDurationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testAttemptDurationLT?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationLTE?: InputMaybe<Scalars['Int']['input']>;
  /** test_attempt_duration_millis field predicates */
  testAttemptDurationMillis?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationMillisGT?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationMillisGTE?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationMillisIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testAttemptDurationMillisIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testAttemptDurationMillisLT?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationMillisLTE?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationMillisNEQ?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationMillisNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testAttemptDurationMillisNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  testAttemptDurationNEQ?: InputMaybe<Scalars['Int']['input']>;
  testAttemptDurationNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testAttemptDurationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_attempt_start field predicates */
  testAttemptStart?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartContains?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartContainsFold?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartEqualFold?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartGT?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartGTE?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartHasPrefix?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartHasSuffix?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartIn?: InputMaybe<Array<Scalars['String']['input']>>;
  testAttemptStartIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testAttemptStartLT?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartLTE?: InputMaybe<Scalars['String']['input']>;
  /** test_attempt_start_millis_epoch field predicates */
  testAttemptStartMillisEpoch?: InputMaybe<Scalars['Int']['input']>;
  testAttemptStartMillisEpochGT?: InputMaybe<Scalars['Int']['input']>;
  testAttemptStartMillisEpochGTE?: InputMaybe<Scalars['Int']['input']>;
  testAttemptStartMillisEpochIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testAttemptStartMillisEpochIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testAttemptStartMillisEpochLT?: InputMaybe<Scalars['Int']['input']>;
  testAttemptStartMillisEpochLTE?: InputMaybe<Scalars['Int']['input']>;
  testAttemptStartMillisEpochNEQ?: InputMaybe<Scalars['Int']['input']>;
  testAttemptStartMillisEpochNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  testAttemptStartMillisEpochNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  testAttemptStartNEQ?: InputMaybe<Scalars['String']['input']>;
  testAttemptStartNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  testAttemptStartNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_collection_id field predicates */
  testCollectionID?: InputMaybe<Scalars['ID']['input']>;
  testCollectionIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  testCollectionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testCollectionIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  testCollectionIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  testCollectionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_status field predicates */
  testStatus?: InputMaybe<TestResultBesTestStatus>;
  testStatusIn?: InputMaybe<Array<TestResultBesTestStatus>>;
  testStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testStatusNEQ?: InputMaybe<TestResultBesTestStatus>;
  testStatusNotIn?: InputMaybe<Array<TestResultBesTestStatus>>;
  testStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TestSummary = Node & {
  __typename?: 'TestSummary';
  attemptCount?: Maybe<Scalars['Int']['output']>;
  failed?: Maybe<Array<TestFile>>;
  firstStartTime?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  label?: Maybe<Scalars['String']['output']>;
  lastStopTime?: Maybe<Scalars['Int']['output']>;
  overallStatus?: Maybe<TestSummaryOverallStatus>;
  passed?: Maybe<Array<TestFile>>;
  runCount?: Maybe<Scalars['Int']['output']>;
  shardCount?: Maybe<Scalars['Int']['output']>;
  testCollection?: Maybe<TestCollection>;
  testCollectionID?: Maybe<Scalars['ID']['output']>;
  totalNumCached?: Maybe<Scalars['Int']['output']>;
  totalRunCount?: Maybe<Scalars['Int']['output']>;
  totalRunDuration?: Maybe<Scalars['Int']['output']>;
};

/** TestSummaryOverallStatus is enum for the field overall_status */
export enum TestSummaryOverallStatus {
  Failed = 'FAILED',
  FailedToBuild = 'FAILED_TO_BUILD',
  Flaky = 'FLAKY',
  Incomplete = 'INCOMPLETE',
  NoStatus = 'NO_STATUS',
  Passed = 'PASSED',
  RemoteFailure = 'REMOTE_FAILURE',
  Timeout = 'TIMEOUT',
  ToolHaltedBeforeTesting = 'TOOL_HALTED_BEFORE_TESTING'
}

/**
 * TestSummaryWhereInput is used for filtering TestSummary objects.
 * Input was generated by ent.
 */
export type TestSummaryWhereInput = {
  and?: InputMaybe<Array<TestSummaryWhereInput>>;
  /** attempt_count field predicates */
  attemptCount?: InputMaybe<Scalars['Int']['input']>;
  attemptCountGT?: InputMaybe<Scalars['Int']['input']>;
  attemptCountGTE?: InputMaybe<Scalars['Int']['input']>;
  attemptCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  attemptCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  attemptCountLT?: InputMaybe<Scalars['Int']['input']>;
  attemptCountLTE?: InputMaybe<Scalars['Int']['input']>;
  attemptCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  attemptCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  attemptCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** first_start_time field predicates */
  firstStartTime?: InputMaybe<Scalars['Int']['input']>;
  firstStartTimeGT?: InputMaybe<Scalars['Int']['input']>;
  firstStartTimeGTE?: InputMaybe<Scalars['Int']['input']>;
  firstStartTimeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  firstStartTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstStartTimeLT?: InputMaybe<Scalars['Int']['input']>;
  firstStartTimeLTE?: InputMaybe<Scalars['Int']['input']>;
  firstStartTimeNEQ?: InputMaybe<Scalars['Int']['input']>;
  firstStartTimeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  firstStartTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** failed edge predicates */
  hasFailed?: InputMaybe<Scalars['Boolean']['input']>;
  hasFailedWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** passed edge predicates */
  hasPassed?: InputMaybe<Scalars['Boolean']['input']>;
  hasPassedWith?: InputMaybe<Array<TestFileWhereInput>>;
  /** test_collection edge predicates */
  hasTestCollection?: InputMaybe<Scalars['Boolean']['input']>;
  hasTestCollectionWith?: InputMaybe<Array<TestCollectionWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** label field predicates */
  label?: InputMaybe<Scalars['String']['input']>;
  labelContains?: InputMaybe<Scalars['String']['input']>;
  labelContainsFold?: InputMaybe<Scalars['String']['input']>;
  labelEqualFold?: InputMaybe<Scalars['String']['input']>;
  labelGT?: InputMaybe<Scalars['String']['input']>;
  labelGTE?: InputMaybe<Scalars['String']['input']>;
  labelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  labelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  labelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  labelLT?: InputMaybe<Scalars['String']['input']>;
  labelLTE?: InputMaybe<Scalars['String']['input']>;
  labelNEQ?: InputMaybe<Scalars['String']['input']>;
  labelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** last_stop_time field predicates */
  lastStopTime?: InputMaybe<Scalars['Int']['input']>;
  lastStopTimeGT?: InputMaybe<Scalars['Int']['input']>;
  lastStopTimeGTE?: InputMaybe<Scalars['Int']['input']>;
  lastStopTimeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastStopTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastStopTimeLT?: InputMaybe<Scalars['Int']['input']>;
  lastStopTimeLTE?: InputMaybe<Scalars['Int']['input']>;
  lastStopTimeNEQ?: InputMaybe<Scalars['Int']['input']>;
  lastStopTimeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastStopTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TestSummaryWhereInput>;
  or?: InputMaybe<Array<TestSummaryWhereInput>>;
  /** overall_status field predicates */
  overallStatus?: InputMaybe<TestSummaryOverallStatus>;
  overallStatusIn?: InputMaybe<Array<TestSummaryOverallStatus>>;
  overallStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  overallStatusNEQ?: InputMaybe<TestSummaryOverallStatus>;
  overallStatusNotIn?: InputMaybe<Array<TestSummaryOverallStatus>>;
  overallStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** run_count field predicates */
  runCount?: InputMaybe<Scalars['Int']['input']>;
  runCountGT?: InputMaybe<Scalars['Int']['input']>;
  runCountGTE?: InputMaybe<Scalars['Int']['input']>;
  runCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  runCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  runCountLT?: InputMaybe<Scalars['Int']['input']>;
  runCountLTE?: InputMaybe<Scalars['Int']['input']>;
  runCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  runCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  runCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** shard_count field predicates */
  shardCount?: InputMaybe<Scalars['Int']['input']>;
  shardCountGT?: InputMaybe<Scalars['Int']['input']>;
  shardCountGTE?: InputMaybe<Scalars['Int']['input']>;
  shardCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  shardCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  shardCountLT?: InputMaybe<Scalars['Int']['input']>;
  shardCountLTE?: InputMaybe<Scalars['Int']['input']>;
  shardCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  shardCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  shardCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** test_collection_id field predicates */
  testCollectionID?: InputMaybe<Scalars['ID']['input']>;
  testCollectionIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  testCollectionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  testCollectionIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  testCollectionIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  testCollectionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** total_num_cached field predicates */
  totalNumCached?: InputMaybe<Scalars['Int']['input']>;
  totalNumCachedGT?: InputMaybe<Scalars['Int']['input']>;
  totalNumCachedGTE?: InputMaybe<Scalars['Int']['input']>;
  totalNumCachedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalNumCachedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  totalNumCachedLT?: InputMaybe<Scalars['Int']['input']>;
  totalNumCachedLTE?: InputMaybe<Scalars['Int']['input']>;
  totalNumCachedNEQ?: InputMaybe<Scalars['Int']['input']>;
  totalNumCachedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalNumCachedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** total_run_count field predicates */
  totalRunCount?: InputMaybe<Scalars['Int']['input']>;
  totalRunCountGT?: InputMaybe<Scalars['Int']['input']>;
  totalRunCountGTE?: InputMaybe<Scalars['Int']['input']>;
  totalRunCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalRunCountIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  totalRunCountLT?: InputMaybe<Scalars['Int']['input']>;
  totalRunCountLTE?: InputMaybe<Scalars['Int']['input']>;
  totalRunCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  totalRunCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalRunCountNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** total_run_duration field predicates */
  totalRunDuration?: InputMaybe<Scalars['Int']['input']>;
  totalRunDurationGT?: InputMaybe<Scalars['Int']['input']>;
  totalRunDurationGTE?: InputMaybe<Scalars['Int']['input']>;
  totalRunDurationIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalRunDurationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  totalRunDurationLT?: InputMaybe<Scalars['Int']['input']>;
  totalRunDurationLTE?: InputMaybe<Scalars['Int']['input']>;
  totalRunDurationNEQ?: InputMaybe<Scalars['Int']['input']>;
  totalRunDurationNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalRunDurationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TimingBreakdown = Node & {
  __typename?: 'TimingBreakdown';
  child?: Maybe<Array<TimingChild>>;
  executionInfo?: Maybe<ExectionInfo>;
  executionInfoID?: Maybe<Scalars['ID']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  time?: Maybe<Scalars['String']['output']>;
};

/**
 * TimingBreakdownWhereInput is used for filtering TimingBreakdown objects.
 * Input was generated by ent.
 */
export type TimingBreakdownWhereInput = {
  and?: InputMaybe<Array<TimingBreakdownWhereInput>>;
  /** execution_info_id field predicates */
  executionInfoID?: InputMaybe<Scalars['ID']['input']>;
  executionInfoIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionInfoIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  executionInfoIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  executionInfoIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionInfoIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** child edge predicates */
  hasChild?: InputMaybe<Scalars['Boolean']['input']>;
  hasChildWith?: InputMaybe<Array<TimingChildWhereInput>>;
  /** execution_info edge predicates */
  hasExecutionInfo?: InputMaybe<Scalars['Boolean']['input']>;
  hasExecutionInfoWith?: InputMaybe<Array<ExectionInfoWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TimingBreakdownWhereInput>;
  or?: InputMaybe<Array<TimingBreakdownWhereInput>>;
  /** time field predicates */
  time?: InputMaybe<Scalars['String']['input']>;
  timeContains?: InputMaybe<Scalars['String']['input']>;
  timeContainsFold?: InputMaybe<Scalars['String']['input']>;
  timeEqualFold?: InputMaybe<Scalars['String']['input']>;
  timeGT?: InputMaybe<Scalars['String']['input']>;
  timeGTE?: InputMaybe<Scalars['String']['input']>;
  timeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  timeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  timeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  timeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  timeLT?: InputMaybe<Scalars['String']['input']>;
  timeLTE?: InputMaybe<Scalars['String']['input']>;
  timeNEQ?: InputMaybe<Scalars['String']['input']>;
  timeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  timeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TimingChild = Node & {
  __typename?: 'TimingChild';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  time?: Maybe<Scalars['String']['output']>;
  timingBreakdown?: Maybe<TimingBreakdown>;
  timingBreakdownID?: Maybe<Scalars['ID']['output']>;
};

/**
 * TimingChildWhereInput is used for filtering TimingChild objects.
 * Input was generated by ent.
 */
export type TimingChildWhereInput = {
  and?: InputMaybe<Array<TimingChildWhereInput>>;
  /** timing_breakdown edge predicates */
  hasTimingBreakdown?: InputMaybe<Scalars['Boolean']['input']>;
  hasTimingBreakdownWith?: InputMaybe<Array<TimingBreakdownWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<TimingChildWhereInput>;
  or?: InputMaybe<Array<TimingChildWhereInput>>;
  /** time field predicates */
  time?: InputMaybe<Scalars['String']['input']>;
  timeContains?: InputMaybe<Scalars['String']['input']>;
  timeContainsFold?: InputMaybe<Scalars['String']['input']>;
  timeEqualFold?: InputMaybe<Scalars['String']['input']>;
  timeGT?: InputMaybe<Scalars['String']['input']>;
  timeGTE?: InputMaybe<Scalars['String']['input']>;
  timeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  timeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  timeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  timeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  timeLT?: InputMaybe<Scalars['String']['input']>;
  timeLTE?: InputMaybe<Scalars['String']['input']>;
  timeNEQ?: InputMaybe<Scalars['String']['input']>;
  timeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  timeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** timing_breakdown_id field predicates */
  timingBreakdownID?: InputMaybe<Scalars['ID']['input']>;
  timingBreakdownIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  timingBreakdownIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  timingBreakdownIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  timingBreakdownIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  timingBreakdownIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TimingMetrics = Node & {
  __typename?: 'TimingMetrics';
  actionsExecutionStartInMs?: Maybe<Scalars['Int']['output']>;
  analysisPhaseTimeInMs?: Maybe<Scalars['Int']['output']>;
  cpuTimeInMs?: Maybe<Scalars['Int']['output']>;
  executionPhaseTimeInMs?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  wallTimeInMs?: Maybe<Scalars['Int']['output']>;
};

/**
 * TimingMetricsWhereInput is used for filtering TimingMetrics objects.
 * Input was generated by ent.
 */
export type TimingMetricsWhereInput = {
  /** actions_execution_start_in_ms field predicates */
  actionsExecutionStartInMs?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutionStartInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutionStartInMsLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutionStartInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** analysis_phase_time_in_ms field predicates */
  analysisPhaseTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  analysisPhaseTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  analysisPhaseTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  analysisPhaseTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<TimingMetricsWhereInput>>;
  /** cpu_time_in_ms field predicates */
  cpuTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  cpuTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cpuTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  cpuTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** execution_phase_time_in_ms field predicates */
  executionPhaseTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  executionPhaseTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  executionPhaseTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  executionPhaseTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TimingMetricsWhereInput>;
  or?: InputMaybe<Array<TimingMetricsWhereInput>>;
  /** wall_time_in_ms field predicates */
  wallTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  wallTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  wallTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  wallTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type User = {
  __typename?: 'User';
  Email: Scalars['String']['output'];
  LDAP: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

export type LoadFullBazelInvocationDetailsQueryVariables = Exact<{
  invocationID: Scalars['String']['input'];
}>;


export type LoadFullBazelInvocationDetailsQuery = { __typename?: 'Query', bazelInvocation: (
    { __typename?: 'BazelInvocation' }
    & { ' $fragmentRefs'?: { 'FullBazelInvocationDetailsFragment': FullBazelInvocationDetailsFragment } }
  ) };

export type GetProblemDetailsQueryVariables = Exact<{
  invocationID: Scalars['String']['input'];
}>;


export type GetProblemDetailsQuery = { __typename?: 'Query', bazelInvocation: (
    { __typename?: 'BazelInvocation' }
    & { ' $fragmentRefs'?: { 'ProblemDetailsFragment': ProblemDetailsFragment } }
  ) };

export type ProblemDetailsFragment = { __typename?: 'BazelInvocation', problems: Array<(
    { __typename?: 'ActionProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_ActionProblem_Fragment': ProblemInfo_ActionProblem_Fragment } }
  ) | (
    { __typename?: 'ProgressProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_ProgressProblem_Fragment': ProblemInfo_ProgressProblem_Fragment } }
  ) | (
    { __typename?: 'TargetProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_TargetProblem_Fragment': ProblemInfo_TargetProblem_Fragment } }
  ) | (
    { __typename?: 'TestProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_TestProblem_Fragment': ProblemInfo_TestProblem_Fragment } }
  )> } & { ' $fragmentName'?: 'ProblemDetailsFragment' };

export type BazelInvocationInfoFragment = { __typename?: 'BazelInvocation', id: string, invocationID: any, buildLogs?: string | null, startedAt: any, endedAt?: any | null, configurationMnemonic?: string | null, cpu?: string | null, numFetches?: number | null, stepLabel: string, hostname?: string | null, isCiWorker?: boolean | null, metrics?: { __typename?: 'Metrics', id: string, actionSummary?: { __typename?: 'ActionSummary', id: string, actionsCreated?: number | null, actionsExecuted?: number | null, actionsCreatedNotIncludingAspects?: number | null, remoteCacheHits?: number | null, actionCacheStatistics?: { __typename?: 'ActionCacheStatistics', id: string, loadTimeInMs?: number | null, saveTimeInMs?: number | null, hits?: number | null, misses?: number | null, sizeInBytes?: number | null, missDetails?: Array<{ __typename?: 'MissDetail', id: string, count?: number | null, reason?: MissDetailReason | null }> | null } | null, runnerCount?: Array<{ __typename?: 'RunnerCount', id: string, actionsExecuted?: number | null, name?: string | null, execKind?: string | null }> | null, actionData?: Array<{ __typename?: 'ActionData', id: string, mnemonic?: string | null, userTime?: number | null, systemTime?: number | null, lastEndedMs?: number | null, actionsCreated?: number | null, actionsExecuted?: number | null, firstStartedMs?: number | null }> | null } | null, artifactMetrics?: { __typename?: 'ArtifactMetrics', id: string, sourceArtifactsRead?: { __typename?: 'FilesMetric', id: string, sizeInBytes?: number | null, count?: number | null } | null, outputArtifactsSeen?: { __typename?: 'FilesMetric', id: string, sizeInBytes?: number | null, count?: number | null } | null, outputArtifactsFromActionCache?: { __typename?: 'FilesMetric', id: string, sizeInBytes?: number | null, count?: number | null } | null, topLevelArtifacts?: { __typename?: 'FilesMetric', id: string, sizeInBytes?: number | null, count?: number | null } | null } | null, cumulativeMetrics?: { __typename?: 'CumulativeMetrics', id: string, numBuilds?: number | null, numAnalyses?: number | null } | null, dynamicExecutionMetrics?: { __typename?: 'DynamicExecutionMetrics', id: string, raceStatistics?: Array<{ __typename?: 'RaceStatistics', id: string, localWins?: number | null, mnemonic?: string | null, renoteWins?: number | null, localRunner?: string | null, remoteRunner?: string | null }> | null } | null, buildGraphMetrics?: { __typename?: 'BuildGraphMetrics', id: string, actionLookupValueCount?: number | null, actionLookupValueCountNotIncludingAspects?: number | null, actionCount?: number | null, inputFileConfiguredTargetCount?: number | null, outputFileConfiguredTargetCount?: number | null, otherConfiguredTargetCount?: number | null, outputArtifactCount?: number | null, postInvocationSkyframeNodeCount?: number | null } | null, memoryMetrics?: { __typename?: 'MemoryMetrics', id: string, usedHeapSizePostBuild?: number | null, peakPostGcHeapSize?: number | null, peakPostGcTenuredSpaceHeapSize?: number | null, garbageMetrics?: Array<{ __typename?: 'GarbageMetrics', id: string, garbageCollected?: number | null, type?: string | null }> | null } | null, targetMetrics?: { __typename?: 'TargetMetrics', id: string, targetsLoaded?: number | null, targetsConfigured?: number | null, targetsConfiguredNotIncludingAspects?: number | null } | null, timingMetrics?: { __typename?: 'TimingMetrics', id: string, cpuTimeInMs?: number | null, wallTimeInMs?: number | null, analysisPhaseTimeInMs?: number | null, executionPhaseTimeInMs?: number | null, actionsExecutionStartInMs?: number | null } | null, networkMetrics?: { __typename?: 'NetworkMetrics', id: string, systemNetworkStats?: { __typename?: 'SystemNetworkStats', id: string, bytesSent?: number | null, bytesRecv?: number | null, packetsSent?: number | null, packetsRecv?: number | null, peakBytesSentPerSec?: number | null, peakBytesRecvPerSec?: number | null, peakPacketsSentPerSec?: number | null, peakPacketsRecvPerSec?: number | null } | null } | null, packageMetrics?: { __typename?: 'PackageMetrics', id: string, packagesLoaded?: number | null, packageLoadMetrics?: Array<{ __typename?: 'PackageLoadMetrics', id: string, name?: string | null, numTargets?: number | null, loadDuration?: number | null, packageOverhead?: number | null, computationSteps?: number | null, numTransitiveLoads?: number | null }> | null } | null } | null, bazelCommand: { __typename?: 'BazelCommand', id: string, command: string, executable: string, residual: string, explicitCmdLine: string, cmdLine?: Array<string | null> | null, startupOptions?: Array<string | null> | null, explicitStartupOptions?: Array<string | null> | null }, build?: { __typename?: 'Build', id: string, buildUUID: any } | null, profile?: { __typename?: 'Profile', id: string, name: string, digest: string, sizeInBytes: number } | null, targets?: Array<{ __typename?: 'TargetPair', id: string, label?: string | null, success?: boolean | null, testSize?: TargetPairTestSize | null, targetKind?: string | null, durationInMs?: number | null, abortReason?: TargetPairAbortReason | null }> | null, testCollection?: Array<{ __typename?: 'TestCollection', id: string, label?: string | null, strategy?: string | null, durationMs?: number | null, overallStatus?: TestCollectionOverallStatus | null, cachedLocally?: boolean | null, cachedRemotely?: boolean | null }> | null, relatedFiles: Array<{ __typename?: 'NamedFile', name: string, url: string }>, user?: { __typename?: 'User', Email: string, LDAP: string } | null, state: { __typename?: 'BazelInvocationState', bepCompleted: boolean, buildEndTime: any, buildStartTime: any, id: string, exitCode?: { __typename?: 'ExitCode', code: number, id: string, name: string } | null }, sourceControl?: { __typename?: 'SourceControl', id: string, commitSha?: string | null, actor?: string | null, branch?: string | null, repoURL?: string | null, refs?: string | null, runID?: string | null, workflow?: string | null, workspace?: string | null, action?: string | null, eventName?: string | null, job?: string | null, runnerName?: string | null, runnerArch?: string | null, runnerOs?: string | null } | null } & { ' $fragmentName'?: 'BazelInvocationInfoFragment' };

type ProblemInfo_ActionProblem_Fragment = { __typename: 'ActionProblem', id: string, label: string, type: string, stdout?: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ) | null, stderr?: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ) | null } & { ' $fragmentName'?: 'ProblemInfo_ActionProblem_Fragment' };

type ProblemInfo_ProgressProblem_Fragment = { __typename: 'ProgressProblem', id: string, output: string, label: string } & { ' $fragmentName'?: 'ProblemInfo_ProgressProblem_Fragment' };

type ProblemInfo_TargetProblem_Fragment = { __typename: 'TargetProblem', id: string, label: string } & { ' $fragmentName'?: 'ProblemInfo_TargetProblem_Fragment' };

type ProblemInfo_TestProblem_Fragment = { __typename: 'TestProblem', id: string, label: string, status: string, results: Array<{ __typename: 'TestResult', id: string, run: number, shard: number, attempt: number, status: string, actionLogOutput: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ), undeclaredTestOutputs?: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ) | null }> } & { ' $fragmentName'?: 'ProblemInfo_TestProblem_Fragment' };

export type ProblemInfoFragment = ProblemInfo_ActionProblem_Fragment | ProblemInfo_ProgressProblem_Fragment | ProblemInfo_TargetProblem_Fragment | ProblemInfo_TestProblem_Fragment;

export type BlobReferenceInfoFragment = { __typename?: 'BlobReference', availabilityStatus: ActionOutputStatus, name: string, sizeInBytes?: number | null, downloadURL: string, ephemeralURL: string } & { ' $fragmentName'?: 'BlobReferenceInfoFragment' };

export type FullBazelInvocationDetailsFragment = (
  { __typename?: 'BazelInvocation' }
  & { ' $fragmentRefs'?: { 'BazelInvocationInfoFragment': BazelInvocationInfoFragment } }
) & { ' $fragmentName'?: 'FullBazelInvocationDetailsFragment' };

export type GetActionProblemQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetActionProblemQuery = { __typename?: 'Query', node?: { __typename?: 'ActionCacheStatistics', id: string } | { __typename?: 'ActionData', id: string } | { __typename?: 'ActionProblem', label: string, id: string, stdout?: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ) | null, stderr?: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ) | null } | { __typename?: 'ActionSummary', id: string } | { __typename?: 'ArtifactMetrics', id: string } | { __typename?: 'BazelInvocation', id: string } | { __typename?: 'BazelInvocationProblem', id: string } | { __typename?: 'Blob', id: string } | { __typename?: 'Build', id: string } | { __typename?: 'BuildGraphMetrics', id: string } | { __typename?: 'CumulativeMetrics', id: string } | { __typename?: 'DynamicExecutionMetrics', id: string } | { __typename?: 'EvaluationStat', id: string } | { __typename?: 'EventFile', id: string } | { __typename?: 'ExectionInfo', id: string } | { __typename?: 'FilesMetric', id: string } | { __typename?: 'GarbageMetrics', id: string } | { __typename?: 'MemoryMetrics', id: string } | { __typename?: 'Metrics', id: string } | { __typename?: 'MissDetail', id: string } | { __typename?: 'NamedSetOfFiles', id: string } | { __typename?: 'NetworkMetrics', id: string } | { __typename?: 'OutputGroup', id: string } | { __typename?: 'PackageLoadMetrics', id: string } | { __typename?: 'PackageMetrics', id: string } | { __typename?: 'ProgressProblem', id: string } | { __typename?: 'RaceStatistics', id: string } | { __typename?: 'ResourceUsage', id: string } | { __typename?: 'RunnerCount', id: string } | { __typename?: 'SourceControl', id: string } | { __typename?: 'SystemNetworkStats', id: string } | { __typename?: 'TargetComplete', id: string } | { __typename?: 'TargetConfigured', id: string } | { __typename?: 'TargetMetrics', id: string } | { __typename?: 'TargetPair', id: string } | { __typename?: 'TargetProblem', id: string } | { __typename?: 'TestCollection', id: string } | { __typename?: 'TestFile', id: string } | { __typename?: 'TestProblem', id: string } | { __typename?: 'TestResult', id: string } | { __typename?: 'TestResultBES', id: string } | { __typename?: 'TestSummary', id: string } | { __typename?: 'TimingBreakdown', id: string } | { __typename?: 'TimingChild', id: string } | { __typename?: 'TimingMetrics', id: string } | null };

export type TestResultInfoFragment = { __typename?: 'TestResult', attempt: number, run: number, shard: number, status: string, actionLogOutput: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ), undeclaredTestOutputs?: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ) | null } & { ' $fragmentName'?: 'TestResultInfoFragment' };

export type FindBuildByUuidQueryVariables = Exact<{
  url?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
}>;


export type FindBuildByUuidQuery = { __typename?: 'Query', getBuild?: { __typename?: 'Build', id: string, buildURL: string, buildUUID: any, timestamp?: any | null, invocations?: Array<{ __typename?: 'BazelInvocation', id: string, invocationID: any, userLdap?: string | null, endedAt?: any | null, startedAt: any, state: { __typename?: 'BazelInvocationState', exitCode?: { __typename?: 'ExitCode', name: string } | null }, sourceControl?: { __typename?: 'SourceControl', job?: string | null, action?: string | null, workflow?: string | null, runnerName?: string | null } | null }> | null } | null };

export type GetTargetsWithOffsetQueryVariables = Exact<{
  label?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  direction?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetTargetsWithOffsetQuery = { __typename?: 'Query', getTargetsWithOffset?: { __typename?: 'TargetGridResult', total?: number | null, result?: Array<{ __typename?: 'TargetGridRow', label?: string | null, sum?: number | null, min?: number | null, max?: number | null, avg?: number | null, count?: number | null, passRate?: number | null } | null> | null } | null };

export type FindTargetsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<TargetPairWhereInput>;
  orderBy?: InputMaybe<TargetPairOrder>;
  after?: InputMaybe<Scalars['Cursor']['input']>;
}>;


export type FindTargetsQuery = { __typename?: 'Query', findTargets: { __typename?: 'TargetPairConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'TargetPairEdge', node?: { __typename?: 'TargetPair', id: string, durationInMs?: number | null, label?: string | null, success?: boolean | null, bazelInvocation?: { __typename?: 'BazelInvocation', invocationID: any } | null } | null } | null> | null } };

export type GetTestsWithOffsetQueryVariables = Exact<{
  label?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  direction?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetTestsWithOffsetQuery = { __typename?: 'Query', getTestsWithOffset?: { __typename?: 'TestGridResult', total?: number | null, result?: Array<{ __typename?: 'TestGridRow', label?: string | null, sum?: number | null, min?: number | null, max?: number | null, avg?: number | null, count?: number | null, passRate?: number | null } | null> | null } | null };

export type GetAveragePassPercentageForLabelQueryVariables = Exact<{
  label: Scalars['String']['input'];
}>;


export type GetAveragePassPercentageForLabelQuery = { __typename?: 'Query', getAveragePassPercentageForLabel?: number | null };

export type GetTestDurationAggregationQueryVariables = Exact<{
  label?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetTestDurationAggregationQuery = { __typename?: 'Query', getTestDurationAggregation?: Array<{ __typename?: 'TargetAggregate', label?: string | null, count?: number | null, sum?: number | null, min?: number | null, max?: number | null } | null> | null };

export type FindTestsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<TestCollectionWhereInput>;
  orderBy?: InputMaybe<TestCollectionOrder>;
  after?: InputMaybe<Scalars['Cursor']['input']>;
}>;


export type FindTestsQuery = { __typename?: 'Query', findTests: { __typename?: 'TestCollectionConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'TestCollectionEdge', node?: { __typename?: 'TestCollection', id: string, durationMs?: number | null, firstSeen?: any | null, label?: string | null, overallStatus?: TestCollectionOverallStatus | null, bazelInvocation?: { __typename?: 'BazelInvocation', invocationID: any } | null } | null } | null> | null } };

export type FindBuildTimesQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<BazelInvocationWhereInput>;
}>;


export type FindBuildTimesQuery = { __typename?: 'Query', findBazelInvocations: { __typename?: 'BazelInvocationConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'BazelInvocationEdge', node?: { __typename?: 'BazelInvocation', invocationID: any, startedAt: any, endedAt?: any | null } | null } | null> | null } };

export type FindBazelInvocationsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<BazelInvocationWhereInput>;
}>;


export type FindBazelInvocationsQuery = { __typename?: 'Query', findBazelInvocations: { __typename?: 'BazelInvocationConnection', edges?: Array<{ __typename?: 'BazelInvocationEdge', node?: (
        { __typename?: 'BazelInvocation' }
        & { ' $fragmentRefs'?: { 'BazelInvocationNodeFragment': BazelInvocationNodeFragment } }
      ) | null } | null> | null } };

export type BazelInvocationNodeFragment = { __typename?: 'BazelInvocation', id: string, invocationID: any, startedAt: any, endedAt?: any | null, user?: { __typename?: 'User', Email: string, LDAP: string } | null, state: { __typename?: 'BazelInvocationState', bepCompleted: boolean, exitCode?: { __typename?: 'ExitCode', code: number, name: string } | null }, build?: { __typename?: 'Build', buildUUID: any } | null } & { ' $fragmentName'?: 'BazelInvocationNodeFragment' };

export type FindBuildsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<BuildWhereInput>;
}>;


export type FindBuildsQuery = { __typename?: 'Query', findBuilds: { __typename?: 'BuildConnection', edges?: Array<{ __typename?: 'BuildEdge', node?: (
        { __typename?: 'Build' }
        & { ' $fragmentRefs'?: { 'BuildNodeFragment': BuildNodeFragment } }
      ) | null } | null> | null } };

export type BuildNodeFragment = { __typename?: 'Build', id: string, buildUUID: any, buildURL: string, timestamp?: any | null } & { ' $fragmentName'?: 'BuildNodeFragment' };

export type GetBuildLogsQueryVariables = Exact<{
  invocationId: Scalars['String']['input'];
}>;


export type GetBuildLogsQuery = { __typename?: 'Query', bazelInvocation: { __typename?: 'BazelInvocation', invocationID: any, buildLogs?: string | null } };

export type FindTestsWithCacheQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<TestCollectionWhereInput>;
  orderBy?: InputMaybe<TestCollectionOrder>;
  after?: InputMaybe<Scalars['Cursor']['input']>;
}>;


export type FindTestsWithCacheQuery = { __typename?: 'Query', findTests: { __typename?: 'TestCollectionConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'TestCollectionEdge', node?: { __typename?: 'TestCollection', id: string, durationMs?: number | null, firstSeen?: any | null, label?: string | null, overallStatus?: TestCollectionOverallStatus | null, cachedLocally?: boolean | null, cachedRemotely?: boolean | null, bazelInvocation?: { __typename?: 'BazelInvocation', invocationID: any } | null } | null } | null> | null } };

export type GetUniqueTargetLabelsQueryVariables = Exact<{
  label?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetUniqueTargetLabelsQuery = { __typename?: 'Query', getUniqueTargetLabels?: Array<string | null> | null };

export type GetUniqueTestLabelsQueryVariables = Exact<{
  label?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetUniqueTestLabelsQuery = { __typename?: 'Query', getUniqueTestLabels?: Array<string | null> | null };

export const BlobReferenceInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}},{"kind":"Field","name":{"kind":"Name","value":"ephemeralURL"}}]}}]} as unknown as DocumentNode<BlobReferenceInfoFragment, unknown>;
export const ProblemInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}},{"kind":"Field","name":{"kind":"Name","value":"ephemeralURL"}}]}}]} as unknown as DocumentNode<ProblemInfoFragment, unknown>;
export const ProblemDetailsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"problems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ProblemInfo"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}},{"kind":"Field","name":{"kind":"Name","value":"ephemeralURL"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]} as unknown as DocumentNode<ProblemDetailsFragment, unknown>;
export const BazelInvocationInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"metrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreated"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreatedNotIncludingAspects"}},{"kind":"Field","name":{"kind":"Name","value":"remoteCacheHits"}},{"kind":"Field","name":{"kind":"Name","value":"actionCacheStatistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"loadTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"saveTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"hits"}},{"kind":"Field","name":{"kind":"Name","value":"misses"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"missDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runnerCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"execKind"}}]}},{"kind":"Field","name":{"kind":"Name","value":"actionData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"userTime"}},{"kind":"Field","name":{"kind":"Name","value":"systemTime"}},{"kind":"Field","name":{"kind":"Name","value":"lastEndedMs"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreated"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"firstStartedMs"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"artifactMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sourceArtifactsRead"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactsSeen"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactsFromActionCache"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"topLevelArtifacts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cumulativeMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"numBuilds"}},{"kind":"Field","name":{"kind":"Name","value":"numAnalyses"}}]}},{"kind":"Field","name":{"kind":"Name","value":"dynamicExecutionMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"raceStatistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"localWins"}},{"kind":"Field","name":{"kind":"Name","value":"mnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"renoteWins"}},{"kind":"Field","name":{"kind":"Name","value":"localRunner"}},{"kind":"Field","name":{"kind":"Name","value":"remoteRunner"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildGraphMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionLookupValueCount"}},{"kind":"Field","name":{"kind":"Name","value":"actionLookupValueCountNotIncludingAspects"}},{"kind":"Field","name":{"kind":"Name","value":"actionCount"}},{"kind":"Field","name":{"kind":"Name","value":"inputFileConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"outputFileConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"otherConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactCount"}},{"kind":"Field","name":{"kind":"Name","value":"postInvocationSkyframeNodeCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"memoryMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedHeapSizePostBuild"}},{"kind":"Field","name":{"kind":"Name","value":"peakPostGcHeapSize"}},{"kind":"Field","name":{"kind":"Name","value":"peakPostGcTenuredSpaceHeapSize"}},{"kind":"Field","name":{"kind":"Name","value":"garbageMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"garbageCollected"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"targetMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"targetsLoaded"}},{"kind":"Field","name":{"kind":"Name","value":"targetsConfigured"}},{"kind":"Field","name":{"kind":"Name","value":"targetsConfiguredNotIncludingAspects"}}]}},{"kind":"Field","name":{"kind":"Name","value":"timingMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cpuTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"wallTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"analysisPhaseTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"executionPhaseTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecutionStartInMs"}}]}},{"kind":"Field","name":{"kind":"Name","value":"networkMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"systemNetworkStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bytesSent"}},{"kind":"Field","name":{"kind":"Name","value":"bytesRecv"}},{"kind":"Field","name":{"kind":"Name","value":"packetsSent"}},{"kind":"Field","name":{"kind":"Name","value":"packetsRecv"}},{"kind":"Field","name":{"kind":"Name","value":"peakBytesSentPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakBytesRecvPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakPacketsSentPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakPacketsRecvPerSec"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"packageMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"packagesLoaded"}},{"kind":"Field","name":{"kind":"Name","value":"packageLoadMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"numTargets"}},{"kind":"Field","name":{"kind":"Name","value":"loadDuration"}},{"kind":"Field","name":{"kind":"Name","value":"packageOverhead"}},{"kind":"Field","name":{"kind":"Name","value":"computationSteps"}},{"kind":"Field","name":{"kind":"Name","value":"numTransitiveLoads"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}},{"kind":"Field","name":{"kind":"Name","value":"explicitCmdLine"}},{"kind":"Field","name":{"kind":"Name","value":"cmdLine"}},{"kind":"Field","name":{"kind":"Name","value":"startupOptions"}},{"kind":"Field","name":{"kind":"Name","value":"explicitStartupOptions"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"digest"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}}]}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"testSize"}},{"kind":"Field","name":{"kind":"Name","value":"targetKind"}},{"kind":"Field","name":{"kind":"Name","value":"durationInMs"}},{"kind":"Field","name":{"kind":"Name","value":"abortReason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"testCollection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"strategy"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"overallStatus"}},{"kind":"Field","name":{"kind":"Name","value":"cachedLocally"}},{"kind":"Field","name":{"kind":"Name","value":"cachedRemotely"}}]}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"configurationMnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"cpu"}},{"kind":"Field","name":{"kind":"Name","value":"numFetches"}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}},{"kind":"Field","name":{"kind":"Name","value":"hostname"}},{"kind":"Field","name":{"kind":"Name","value":"isCiWorker"}},{"kind":"Field","name":{"kind":"Name","value":"sourceControl"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"commitSha"}},{"kind":"Field","name":{"kind":"Name","value":"actor"}},{"kind":"Field","name":{"kind":"Name","value":"branch"}},{"kind":"Field","name":{"kind":"Name","value":"repoURL"}},{"kind":"Field","name":{"kind":"Name","value":"refs"}},{"kind":"Field","name":{"kind":"Name","value":"runID"}},{"kind":"Field","name":{"kind":"Name","value":"workflow"}},{"kind":"Field","name":{"kind":"Name","value":"workspace"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"eventName"}},{"kind":"Field","name":{"kind":"Name","value":"job"}},{"kind":"Field","name":{"kind":"Name","value":"runnerName"}},{"kind":"Field","name":{"kind":"Name","value":"runnerArch"}},{"kind":"Field","name":{"kind":"Name","value":"runnerOs"}}]}}]}}]} as unknown as DocumentNode<BazelInvocationInfoFragment, unknown>;
export const FullBazelInvocationDetailsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FullBazelInvocationDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationInfo"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"metrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreated"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreatedNotIncludingAspects"}},{"kind":"Field","name":{"kind":"Name","value":"remoteCacheHits"}},{"kind":"Field","name":{"kind":"Name","value":"actionCacheStatistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"loadTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"saveTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"hits"}},{"kind":"Field","name":{"kind":"Name","value":"misses"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"missDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runnerCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"execKind"}}]}},{"kind":"Field","name":{"kind":"Name","value":"actionData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"userTime"}},{"kind":"Field","name":{"kind":"Name","value":"systemTime"}},{"kind":"Field","name":{"kind":"Name","value":"lastEndedMs"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreated"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"firstStartedMs"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"artifactMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sourceArtifactsRead"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactsSeen"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactsFromActionCache"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"topLevelArtifacts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cumulativeMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"numBuilds"}},{"kind":"Field","name":{"kind":"Name","value":"numAnalyses"}}]}},{"kind":"Field","name":{"kind":"Name","value":"dynamicExecutionMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"raceStatistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"localWins"}},{"kind":"Field","name":{"kind":"Name","value":"mnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"renoteWins"}},{"kind":"Field","name":{"kind":"Name","value":"localRunner"}},{"kind":"Field","name":{"kind":"Name","value":"remoteRunner"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildGraphMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionLookupValueCount"}},{"kind":"Field","name":{"kind":"Name","value":"actionLookupValueCountNotIncludingAspects"}},{"kind":"Field","name":{"kind":"Name","value":"actionCount"}},{"kind":"Field","name":{"kind":"Name","value":"inputFileConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"outputFileConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"otherConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactCount"}},{"kind":"Field","name":{"kind":"Name","value":"postInvocationSkyframeNodeCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"memoryMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedHeapSizePostBuild"}},{"kind":"Field","name":{"kind":"Name","value":"peakPostGcHeapSize"}},{"kind":"Field","name":{"kind":"Name","value":"peakPostGcTenuredSpaceHeapSize"}},{"kind":"Field","name":{"kind":"Name","value":"garbageMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"garbageCollected"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"targetMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"targetsLoaded"}},{"kind":"Field","name":{"kind":"Name","value":"targetsConfigured"}},{"kind":"Field","name":{"kind":"Name","value":"targetsConfiguredNotIncludingAspects"}}]}},{"kind":"Field","name":{"kind":"Name","value":"timingMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cpuTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"wallTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"analysisPhaseTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"executionPhaseTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecutionStartInMs"}}]}},{"kind":"Field","name":{"kind":"Name","value":"networkMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"systemNetworkStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bytesSent"}},{"kind":"Field","name":{"kind":"Name","value":"bytesRecv"}},{"kind":"Field","name":{"kind":"Name","value":"packetsSent"}},{"kind":"Field","name":{"kind":"Name","value":"packetsRecv"}},{"kind":"Field","name":{"kind":"Name","value":"peakBytesSentPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakBytesRecvPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakPacketsSentPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakPacketsRecvPerSec"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"packageMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"packagesLoaded"}},{"kind":"Field","name":{"kind":"Name","value":"packageLoadMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"numTargets"}},{"kind":"Field","name":{"kind":"Name","value":"loadDuration"}},{"kind":"Field","name":{"kind":"Name","value":"packageOverhead"}},{"kind":"Field","name":{"kind":"Name","value":"computationSteps"}},{"kind":"Field","name":{"kind":"Name","value":"numTransitiveLoads"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}},{"kind":"Field","name":{"kind":"Name","value":"explicitCmdLine"}},{"kind":"Field","name":{"kind":"Name","value":"cmdLine"}},{"kind":"Field","name":{"kind":"Name","value":"startupOptions"}},{"kind":"Field","name":{"kind":"Name","value":"explicitStartupOptions"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"digest"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}}]}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"testSize"}},{"kind":"Field","name":{"kind":"Name","value":"targetKind"}},{"kind":"Field","name":{"kind":"Name","value":"durationInMs"}},{"kind":"Field","name":{"kind":"Name","value":"abortReason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"testCollection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"strategy"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"overallStatus"}},{"kind":"Field","name":{"kind":"Name","value":"cachedLocally"}},{"kind":"Field","name":{"kind":"Name","value":"cachedRemotely"}}]}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"configurationMnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"cpu"}},{"kind":"Field","name":{"kind":"Name","value":"numFetches"}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}},{"kind":"Field","name":{"kind":"Name","value":"hostname"}},{"kind":"Field","name":{"kind":"Name","value":"isCiWorker"}},{"kind":"Field","name":{"kind":"Name","value":"sourceControl"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"commitSha"}},{"kind":"Field","name":{"kind":"Name","value":"actor"}},{"kind":"Field","name":{"kind":"Name","value":"branch"}},{"kind":"Field","name":{"kind":"Name","value":"repoURL"}},{"kind":"Field","name":{"kind":"Name","value":"refs"}},{"kind":"Field","name":{"kind":"Name","value":"runID"}},{"kind":"Field","name":{"kind":"Name","value":"workflow"}},{"kind":"Field","name":{"kind":"Name","value":"workspace"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"eventName"}},{"kind":"Field","name":{"kind":"Name","value":"job"}},{"kind":"Field","name":{"kind":"Name","value":"runnerName"}},{"kind":"Field","name":{"kind":"Name","value":"runnerArch"}},{"kind":"Field","name":{"kind":"Name","value":"runnerOs"}}]}}]}}]} as unknown as DocumentNode<FullBazelInvocationDetailsFragment, unknown>;
export const TestResultInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TestResultInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}},{"kind":"Field","name":{"kind":"Name","value":"ephemeralURL"}}]}}]} as unknown as DocumentNode<TestResultInfoFragment, unknown>;
export const BazelInvocationNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}}]}}]} as unknown as DocumentNode<BazelInvocationNodeFragment, unknown>;
export const BuildNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BuildNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Build"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}},{"kind":"Field","name":{"kind":"Name","value":"buildURL"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]} as unknown as DocumentNode<BuildNodeFragment, unknown>;
export const LoadFullBazelInvocationDetailsDocument = {"__meta__":{"hash":"fd61d521b8f7aa8bddf0601e96872cf43923af3b"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LoadFullBazelInvocationDetails"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"invocationID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"invocationId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"invocationID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"FullBazelInvocationDetails"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"metrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreated"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreatedNotIncludingAspects"}},{"kind":"Field","name":{"kind":"Name","value":"remoteCacheHits"}},{"kind":"Field","name":{"kind":"Name","value":"actionCacheStatistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"loadTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"saveTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"hits"}},{"kind":"Field","name":{"kind":"Name","value":"misses"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"missDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runnerCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"execKind"}}]}},{"kind":"Field","name":{"kind":"Name","value":"actionData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"userTime"}},{"kind":"Field","name":{"kind":"Name","value":"systemTime"}},{"kind":"Field","name":{"kind":"Name","value":"lastEndedMs"}},{"kind":"Field","name":{"kind":"Name","value":"actionsCreated"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecuted"}},{"kind":"Field","name":{"kind":"Name","value":"firstStartedMs"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"artifactMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sourceArtifactsRead"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactsSeen"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactsFromActionCache"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"topLevelArtifacts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cumulativeMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"numBuilds"}},{"kind":"Field","name":{"kind":"Name","value":"numAnalyses"}}]}},{"kind":"Field","name":{"kind":"Name","value":"dynamicExecutionMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"raceStatistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"localWins"}},{"kind":"Field","name":{"kind":"Name","value":"mnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"renoteWins"}},{"kind":"Field","name":{"kind":"Name","value":"localRunner"}},{"kind":"Field","name":{"kind":"Name","value":"remoteRunner"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildGraphMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"actionLookupValueCount"}},{"kind":"Field","name":{"kind":"Name","value":"actionLookupValueCountNotIncludingAspects"}},{"kind":"Field","name":{"kind":"Name","value":"actionCount"}},{"kind":"Field","name":{"kind":"Name","value":"inputFileConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"outputFileConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"otherConfiguredTargetCount"}},{"kind":"Field","name":{"kind":"Name","value":"outputArtifactCount"}},{"kind":"Field","name":{"kind":"Name","value":"postInvocationSkyframeNodeCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"memoryMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedHeapSizePostBuild"}},{"kind":"Field","name":{"kind":"Name","value":"peakPostGcHeapSize"}},{"kind":"Field","name":{"kind":"Name","value":"peakPostGcTenuredSpaceHeapSize"}},{"kind":"Field","name":{"kind":"Name","value":"garbageMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"garbageCollected"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"targetMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"targetsLoaded"}},{"kind":"Field","name":{"kind":"Name","value":"targetsConfigured"}},{"kind":"Field","name":{"kind":"Name","value":"targetsConfiguredNotIncludingAspects"}}]}},{"kind":"Field","name":{"kind":"Name","value":"timingMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cpuTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"wallTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"analysisPhaseTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"executionPhaseTimeInMs"}},{"kind":"Field","name":{"kind":"Name","value":"actionsExecutionStartInMs"}}]}},{"kind":"Field","name":{"kind":"Name","value":"networkMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"systemNetworkStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bytesSent"}},{"kind":"Field","name":{"kind":"Name","value":"bytesRecv"}},{"kind":"Field","name":{"kind":"Name","value":"packetsSent"}},{"kind":"Field","name":{"kind":"Name","value":"packetsRecv"}},{"kind":"Field","name":{"kind":"Name","value":"peakBytesSentPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakBytesRecvPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakPacketsSentPerSec"}},{"kind":"Field","name":{"kind":"Name","value":"peakPacketsRecvPerSec"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"packageMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"packagesLoaded"}},{"kind":"Field","name":{"kind":"Name","value":"packageLoadMetrics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"numTargets"}},{"kind":"Field","name":{"kind":"Name","value":"loadDuration"}},{"kind":"Field","name":{"kind":"Name","value":"packageOverhead"}},{"kind":"Field","name":{"kind":"Name","value":"computationSteps"}},{"kind":"Field","name":{"kind":"Name","value":"numTransitiveLoads"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}},{"kind":"Field","name":{"kind":"Name","value":"explicitCmdLine"}},{"kind":"Field","name":{"kind":"Name","value":"cmdLine"}},{"kind":"Field","name":{"kind":"Name","value":"startupOptions"}},{"kind":"Field","name":{"kind":"Name","value":"explicitStartupOptions"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"digest"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}}]}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"testSize"}},{"kind":"Field","name":{"kind":"Name","value":"targetKind"}},{"kind":"Field","name":{"kind":"Name","value":"durationInMs"}},{"kind":"Field","name":{"kind":"Name","value":"abortReason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"testCollection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"strategy"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"overallStatus"}},{"kind":"Field","name":{"kind":"Name","value":"cachedLocally"}},{"kind":"Field","name":{"kind":"Name","value":"cachedRemotely"}}]}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"configurationMnemonic"}},{"kind":"Field","name":{"kind":"Name","value":"cpu"}},{"kind":"Field","name":{"kind":"Name","value":"numFetches"}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}},{"kind":"Field","name":{"kind":"Name","value":"hostname"}},{"kind":"Field","name":{"kind":"Name","value":"isCiWorker"}},{"kind":"Field","name":{"kind":"Name","value":"sourceControl"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"commitSha"}},{"kind":"Field","name":{"kind":"Name","value":"actor"}},{"kind":"Field","name":{"kind":"Name","value":"branch"}},{"kind":"Field","name":{"kind":"Name","value":"repoURL"}},{"kind":"Field","name":{"kind":"Name","value":"refs"}},{"kind":"Field","name":{"kind":"Name","value":"runID"}},{"kind":"Field","name":{"kind":"Name","value":"workflow"}},{"kind":"Field","name":{"kind":"Name","value":"workspace"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"eventName"}},{"kind":"Field","name":{"kind":"Name","value":"job"}},{"kind":"Field","name":{"kind":"Name","value":"runnerName"}},{"kind":"Field","name":{"kind":"Name","value":"runnerArch"}},{"kind":"Field","name":{"kind":"Name","value":"runnerOs"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FullBazelInvocationDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationInfo"}}]}}]} as unknown as DocumentNode<LoadFullBazelInvocationDetailsQuery, LoadFullBazelInvocationDetailsQueryVariables>;
export const GetProblemDetailsDocument = {"__meta__":{"hash":"bb34b92cb4a11280082ec2332b06334a13cf4433"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetProblemDetails"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"invocationID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"invocationId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"invocationID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ProblemDetails"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}},{"kind":"Field","name":{"kind":"Name","value":"ephemeralURL"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"problems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ProblemInfo"}}]}}]}}]} as unknown as DocumentNode<GetProblemDetailsQuery, GetProblemDetailsQueryVariables>;
export const GetActionProblemDocument = {"__meta__":{"hash":"1e8efb549059b9fe79348092e6a23e7ea9b365f8"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetActionProblem"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}},{"kind":"Field","name":{"kind":"Name","value":"ephemeralURL"}}]}}]} as unknown as DocumentNode<GetActionProblemQuery, GetActionProblemQueryVariables>;
export const FindBuildByUuidDocument = {"__meta__":{"hash":"a70248b4cf4530c801e461216fa07a9e658363c2"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBuildByUUID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"url"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uuid"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UUID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getBuild"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"buildURL"},"value":{"kind":"Variable","name":{"kind":"Name","value":"url"}}},{"kind":"Argument","name":{"kind":"Name","value":"buildUUID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uuid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildURL"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"invocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"userLdap"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"sourceControl"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"job"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"workflow"}},{"kind":"Field","name":{"kind":"Name","value":"runnerName"}}]}}]}}]}}]}}]} as unknown as DocumentNode<FindBuildByUuidQuery, FindBuildByUuidQueryVariables>;
export const GetTargetsWithOffsetDocument = {"__meta__":{"hash":"45528b39e6234ab4c14e4ade920240652d8961e8"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetTargetsWithOffset"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"label"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"direction"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getTargetsWithOffset"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"Variable","name":{"kind":"Name","value":"label"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"direction"},"value":{"kind":"Variable","name":{"kind":"Name","value":"direction"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"total"}},{"kind":"Field","name":{"kind":"Name","value":"result"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"sum"}},{"kind":"Field","name":{"kind":"Name","value":"min"}},{"kind":"Field","name":{"kind":"Name","value":"max"}},{"kind":"Field","name":{"kind":"Name","value":"avg"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"passRate"}}]}}]}}]}}]} as unknown as DocumentNode<GetTargetsWithOffsetQuery, GetTargetsWithOffsetQueryVariables>;
export const FindTargetsDocument = {"__meta__":{"hash":"f4e866e3a87835a6ea5e334117dc69417e8cda19"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindTargets"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TargetPairWhereInput"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TargetPairOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findTargets"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"durationInMs"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invocationID"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<FindTargetsQuery, FindTargetsQueryVariables>;
export const GetTestsWithOffsetDocument = {"__meta__":{"hash":"a58c22b2db5f30d1dba201fe125838c7f14d5e6d"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetTestsWithOffset"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"label"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"direction"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getTestsWithOffset"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"Variable","name":{"kind":"Name","value":"label"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"direction"},"value":{"kind":"Variable","name":{"kind":"Name","value":"direction"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"total"}},{"kind":"Field","name":{"kind":"Name","value":"result"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"sum"}},{"kind":"Field","name":{"kind":"Name","value":"min"}},{"kind":"Field","name":{"kind":"Name","value":"max"}},{"kind":"Field","name":{"kind":"Name","value":"avg"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"passRate"}}]}}]}}]}}]} as unknown as DocumentNode<GetTestsWithOffsetQuery, GetTestsWithOffsetQueryVariables>;
export const GetAveragePassPercentageForLabelDocument = {"__meta__":{"hash":"1849a9864fcfcecf29b462f0b9c9275fa2dd49ef"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAveragePassPercentageForLabel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"label"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getAveragePassPercentageForLabel"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"Variable","name":{"kind":"Name","value":"label"}}}]}]}}]} as unknown as DocumentNode<GetAveragePassPercentageForLabelQuery, GetAveragePassPercentageForLabelQueryVariables>;
export const GetTestDurationAggregationDocument = {"__meta__":{"hash":"4b5a5a8301688612cd07d393bc301156ffba05c7"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetTestDurationAggregation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"label"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getTestDurationAggregation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"Variable","name":{"kind":"Name","value":"label"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"sum"}},{"kind":"Field","name":{"kind":"Name","value":"min"}},{"kind":"Field","name":{"kind":"Name","value":"max"}}]}}]}}]} as unknown as DocumentNode<GetTestDurationAggregationQuery, GetTestDurationAggregationQueryVariables>;
export const FindTestsDocument = {"__meta__":{"hash":"17231025ad382237c09f082d9e94e39118d8502d"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindTests"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TestCollectionWhereInput"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TestCollectionOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findTests"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"firstSeen"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"overallStatus"}},{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invocationID"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<FindTestsQuery, FindTestsQueryVariables>;
export const FindBuildTimesDocument = {"__meta__":{"hash":"707420fe8ea691631ecc9c431896b8e8d6b62692"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBuildTimes"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocationWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findBazelInvocations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}}]}}]}}]}}]}}]} as unknown as DocumentNode<FindBuildTimesQuery, FindBuildTimesQueryVariables>;
export const FindBazelInvocationsDocument = {"__meta__":{"hash":"7151b14bba5e7ea3e0f6e50882cc2f429591feb9"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBazelInvocations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocationWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findBazelInvocations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationNode"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}}]}}]} as unknown as DocumentNode<FindBazelInvocationsQuery, FindBazelInvocationsQueryVariables>;
export const FindBuildsDocument = {"__meta__":{"hash":"f1d6d4ca1f94f09f0cde26127d88f438e7b81111"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBuilds"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BuildWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findBuilds"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BuildNode"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BuildNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Build"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}},{"kind":"Field","name":{"kind":"Name","value":"buildURL"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]} as unknown as DocumentNode<FindBuildsQuery, FindBuildsQueryVariables>;
export const GetBuildLogsDocument = {"__meta__":{"hash":"33b83c08e4c6858f825ba8c758fa02bfac950c41"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBuildLogs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"invocationId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"invocationId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"invocationId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}}]}}]}}]} as unknown as DocumentNode<GetBuildLogsQuery, GetBuildLogsQueryVariables>;
export const FindTestsWithCacheDocument = {"__meta__":{"hash":"add15b38babd589a6f929f238d8f8f03392ad43b"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindTestsWithCache"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TestCollectionWhereInput"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TestCollectionOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findTests"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"firstSeen"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"overallStatus"}},{"kind":"Field","name":{"kind":"Name","value":"cachedLocally"}},{"kind":"Field","name":{"kind":"Name","value":"cachedRemotely"}},{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invocationID"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<FindTestsWithCacheQuery, FindTestsWithCacheQueryVariables>;
export const GetUniqueTargetLabelsDocument = {"__meta__":{"hash":"79c8073af3ceda0d696cce7808d3e70388ac05e1"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetUniqueTargetLabels"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"label"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getUniqueTargetLabels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"param"},"value":{"kind":"Variable","name":{"kind":"Name","value":"label"}}}]}]}}]} as unknown as DocumentNode<GetUniqueTargetLabelsQuery, GetUniqueTargetLabelsQueryVariables>;
export const GetUniqueTestLabelsDocument = {"__meta__":{"hash":"1fdc78b78387992d6a6e6ed7ae7769c87415bb50"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetUniqueTestLabels"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"label"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getUniqueTestLabels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"param"},"value":{"kind":"Variable","name":{"kind":"Name","value":"label"}}}]}]}}]} as unknown as DocumentNode<GetUniqueTestLabelsQuery, GetUniqueTestLabelsQueryVariables>;