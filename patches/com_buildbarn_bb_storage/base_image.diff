diff --git MODULE.bazel MODULE.bazel
index 42c11e5..cefd86d 100644
--- MODULE.bazel
+++ MODULE.bazel
@@ -161,3 +161,19 @@ use_repo(
     "distroless_static_linux_amd64",
     "distroless_static_linux_arm64_v8",
 )
+
+oci.pull(
+    name = "distroless_base",
+    digest = "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
+    image = "gcr.io/distroless/base",
+    platforms = [
+        "linux/amd64",
+        "linux/arm64/v8",
+    ],
+)
+use_repo(
+    oci,
+    "distroless_base",
+    "distroless_base_linux_amd64",
+    "distroless_base_linux_arm64_v8",
+)
diff --git tools/container.bzl tools/container.bzl
index 3f33c42..266cbc7 100644
--- tools/container.bzl
+++ tools/container.bzl
@@ -21,7 +21,7 @@ def multiarch_go_image(name, binary):
 
     oci_image(
         name = image_target,
-        base = Label("@distroless_static"),
+        base = Label("@distroless_base"),
         entrypoint = ["/app/{}".format(native.package_relative_label(binary).name)],
         tars = [tar_target],
         # Don't build un-transitioned images, as the default target architecture might be unsupported
@@ -33,8 +33,8 @@ def multiarch_go_image(name, binary):
         name = name,
         images = [image_target],
         platforms = [
-            "@rules_go//go/toolchain:linux_amd64",
-            "@rules_go//go/toolchain:linux_arm64",
+            "@rules_go//go/toolchain:linux_amd64_cgo",
+            "@rules_go//go/toolchain:linux_arm64_cgo",
         ],
         visibility = ["//visibility:public"],
         target_compatible_with = select({
@@ -47,7 +47,7 @@ def container_push_official(name, image, component):
     oci_push(
         name = name,
         image = image,
-        repository = "ghcr.io/buildbarn/" + component,
+        repository = "ghcr.io/buildbarn/" + component + "-backend",
         remote_tags = "@com_github_buildbarn_bb_storage//tools:stamped_tags",
         target_compatible_with = select({
             Label("@platforms//os:windows"): [Label("@platforms//:incompatible")],
