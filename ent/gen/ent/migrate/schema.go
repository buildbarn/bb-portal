// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActionCacheStatisticsColumns holds the columns for the "action_cache_statistics" table.
	ActionCacheStatisticsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "size_in_bytes", Type: field.TypeUint64, Nullable: true},
		{Name: "save_time_in_ms", Type: field.TypeUint64, Nullable: true},
		{Name: "load_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "hits", Type: field.TypeInt32, Nullable: true},
		{Name: "misses", Type: field.TypeInt32, Nullable: true},
		{Name: "action_summary_action_cache_statistics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ActionCacheStatisticsTable holds the schema information for the "action_cache_statistics" table.
	ActionCacheStatisticsTable = &schema.Table{
		Name:       "action_cache_statistics",
		Columns:    ActionCacheStatisticsColumns,
		PrimaryKey: []*schema.Column{ActionCacheStatisticsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "action_cache_statistics_action_summaries_action_cache_statistics",
				Columns:    []*schema.Column{ActionCacheStatisticsColumns[6]},
				RefColumns: []*schema.Column{ActionSummariesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ActionDataColumns holds the columns for the "action_data" table.
	ActionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "mnemonic", Type: field.TypeString, Nullable: true},
		{Name: "actions_executed", Type: field.TypeInt64, Nullable: true},
		{Name: "actions_created", Type: field.TypeInt64, Nullable: true},
		{Name: "first_started_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "last_ended_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "system_time", Type: field.TypeInt64, Nullable: true},
		{Name: "user_time", Type: field.TypeInt64, Nullable: true},
		{Name: "action_summary_action_data", Type: field.TypeInt, Nullable: true},
	}
	// ActionDataTable holds the schema information for the "action_data" table.
	ActionDataTable = &schema.Table{
		Name:       "action_data",
		Columns:    ActionDataColumns,
		PrimaryKey: []*schema.Column{ActionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "action_data_action_summaries_action_data",
				Columns:    []*schema.Column{ActionDataColumns[8]},
				RefColumns: []*schema.Column{ActionSummariesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ActionSummariesColumns holds the columns for the "action_summaries" table.
	ActionSummariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "actions_created", Type: field.TypeInt64, Nullable: true},
		{Name: "actions_created_not_including_aspects", Type: field.TypeInt64, Nullable: true},
		{Name: "actions_executed", Type: field.TypeInt64, Nullable: true},
		{Name: "remote_cache_hits", Type: field.TypeInt64, Nullable: true},
		{Name: "metrics_action_summary", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ActionSummariesTable holds the schema information for the "action_summaries" table.
	ActionSummariesTable = &schema.Table{
		Name:       "action_summaries",
		Columns:    ActionSummariesColumns,
		PrimaryKey: []*schema.Column{ActionSummariesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "action_summaries_metrics_action_summary",
				Columns:    []*schema.Column{ActionSummariesColumns[5]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ArtifactMetricsColumns holds the columns for the "artifact_metrics" table.
	ArtifactMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "source_artifacts_read_size_in_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "source_artifacts_read_count", Type: field.TypeInt32, Nullable: true},
		{Name: "output_artifacts_seen_size_in_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "output_artifacts_seen_count", Type: field.TypeInt32, Nullable: true},
		{Name: "output_artifacts_from_action_cache_size_in_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "output_artifacts_from_action_cache_count", Type: field.TypeInt32, Nullable: true},
		{Name: "top_level_artifacts_size_in_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "top_level_artifacts_count", Type: field.TypeInt32, Nullable: true},
		{Name: "metrics_artifact_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ArtifactMetricsTable holds the schema information for the "artifact_metrics" table.
	ArtifactMetricsTable = &schema.Table{
		Name:       "artifact_metrics",
		Columns:    ArtifactMetricsColumns,
		PrimaryKey: []*schema.Column{ArtifactMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "artifact_metrics_metrics_artifact_metrics",
				Columns:    []*schema.Column{ArtifactMetricsColumns[9]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// BazelInvocationsColumns holds the columns for the "bazel_invocations" table.
	BazelInvocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "invocation_id", Type: field.TypeUUID, Unique: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "ended_at", Type: field.TypeTime, Nullable: true},
		{Name: "change_number", Type: field.TypeInt, Nullable: true},
		{Name: "patchset_number", Type: field.TypeInt, Nullable: true},
		{Name: "bep_completed", Type: field.TypeBool, Default: false},
		{Name: "step_label", Type: field.TypeString, Nullable: true},
		{Name: "user_email", Type: field.TypeString, Nullable: true},
		{Name: "user_ldap", Type: field.TypeString, Nullable: true},
		{Name: "build_logs", Type: field.TypeString, Nullable: true},
		{Name: "cpu", Type: field.TypeString, Nullable: true},
		{Name: "platform_name", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "is_ci_worker", Type: field.TypeBool, Nullable: true},
		{Name: "configuration_mnemonic", Type: field.TypeString, Nullable: true},
		{Name: "num_fetches", Type: field.TypeInt64, Nullable: true},
		{Name: "profile_name", Type: field.TypeString, Nullable: true},
		{Name: "instance_name", Type: field.TypeString, Nullable: true},
		{Name: "bazel_version", Type: field.TypeString, Nullable: true},
		{Name: "exit_code_name", Type: field.TypeString, Nullable: true},
		{Name: "exit_code_code", Type: field.TypeInt32, Nullable: true},
		{Name: "command_line_command", Type: field.TypeString, Nullable: true},
		{Name: "command_line_executable", Type: field.TypeString, Nullable: true},
		{Name: "command_line_residual", Type: field.TypeString, Nullable: true},
		{Name: "command_line", Type: field.TypeJSON, Nullable: true},
		{Name: "explicit_command_line", Type: field.TypeJSON, Nullable: true},
		{Name: "startup_options", Type: field.TypeJSON, Nullable: true},
		{Name: "explicit_startup_options", Type: field.TypeJSON, Nullable: true},
		{Name: "processed_event_started", Type: field.TypeBool, Default: false},
		{Name: "processed_event_build_metadata", Type: field.TypeBool, Default: false},
		{Name: "processed_event_options_parsed", Type: field.TypeBool, Default: false},
		{Name: "processed_event_build_finished", Type: field.TypeBool, Default: false},
		{Name: "processed_event_structured_command_line", Type: field.TypeBool, Default: false},
		{Name: "processed_event_workspace_status", Type: field.TypeBool, Default: false},
		{Name: "build_invocations", Type: field.TypeInt, Nullable: true},
	}
	// BazelInvocationsTable holds the schema information for the "bazel_invocations" table.
	BazelInvocationsTable = &schema.Table{
		Name:       "bazel_invocations",
		Columns:    BazelInvocationsColumns,
		PrimaryKey: []*schema.Column{BazelInvocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bazel_invocations_builds_invocations",
				Columns:    []*schema.Column{BazelInvocationsColumns[35]},
				RefColumns: []*schema.Column{BuildsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "bazelinvocation_invocation_id",
				Unique:  false,
				Columns: []*schema.Column{BazelInvocationsColumns[1]},
			},
			{
				Name:    "bazelinvocation_change_number_patchset_number",
				Unique:  false,
				Columns: []*schema.Column{BazelInvocationsColumns[4], BazelInvocationsColumns[5]},
			},
		},
	}
	// BazelInvocationProblemsColumns holds the columns for the "bazel_invocation_problems" table.
	BazelInvocationProblemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "problem_type", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "bep_events", Type: field.TypeJSON},
		{Name: "bazel_invocation_problems", Type: field.TypeInt, Nullable: true},
	}
	// BazelInvocationProblemsTable holds the schema information for the "bazel_invocation_problems" table.
	BazelInvocationProblemsTable = &schema.Table{
		Name:       "bazel_invocation_problems",
		Columns:    BazelInvocationProblemsColumns,
		PrimaryKey: []*schema.Column{BazelInvocationProblemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bazel_invocation_problems_bazel_invocations_problems",
				Columns:    []*schema.Column{BazelInvocationProblemsColumns[4]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// BlobsColumns holds the columns for the "blobs" table.
	BlobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uri", Type: field.TypeString, Unique: true},
		{Name: "size_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "archiving_status", Type: field.TypeEnum, Enums: []string{"QUEUED", "ARCHIVING", "SUCCESS", "FAILED", "BYTESTREAM"}, Default: "QUEUED"},
		{Name: "reason", Type: field.TypeString, Nullable: true},
		{Name: "archive_url", Type: field.TypeString, Nullable: true},
		{Name: "instance_name", Type: field.TypeString, Default: ""},
	}
	// BlobsTable holds the schema information for the "blobs" table.
	BlobsTable = &schema.Table{
		Name:       "blobs",
		Columns:    BlobsColumns,
		PrimaryKey: []*schema.Column{BlobsColumns[0]},
	}
	// BuildsColumns holds the columns for the "builds" table.
	BuildsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "build_url", Type: field.TypeString},
		{Name: "build_uuid", Type: field.TypeUUID, Unique: true},
		{Name: "instance_name", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
	}
	// BuildsTable holds the schema information for the "builds" table.
	BuildsTable = &schema.Table{
		Name:       "builds",
		Columns:    BuildsColumns,
		PrimaryKey: []*schema.Column{BuildsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "build_build_uuid",
				Unique:  false,
				Columns: []*schema.Column{BuildsColumns[2]},
			},
			{
				Name:    "build_build_url",
				Unique:  false,
				Columns: []*schema.Column{BuildsColumns[1]},
			},
			{
				Name:    "build_build_url_instance_name",
				Unique:  true,
				Columns: []*schema.Column{BuildsColumns[1], BuildsColumns[3]},
			},
		},
	}
	// BuildGraphMetricsColumns holds the columns for the "build_graph_metrics" table.
	BuildGraphMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "action_lookup_value_count", Type: field.TypeInt32, Nullable: true},
		{Name: "action_lookup_value_count_not_including_aspects", Type: field.TypeInt32, Nullable: true},
		{Name: "action_count", Type: field.TypeInt32, Nullable: true},
		{Name: "action_count_not_including_aspects", Type: field.TypeInt32, Nullable: true},
		{Name: "input_file_configured_target_count", Type: field.TypeInt32, Nullable: true},
		{Name: "output_file_configured_target_count", Type: field.TypeInt32, Nullable: true},
		{Name: "other_configured_target_count", Type: field.TypeInt32, Nullable: true},
		{Name: "output_artifact_count", Type: field.TypeInt32, Nullable: true},
		{Name: "post_invocation_skyframe_node_count", Type: field.TypeInt32, Nullable: true},
		{Name: "build_graph_metrics_dirtied_values", Type: field.TypeInt, Nullable: true},
		{Name: "build_graph_metrics_changed_values", Type: field.TypeInt, Nullable: true},
		{Name: "build_graph_metrics_built_values", Type: field.TypeInt, Nullable: true},
		{Name: "build_graph_metrics_cleaned_values", Type: field.TypeInt, Nullable: true},
		{Name: "metrics_build_graph_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// BuildGraphMetricsTable holds the schema information for the "build_graph_metrics" table.
	BuildGraphMetricsTable = &schema.Table{
		Name:       "build_graph_metrics",
		Columns:    BuildGraphMetricsColumns,
		PrimaryKey: []*schema.Column{BuildGraphMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "build_graph_metrics_evaluation_stats_dirtied_values",
				Columns:    []*schema.Column{BuildGraphMetricsColumns[10]},
				RefColumns: []*schema.Column{EvaluationStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "build_graph_metrics_evaluation_stats_changed_values",
				Columns:    []*schema.Column{BuildGraphMetricsColumns[11]},
				RefColumns: []*schema.Column{EvaluationStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "build_graph_metrics_evaluation_stats_built_values",
				Columns:    []*schema.Column{BuildGraphMetricsColumns[12]},
				RefColumns: []*schema.Column{EvaluationStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "build_graph_metrics_evaluation_stats_cleaned_values",
				Columns:    []*schema.Column{BuildGraphMetricsColumns[13]},
				RefColumns: []*schema.Column{EvaluationStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "build_graph_metrics_metrics_build_graph_metrics",
				Columns:    []*schema.Column{BuildGraphMetricsColumns[14]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ConnectionMetadataColumns holds the columns for the "connection_metadata" table.
	ConnectionMetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "connection_last_open_at", Type: field.TypeTime},
		{Name: "bazel_invocation_connection_metadata", Type: field.TypeInt},
	}
	// ConnectionMetadataTable holds the schema information for the "connection_metadata" table.
	ConnectionMetadataTable = &schema.Table{
		Name:       "connection_metadata",
		Columns:    ConnectionMetadataColumns,
		PrimaryKey: []*schema.Column{ConnectionMetadataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "connection_metadata_bazel_invocations_connection_metadata",
				Columns:    []*schema.Column{ConnectionMetadataColumns[2]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "connectionmetadata_bazel_invocation_connection_metadata",
				Unique:  true,
				Columns: []*schema.Column{ConnectionMetadataColumns[2]},
			},
		},
	}
	// CumulativeMetricsColumns holds the columns for the "cumulative_metrics" table.
	CumulativeMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "num_analyses", Type: field.TypeInt32, Nullable: true},
		{Name: "num_builds", Type: field.TypeInt32, Nullable: true},
		{Name: "metrics_cumulative_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// CumulativeMetricsTable holds the schema information for the "cumulative_metrics" table.
	CumulativeMetricsTable = &schema.Table{
		Name:       "cumulative_metrics",
		Columns:    CumulativeMetricsColumns,
		PrimaryKey: []*schema.Column{CumulativeMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cumulative_metrics_metrics_cumulative_metrics",
				Columns:    []*schema.Column{CumulativeMetricsColumns[3]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EvaluationStatsColumns holds the columns for the "evaluation_stats" table.
	EvaluationStatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "skyfunction_name", Type: field.TypeString, Nullable: true},
		{Name: "count", Type: field.TypeInt64, Nullable: true},
		{Name: "build_graph_metrics_evaluated_values", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// EvaluationStatsTable holds the schema information for the "evaluation_stats" table.
	EvaluationStatsTable = &schema.Table{
		Name:       "evaluation_stats",
		Columns:    EvaluationStatsColumns,
		PrimaryKey: []*schema.Column{EvaluationStatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "evaluation_stats_build_graph_metrics_evaluated_values",
				Columns:    []*schema.Column{EvaluationStatsColumns[3]},
				RefColumns: []*schema.Column{BuildGraphMetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EventMetadataColumns holds the columns for the "event_metadata" table.
	EventMetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sequence_number", Type: field.TypeInt64},
		{Name: "event_received_at", Type: field.TypeTime},
		{Name: "event_hash", Type: field.TypeString},
		{Name: "bazel_invocation_event_metadata", Type: field.TypeInt},
	}
	// EventMetadataTable holds the schema information for the "event_metadata" table.
	EventMetadataTable = &schema.Table{
		Name:       "event_metadata",
		Columns:    EventMetadataColumns,
		PrimaryKey: []*schema.Column{EventMetadataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "event_metadata_bazel_invocations_event_metadata",
				Columns:    []*schema.Column{EventMetadataColumns[4]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "eventmetadata_sequence_number_bazel_invocation_event_metadata",
				Unique:  true,
				Columns: []*schema.Column{EventMetadataColumns[1], EventMetadataColumns[4]},
			},
		},
	}
	// ExectionInfosColumns holds the columns for the "exection_infos" table.
	ExectionInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "timeout_seconds", Type: field.TypeInt32, Nullable: true},
		{Name: "strategy", Type: field.TypeString, Nullable: true},
		{Name: "cached_remotely", Type: field.TypeBool, Nullable: true},
		{Name: "exit_code", Type: field.TypeInt32, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "test_result_bes_execution_info", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ExectionInfosTable holds the schema information for the "exection_infos" table.
	ExectionInfosTable = &schema.Table{
		Name:       "exection_infos",
		Columns:    ExectionInfosColumns,
		PrimaryKey: []*schema.Column{ExectionInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exection_infos_test_result_be_ss_execution_info",
				Columns:    []*schema.Column{ExectionInfosColumns[6]},
				RefColumns: []*schema.Column{TestResultBeSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GarbageMetricsColumns holds the columns for the "garbage_metrics" table.
	GarbageMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "garbage_collected", Type: field.TypeInt64, Nullable: true},
		{Name: "memory_metrics_garbage_metrics", Type: field.TypeInt, Nullable: true},
	}
	// GarbageMetricsTable holds the schema information for the "garbage_metrics" table.
	GarbageMetricsTable = &schema.Table{
		Name:       "garbage_metrics",
		Columns:    GarbageMetricsColumns,
		PrimaryKey: []*schema.Column{GarbageMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "garbage_metrics_memory_metrics_garbage_metrics",
				Columns:    []*schema.Column{GarbageMetricsColumns[3]},
				RefColumns: []*schema.Column{MemoryMetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// IncompleteBuildLogsColumns holds the columns for the "incomplete_build_logs" table.
	IncompleteBuildLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "snippet_id", Type: field.TypeInt32},
		{Name: "log_snippet", Type: field.TypeString},
		{Name: "bazel_invocation_incomplete_build_logs", Type: field.TypeInt, Nullable: true},
	}
	// IncompleteBuildLogsTable holds the schema information for the "incomplete_build_logs" table.
	IncompleteBuildLogsTable = &schema.Table{
		Name:       "incomplete_build_logs",
		Columns:    IncompleteBuildLogsColumns,
		PrimaryKey: []*schema.Column{IncompleteBuildLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "incomplete_build_logs_bazel_invocations_incomplete_build_logs",
				Columns:    []*schema.Column{IncompleteBuildLogsColumns[3]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "incompletebuildlog_snippet_id_bazel_invocation_incomplete_build_logs",
				Unique:  true,
				Columns: []*schema.Column{IncompleteBuildLogsColumns[1], IncompleteBuildLogsColumns[3]},
			},
		},
	}
	// InvocationFilesColumns holds the columns for the "invocation_files" table.
	InvocationFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "digest", Type: field.TypeString, Nullable: true},
		{Name: "size_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "digest_function", Type: field.TypeString, Nullable: true},
		{Name: "bazel_invocation_invocation_files", Type: field.TypeInt, Nullable: true},
	}
	// InvocationFilesTable holds the schema information for the "invocation_files" table.
	InvocationFilesTable = &schema.Table{
		Name:       "invocation_files",
		Columns:    InvocationFilesColumns,
		PrimaryKey: []*schema.Column{InvocationFilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invocation_files_bazel_invocations_invocation_files",
				Columns:    []*schema.Column{InvocationFilesColumns[6]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "invocationfiles_name_bazel_invocation_invocation_files",
				Unique:  true,
				Columns: []*schema.Column{InvocationFilesColumns[1], InvocationFilesColumns[6]},
			},
		},
	}
	// MemoryMetricsColumns holds the columns for the "memory_metrics" table.
	MemoryMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "peak_post_gc_heap_size", Type: field.TypeInt64, Nullable: true},
		{Name: "used_heap_size_post_build", Type: field.TypeInt64, Nullable: true},
		{Name: "peak_post_gc_tenured_space_heap_size", Type: field.TypeInt64, Nullable: true},
		{Name: "metrics_memory_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// MemoryMetricsTable holds the schema information for the "memory_metrics" table.
	MemoryMetricsTable = &schema.Table{
		Name:       "memory_metrics",
		Columns:    MemoryMetricsColumns,
		PrimaryKey: []*schema.Column{MemoryMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "memory_metrics_metrics_memory_metrics",
				Columns:    []*schema.Column{MemoryMetricsColumns[4]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MetricsColumns holds the columns for the "metrics" table.
	MetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bazel_invocation_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// MetricsTable holds the schema information for the "metrics" table.
	MetricsTable = &schema.Table{
		Name:       "metrics",
		Columns:    MetricsColumns,
		PrimaryKey: []*schema.Column{MetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "metrics_bazel_invocations_metrics",
				Columns:    []*schema.Column{MetricsColumns[1]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "metrics_bazel_invocation_metrics",
				Unique:  false,
				Columns: []*schema.Column{MetricsColumns[1]},
			},
		},
	}
	// MissDetailsColumns holds the columns for the "miss_details" table.
	MissDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "reason", Type: field.TypeEnum, Nullable: true, Enums: []string{"DIFFERENT_ACTION_KEY", "DIFFERENT_DEPS", "DIFFERENT_ENVIRONMENT", "DIFFERENT_FILES", "CORRUPTED_CACHE_ENTRY", "NOT_CACHED", "UNCONDITIONAL_EXECUTION", "UNKNOWN"}, Default: "UNKNOWN"},
		{Name: "count", Type: field.TypeInt32, Nullable: true},
		{Name: "action_cache_statistics_miss_details", Type: field.TypeInt, Nullable: true},
	}
	// MissDetailsTable holds the schema information for the "miss_details" table.
	MissDetailsTable = &schema.Table{
		Name:       "miss_details",
		Columns:    MissDetailsColumns,
		PrimaryKey: []*schema.Column{MissDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "miss_details_action_cache_statistics_miss_details",
				Columns:    []*schema.Column{MissDetailsColumns[3]},
				RefColumns: []*schema.Column{ActionCacheStatisticsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// NamedSetOfFilesColumns holds the columns for the "named_set_of_files" table.
	NamedSetOfFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "named_set_of_files_file_sets", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "output_group_file_sets", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// NamedSetOfFilesTable holds the schema information for the "named_set_of_files" table.
	NamedSetOfFilesTable = &schema.Table{
		Name:       "named_set_of_files",
		Columns:    NamedSetOfFilesColumns,
		PrimaryKey: []*schema.Column{NamedSetOfFilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "named_set_of_files_named_set_of_files_file_sets",
				Columns:    []*schema.Column{NamedSetOfFilesColumns[1]},
				RefColumns: []*schema.Column{NamedSetOfFilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "named_set_of_files_output_groups_file_sets",
				Columns:    []*schema.Column{NamedSetOfFilesColumns[2]},
				RefColumns: []*schema.Column{OutputGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// NetworkMetricsColumns holds the columns for the "network_metrics" table.
	NetworkMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "metrics_network_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// NetworkMetricsTable holds the schema information for the "network_metrics" table.
	NetworkMetricsTable = &schema.Table{
		Name:       "network_metrics",
		Columns:    NetworkMetricsColumns,
		PrimaryKey: []*schema.Column{NetworkMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "network_metrics_metrics_network_metrics",
				Columns:    []*schema.Column{NetworkMetricsColumns[1]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OutputGroupsColumns holds the columns for the "output_groups" table.
	OutputGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "incomplete", Type: field.TypeBool, Nullable: true},
	}
	// OutputGroupsTable holds the schema information for the "output_groups" table.
	OutputGroupsTable = &schema.Table{
		Name:       "output_groups",
		Columns:    OutputGroupsColumns,
		PrimaryKey: []*schema.Column{OutputGroupsColumns[0]},
	}
	// PackageLoadMetricsColumns holds the columns for the "package_load_metrics" table.
	PackageLoadMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "load_duration", Type: field.TypeInt64, Nullable: true},
		{Name: "num_targets", Type: field.TypeUint64, Nullable: true},
		{Name: "computation_steps", Type: field.TypeUint64, Nullable: true},
		{Name: "num_transitive_loads", Type: field.TypeUint64, Nullable: true},
		{Name: "package_overhead", Type: field.TypeUint64, Nullable: true},
		{Name: "package_metrics_package_load_metrics", Type: field.TypeInt, Nullable: true},
	}
	// PackageLoadMetricsTable holds the schema information for the "package_load_metrics" table.
	PackageLoadMetricsTable = &schema.Table{
		Name:       "package_load_metrics",
		Columns:    PackageLoadMetricsColumns,
		PrimaryKey: []*schema.Column{PackageLoadMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "package_load_metrics_package_metrics_package_load_metrics",
				Columns:    []*schema.Column{PackageLoadMetricsColumns[7]},
				RefColumns: []*schema.Column{PackageMetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PackageMetricsColumns holds the columns for the "package_metrics" table.
	PackageMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "packages_loaded", Type: field.TypeInt64, Nullable: true},
		{Name: "metrics_package_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// PackageMetricsTable holds the schema information for the "package_metrics" table.
	PackageMetricsTable = &schema.Table{
		Name:       "package_metrics",
		Columns:    PackageMetricsColumns,
		PrimaryKey: []*schema.Column{PackageMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "package_metrics_metrics_package_metrics",
				Columns:    []*schema.Column{PackageMetricsColumns[2]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResourceUsagesColumns holds the columns for the "resource_usages" table.
	ResourceUsagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "exection_info_resource_usage", Type: field.TypeInt, Nullable: true},
	}
	// ResourceUsagesTable holds the schema information for the "resource_usages" table.
	ResourceUsagesTable = &schema.Table{
		Name:       "resource_usages",
		Columns:    ResourceUsagesColumns,
		PrimaryKey: []*schema.Column{ResourceUsagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resource_usages_exection_infos_resource_usage",
				Columns:    []*schema.Column{ResourceUsagesColumns[3]},
				RefColumns: []*schema.Column{ExectionInfosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RunnerCountsColumns holds the columns for the "runner_counts" table.
	RunnerCountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "exec_kind", Type: field.TypeString, Nullable: true},
		{Name: "actions_executed", Type: field.TypeInt64, Nullable: true},
		{Name: "action_summary_runner_count", Type: field.TypeInt, Nullable: true},
	}
	// RunnerCountsTable holds the schema information for the "runner_counts" table.
	RunnerCountsTable = &schema.Table{
		Name:       "runner_counts",
		Columns:    RunnerCountsColumns,
		PrimaryKey: []*schema.Column{RunnerCountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "runner_counts_action_summaries_runner_count",
				Columns:    []*schema.Column{RunnerCountsColumns[4]},
				RefColumns: []*schema.Column{ActionSummariesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SourceControlsColumns holds the columns for the "source_controls" table.
	SourceControlsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "provider", Type: field.TypeEnum, Nullable: true, Enums: []string{"GITHUB", "GITLAB"}},
		{Name: "instance_url", Type: field.TypeString, Nullable: true},
		{Name: "repo", Type: field.TypeString, Nullable: true},
		{Name: "refs", Type: field.TypeString, Nullable: true},
		{Name: "commit_sha", Type: field.TypeString, Nullable: true},
		{Name: "actor", Type: field.TypeString, Nullable: true},
		{Name: "event_name", Type: field.TypeString, Nullable: true},
		{Name: "workflow", Type: field.TypeString, Nullable: true},
		{Name: "run_id", Type: field.TypeString, Nullable: true},
		{Name: "run_number", Type: field.TypeString, Nullable: true},
		{Name: "job", Type: field.TypeString, Nullable: true},
		{Name: "action", Type: field.TypeString, Nullable: true},
		{Name: "runner_name", Type: field.TypeString, Nullable: true},
		{Name: "runner_arch", Type: field.TypeString, Nullable: true},
		{Name: "runner_os", Type: field.TypeString, Nullable: true},
		{Name: "workspace", Type: field.TypeString, Nullable: true},
		{Name: "bazel_invocation_source_control", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// SourceControlsTable holds the schema information for the "source_controls" table.
	SourceControlsTable = &schema.Table{
		Name:       "source_controls",
		Columns:    SourceControlsColumns,
		PrimaryKey: []*schema.Column{SourceControlsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "source_controls_bazel_invocations_source_control",
				Columns:    []*schema.Column{SourceControlsColumns[17]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SystemNetworkStatsColumns holds the columns for the "system_network_stats" table.
	SystemNetworkStatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bytes_sent", Type: field.TypeUint64, Nullable: true},
		{Name: "bytes_recv", Type: field.TypeUint64, Nullable: true},
		{Name: "packets_sent", Type: field.TypeUint64, Nullable: true},
		{Name: "packets_recv", Type: field.TypeUint64, Nullable: true},
		{Name: "peak_bytes_sent_per_sec", Type: field.TypeUint64, Nullable: true},
		{Name: "peak_bytes_recv_per_sec", Type: field.TypeUint64, Nullable: true},
		{Name: "peak_packets_sent_per_sec", Type: field.TypeUint64, Nullable: true},
		{Name: "peak_packets_recv_per_sec", Type: field.TypeUint64, Nullable: true},
		{Name: "network_metrics_system_network_stats", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// SystemNetworkStatsTable holds the schema information for the "system_network_stats" table.
	SystemNetworkStatsTable = &schema.Table{
		Name:       "system_network_stats",
		Columns:    SystemNetworkStatsColumns,
		PrimaryKey: []*schema.Column{SystemNetworkStatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "system_network_stats_network_metrics_system_network_stats",
				Columns:    []*schema.Column{SystemNetworkStatsColumns[9]},
				RefColumns: []*schema.Column{NetworkMetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TargetsColumns holds the columns for the "targets" table.
	TargetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString},
		{Name: "tag", Type: field.TypeJSON, Nullable: true},
		{Name: "target_kind", Type: field.TypeString, Nullable: true},
		{Name: "test_size", Type: field.TypeEnum, Nullable: true, Enums: []string{"UNKNOWN", "SMALL", "MEDIUM", "LARGE", "ENORMOUS"}},
		{Name: "success", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "test_timeout", Type: field.TypeInt64, Nullable: true},
		{Name: "start_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "end_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "duration_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "abort_reason", Type: field.TypeEnum, Nullable: true, Enums: []string{"UNKNOWN", "USER_INTERRUPTED", "NO_ANALYZE", "NO_BUILD", "TIME_OUT", "REMOTE_ENVIRONMENT_FAILURE", "INTERNAL", "LOADING_FAILURE", "ANALYSIS_FAILURE", "SKIPPED", "INCOMPLETE", "OUT_OF_MEMORY"}},
		{Name: "bazel_invocation_targets", Type: field.TypeInt, Nullable: true},
	}
	// TargetsTable holds the schema information for the "targets" table.
	TargetsTable = &schema.Table{
		Name:       "targets",
		Columns:    TargetsColumns,
		PrimaryKey: []*schema.Column{TargetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "targets_bazel_invocations_targets",
				Columns:    []*schema.Column{TargetsColumns[11]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "target_label",
				Unique:  false,
				Columns: []*schema.Column{TargetsColumns[1]},
			},
			{
				Name:    "target_label_bazel_invocation_targets",
				Unique:  true,
				Columns: []*schema.Column{TargetsColumns[1], TargetsColumns[11]},
			},
		},
	}
	// TargetMetricsColumns holds the columns for the "target_metrics" table.
	TargetMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "targets_loaded", Type: field.TypeInt64, Nullable: true},
		{Name: "targets_configured", Type: field.TypeInt64, Nullable: true},
		{Name: "targets_configured_not_including_aspects", Type: field.TypeInt64, Nullable: true},
		{Name: "metrics_target_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TargetMetricsTable holds the schema information for the "target_metrics" table.
	TargetMetricsTable = &schema.Table{
		Name:       "target_metrics",
		Columns:    TargetMetricsColumns,
		PrimaryKey: []*schema.Column{TargetMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "target_metrics_metrics_target_metrics",
				Columns:    []*schema.Column{TargetMetricsColumns[4]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TestCollectionsColumns holds the columns for the "test_collections" table.
	TestCollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString, Nullable: true},
		{Name: "overall_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"NO_STATUS", "PASSED", "FLAKY", "TIMEOUT", "FAILED", "INCOMPLETE", "REMOTE_FAILURE", "FAILED_TO_BUILD", "TOOL_HALTED_BEFORE_TESTING"}, Default: "NO_STATUS"},
		{Name: "strategy", Type: field.TypeString, Nullable: true},
		{Name: "cached_locally", Type: field.TypeBool, Nullable: true},
		{Name: "cached_remotely", Type: field.TypeBool, Nullable: true},
		{Name: "first_seen", Type: field.TypeTime, Nullable: true},
		{Name: "duration_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "bazel_invocation_test_collection", Type: field.TypeInt, Nullable: true},
	}
	// TestCollectionsTable holds the schema information for the "test_collections" table.
	TestCollectionsTable = &schema.Table{
		Name:       "test_collections",
		Columns:    TestCollectionsColumns,
		PrimaryKey: []*schema.Column{TestCollectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "test_collections_bazel_invocations_test_collection",
				Columns:    []*schema.Column{TestCollectionsColumns[8]},
				RefColumns: []*schema.Column{BazelInvocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "testcollection_label",
				Unique:  false,
				Columns: []*schema.Column{TestCollectionsColumns[1]},
			},
			{
				Name:    "testcollection_label_bazel_invocation_test_collection",
				Unique:  true,
				Columns: []*schema.Column{TestCollectionsColumns[1], TestCollectionsColumns[8]},
			},
		},
	}
	// TestFilesColumns holds the columns for the "test_files" table.
	TestFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "digest", Type: field.TypeString, Nullable: true},
		{Name: "file", Type: field.TypeString, Nullable: true},
		{Name: "length", Type: field.TypeInt64, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "prefix", Type: field.TypeJSON, Nullable: true},
		{Name: "named_set_of_files_files", Type: field.TypeInt, Nullable: true},
		{Name: "output_group_inline_files", Type: field.TypeInt, Nullable: true},
		{Name: "test_result_bes_test_action_output", Type: field.TypeInt, Nullable: true},
		{Name: "test_summary_passed", Type: field.TypeInt, Nullable: true},
		{Name: "test_summary_failed", Type: field.TypeInt, Nullable: true},
	}
	// TestFilesTable holds the schema information for the "test_files" table.
	TestFilesTable = &schema.Table{
		Name:       "test_files",
		Columns:    TestFilesColumns,
		PrimaryKey: []*schema.Column{TestFilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "test_files_named_set_of_files_files",
				Columns:    []*schema.Column{TestFilesColumns[6]},
				RefColumns: []*schema.Column{NamedSetOfFilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "test_files_output_groups_inline_files",
				Columns:    []*schema.Column{TestFilesColumns[7]},
				RefColumns: []*schema.Column{OutputGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "test_files_test_result_be_ss_test_action_output",
				Columns:    []*schema.Column{TestFilesColumns[8]},
				RefColumns: []*schema.Column{TestResultBeSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "test_files_test_summaries_passed",
				Columns:    []*schema.Column{TestFilesColumns[9]},
				RefColumns: []*schema.Column{TestSummariesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "test_files_test_summaries_failed",
				Columns:    []*schema.Column{TestFilesColumns[10]},
				RefColumns: []*schema.Column{TestSummariesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TestResultBeSsColumns holds the columns for the "test_result_be_ss" table.
	TestResultBeSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "test_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"NO_STATUS", "PASSED", "FLAKY", "TIMEOUT", "FAILED", "INCOMPLETE", "REMOTE_FAILURE", "FAILED_TO_BUILD", "TOOL_HALTED_BEFORE_TESTING"}, Default: "NO_STATUS"},
		{Name: "status_details", Type: field.TypeString, Nullable: true},
		{Name: "label", Type: field.TypeString, Nullable: true},
		{Name: "warning", Type: field.TypeJSON, Nullable: true},
		{Name: "cached_locally", Type: field.TypeBool, Nullable: true},
		{Name: "test_attempt_start_millis_epoch", Type: field.TypeInt64, Nullable: true},
		{Name: "test_attempt_start", Type: field.TypeString, Nullable: true},
		{Name: "test_attempt_duration_millis", Type: field.TypeInt64, Nullable: true},
		{Name: "test_attempt_duration", Type: field.TypeInt64, Nullable: true},
		{Name: "test_collection_test_results", Type: field.TypeInt, Nullable: true},
	}
	// TestResultBeSsTable holds the schema information for the "test_result_be_ss" table.
	TestResultBeSsTable = &schema.Table{
		Name:       "test_result_be_ss",
		Columns:    TestResultBeSsColumns,
		PrimaryKey: []*schema.Column{TestResultBeSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "test_result_be_ss_test_collections_test_results",
				Columns:    []*schema.Column{TestResultBeSsColumns[10]},
				RefColumns: []*schema.Column{TestCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "testresultbes_label",
				Unique:  false,
				Columns: []*schema.Column{TestResultBeSsColumns[3]},
			},
		},
	}
	// TestSummariesColumns holds the columns for the "test_summaries" table.
	TestSummariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "overall_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"NO_STATUS", "PASSED", "FLAKY", "TIMEOUT", "FAILED", "INCOMPLETE", "REMOTE_FAILURE", "FAILED_TO_BUILD", "TOOL_HALTED_BEFORE_TESTING"}, Default: "NO_STATUS"},
		{Name: "total_run_count", Type: field.TypeInt32, Nullable: true},
		{Name: "run_count", Type: field.TypeInt32, Nullable: true},
		{Name: "attempt_count", Type: field.TypeInt32, Nullable: true},
		{Name: "shard_count", Type: field.TypeInt32, Nullable: true},
		{Name: "total_num_cached", Type: field.TypeInt32, Nullable: true},
		{Name: "first_start_time", Type: field.TypeInt64, Nullable: true},
		{Name: "last_stop_time", Type: field.TypeInt64, Nullable: true},
		{Name: "total_run_duration", Type: field.TypeInt64, Nullable: true},
		{Name: "label", Type: field.TypeString, Nullable: true},
		{Name: "test_collection_test_summary", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TestSummariesTable holds the schema information for the "test_summaries" table.
	TestSummariesTable = &schema.Table{
		Name:       "test_summaries",
		Columns:    TestSummariesColumns,
		PrimaryKey: []*schema.Column{TestSummariesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "test_summaries_test_collections_test_summary",
				Columns:    []*schema.Column{TestSummariesColumns[11]},
				RefColumns: []*schema.Column{TestCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "testsummary_label",
				Unique:  false,
				Columns: []*schema.Column{TestSummariesColumns[10]},
			},
		},
	}
	// TimingBreakdownsColumns holds the columns for the "timing_breakdowns" table.
	TimingBreakdownsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "time", Type: field.TypeString, Nullable: true},
		{Name: "exection_info_timing_breakdown", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TimingBreakdownsTable holds the schema information for the "timing_breakdowns" table.
	TimingBreakdownsTable = &schema.Table{
		Name:       "timing_breakdowns",
		Columns:    TimingBreakdownsColumns,
		PrimaryKey: []*schema.Column{TimingBreakdownsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "timing_breakdowns_exection_infos_timing_breakdown",
				Columns:    []*schema.Column{TimingBreakdownsColumns[3]},
				RefColumns: []*schema.Column{ExectionInfosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TimingChildsColumns holds the columns for the "timing_childs" table.
	TimingChildsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "time", Type: field.TypeString, Nullable: true},
		{Name: "timing_breakdown_child", Type: field.TypeInt, Nullable: true},
	}
	// TimingChildsTable holds the schema information for the "timing_childs" table.
	TimingChildsTable = &schema.Table{
		Name:       "timing_childs",
		Columns:    TimingChildsColumns,
		PrimaryKey: []*schema.Column{TimingChildsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "timing_childs_timing_breakdowns_child",
				Columns:    []*schema.Column{TimingChildsColumns[3]},
				RefColumns: []*schema.Column{TimingBreakdownsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TimingMetricsColumns holds the columns for the "timing_metrics" table.
	TimingMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "cpu_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "wall_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "analysis_phase_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "execution_phase_time_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "actions_execution_start_in_ms", Type: field.TypeInt64, Nullable: true},
		{Name: "metrics_timing_metrics", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TimingMetricsTable holds the schema information for the "timing_metrics" table.
	TimingMetricsTable = &schema.Table{
		Name:       "timing_metrics",
		Columns:    TimingMetricsColumns,
		PrimaryKey: []*schema.Column{TimingMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "timing_metrics_metrics_timing_metrics",
				Columns:    []*schema.Column{TimingMetricsColumns[6]},
				RefColumns: []*schema.Column{MetricsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActionCacheStatisticsTable,
		ActionDataTable,
		ActionSummariesTable,
		ArtifactMetricsTable,
		BazelInvocationsTable,
		BazelInvocationProblemsTable,
		BlobsTable,
		BuildsTable,
		BuildGraphMetricsTable,
		ConnectionMetadataTable,
		CumulativeMetricsTable,
		EvaluationStatsTable,
		EventMetadataTable,
		ExectionInfosTable,
		GarbageMetricsTable,
		IncompleteBuildLogsTable,
		InvocationFilesTable,
		MemoryMetricsTable,
		MetricsTable,
		MissDetailsTable,
		NamedSetOfFilesTable,
		NetworkMetricsTable,
		OutputGroupsTable,
		PackageLoadMetricsTable,
		PackageMetricsTable,
		ResourceUsagesTable,
		RunnerCountsTable,
		SourceControlsTable,
		SystemNetworkStatsTable,
		TargetsTable,
		TargetMetricsTable,
		TestCollectionsTable,
		TestFilesTable,
		TestResultBeSsTable,
		TestSummariesTable,
		TimingBreakdownsTable,
		TimingChildsTable,
		TimingMetricsTable,
	}
)

func init() {
	ActionCacheStatisticsTable.ForeignKeys[0].RefTable = ActionSummariesTable
	ActionDataTable.ForeignKeys[0].RefTable = ActionSummariesTable
	ActionSummariesTable.ForeignKeys[0].RefTable = MetricsTable
	ArtifactMetricsTable.ForeignKeys[0].RefTable = MetricsTable
	BazelInvocationsTable.ForeignKeys[0].RefTable = BuildsTable
	BazelInvocationProblemsTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	BuildGraphMetricsTable.ForeignKeys[0].RefTable = EvaluationStatsTable
	BuildGraphMetricsTable.ForeignKeys[1].RefTable = EvaluationStatsTable
	BuildGraphMetricsTable.ForeignKeys[2].RefTable = EvaluationStatsTable
	BuildGraphMetricsTable.ForeignKeys[3].RefTable = EvaluationStatsTable
	BuildGraphMetricsTable.ForeignKeys[4].RefTable = MetricsTable
	ConnectionMetadataTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	CumulativeMetricsTable.ForeignKeys[0].RefTable = MetricsTable
	EvaluationStatsTable.ForeignKeys[0].RefTable = BuildGraphMetricsTable
	EventMetadataTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	ExectionInfosTable.ForeignKeys[0].RefTable = TestResultBeSsTable
	GarbageMetricsTable.ForeignKeys[0].RefTable = MemoryMetricsTable
	IncompleteBuildLogsTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	InvocationFilesTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	MemoryMetricsTable.ForeignKeys[0].RefTable = MetricsTable
	MetricsTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	MissDetailsTable.ForeignKeys[0].RefTable = ActionCacheStatisticsTable
	NamedSetOfFilesTable.ForeignKeys[0].RefTable = NamedSetOfFilesTable
	NamedSetOfFilesTable.ForeignKeys[1].RefTable = OutputGroupsTable
	NetworkMetricsTable.ForeignKeys[0].RefTable = MetricsTable
	PackageLoadMetricsTable.ForeignKeys[0].RefTable = PackageMetricsTable
	PackageMetricsTable.ForeignKeys[0].RefTable = MetricsTable
	ResourceUsagesTable.ForeignKeys[0].RefTable = ExectionInfosTable
	RunnerCountsTable.ForeignKeys[0].RefTable = ActionSummariesTable
	SourceControlsTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	SystemNetworkStatsTable.ForeignKeys[0].RefTable = NetworkMetricsTable
	TargetsTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	TargetMetricsTable.ForeignKeys[0].RefTable = MetricsTable
	TestCollectionsTable.ForeignKeys[0].RefTable = BazelInvocationsTable
	TestFilesTable.ForeignKeys[0].RefTable = NamedSetOfFilesTable
	TestFilesTable.ForeignKeys[1].RefTable = OutputGroupsTable
	TestFilesTable.ForeignKeys[2].RefTable = TestResultBeSsTable
	TestFilesTable.ForeignKeys[3].RefTable = TestSummariesTable
	TestFilesTable.ForeignKeys[4].RefTable = TestSummariesTable
	TestResultBeSsTable.ForeignKeys[0].RefTable = TestCollectionsTable
	TestSummariesTable.ForeignKeys[0].RefTable = TestCollectionsTable
	TimingBreakdownsTable.ForeignKeys[0].RefTable = ExectionInfosTable
	TimingChildsTable.ForeignKeys[0].RefTable = TimingBreakdownsTable
	TimingMetricsTable.ForeignKeys[0].RefTable = MetricsTable
}
